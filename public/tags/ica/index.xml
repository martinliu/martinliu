<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ICA on 刘征的博客</title>
    <link>https://example.com/tags/ica/</link>
    <description>Recent content in ICA on 刘征的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 23 Nov 2014 10:16:23 +0000</lastBuildDate><atom:link href="https://example.com/tags/ica/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>虚拟桌面 之我见</title>
      <link>https://example.com/2014/11/23/e8999ae68b9fe6a18ce99da2-e4b98be68891e8a781/</link>
      <pubDate>Sun, 23 Nov 2014 10:16:23 +0000</pubDate>
      
      <guid>https://example.com/2014/11/23/e8999ae68b9fe6a18ce99da2-e4b98be68891e8a781/</guid>
      <description>虚拟桌面 的业务价值 虚拟应用产生在虚拟桌面之前，虚拟应用是一种和VPN类似的原创访问方法。它其实最初实现的是图形GUI的远程访问，注意不是文字终端。它和VPN具有本质的区别，在于虚拟桌面是“终端不留数据/秘”的；这个它性拜它的传输协议所赐，虚拟桌面传输的主要是图像信息和键鼠指令。它的另外一个特性是“维护渐变”，在终端上维护近似于零（除了安装和配置虚拟桌面连接客户端程序外）；在服务器端应用升级和维护简单，主要是通过升级和更新一堆的Windows操作系统来实现。因此，主要的业务价值有两点：1）数据安全；2）维护简单。基于这些价值取向，它可以很好地胜任一下业务场景： [su_list icon=&amp;ldquo;icon: flag&amp;rdquo;]
  多网隔离、集中上网、运维/外包/审计人员访问管理
  前端操作环境和后端业务数据的分离
  呼叫中心、处理中心和窗口柜员
  移动办公、BYOD
  安全研发、协作研发
  3D虚拟桌面
  等等等等
  [/su_list]
业务价值很精练，业务场景太多这里就不赘述。
关键技术点 下面是虚拟桌面/应用的基本原理架构图。  通过上图可以对虚拟桌面的技术架构一目了然。虚拟桌面基础架构就是在数据中心里面部署的一堆Windows虚拟机，核心就在于让远程用户可以操作使用这些虚拟机里面的应用或者这些虚拟机桌面。鉴于此，核心技术主要有两个方面：Windows操作系统虚拟机的集中发布更新和管理；远程访问协议和所有终端管控策略。
Windows虚拟机的发布和更新 Windows的虚拟机有两种：Server和Desktop；虚拟应用技术主要是利用Windows Server操作系统天然的多用户性质，实现一份安装程序的多用户同时使用。虚拟桌面是复制n个预装应用的Desktop桌面操作系统来实现n个用户的使用。
1）虚拟机克隆 使用服务器虚拟化技术可以方便地从OS模板中克隆出n个虚拟机，它的挑战在于：
  创建和更新的速度要快，特别是在虚拟机数量大的情况下
  可否永久保持用户的个人数据，更新操作不会清空旧的个人数据
  存储空间要节省
  2）Stream OS 流化操作系统 这种方案是一种古老而容易被人遗忘的技术。就是很久很久以前的无盘工作站的思路。虚拟机或者物理机以网络启动的方法获得一个运行的Windows操作系统。所有的操作系统启动镜像都在服务器端统一管理，一种镜像可以对应启动n可操作系统，这些操作系统目前多以虚拟机的形式存在。它的特点
  虚拟机对磁盘的消耗非常小，磁盘是写缓存和用户数据。它的大小可以是0或者几个GB。
  创建的速度快
  大批量虚拟机启动过程对网络有一定的压力，一般需要使用隔离的万兆网
  同样有个人数据保持的问题
  更新速度非常快，所有的操作系统在母盘更新后，需要重启来更新</description>
    </item>
    
  </channel>
</rss>
