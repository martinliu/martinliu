<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NSM on Hugo Future Imperfect Slim em português</title>
    <link>https://example.com/categories/nsm/</link>
    <description>Recent content in NSM on Hugo Future Imperfect Slim em português</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 22 Dec 2010 07:28:45 +0000</lastBuildDate><atom:link href="https://example.com/categories/nsm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fiddler Timers </title>
      <link>https://example.com/2010/12/22/fiddler-timers/</link>
      <pubDate>Wed, 22 Dec 2010 07:28:45 +0000</pubDate>
      
      <guid>https://example.com/2010/12/22/fiddler-timers/</guid>
      <description>Fiddler is a Web Debugging Proxy which logs all HTTP(S) traffic between your computer and the Internet. Fiddler allows you to inspect all HTTP(S) traffic, set breakpoints, and &amp;ldquo;fiddle&amp;rdquo; with incoming or outgoing data. Fiddler includes a powerful event-based scripting subsystem, and can be extended using any .NET language.Fiddler is freeware and can debug traffic from virtually any application, including Internet Explorer, Mozilla Firefox, Opera, and thousands more.
  ClientConnected- Exact time that the client browser made a TCP/IP connection to Fiddler.</description>
    </item>
    
    <item>
      <title>Make Cacti more easier</title>
      <link>https://example.com/2010/07/23/cacti-easier/</link>
      <pubDate>Fri, 23 Jul 2010 01:46:33 +0000</pubDate>
      
      <guid>https://example.com/2010/07/23/cacti-easier/</guid>
      <description>Cacti是我最喜爱的一个网管软件之一。网站http://cactiez.cactiusers.org/ ；该网站的主人吧Cacti嵌入到了Linux的安装光盘中，实现了Cacti的一键式安装，这正是我所关注的关于开源应用的重要的一个步骤。我称之这是在解决开源软件应用的“last mile”问题。开源软件的潜在用户往往有这样几个特点：
  技术力量弱，有些可能根本就不知道什么是Linux，什么是open source
  需求相对明确和简单
  无法获得中文的技术支持和培训
  CactiEz让人能在30分钟之内上手开始使用Cacti，从根本上解决了整套软件的安装和配置工作。
英文版下载地址：http://cactiez.cactiusers.org/
中文版下载地址：http://linux.chinaunix.net/bbs/thread-1049886-1-1.html</description>
    </item>
    
    <item>
      <title>Some useful tools</title>
      <link>https://example.com/2009/07/04/some-useful-tools/</link>
      <pubDate>Sat, 04 Jul 2009 05:41:06 +0000</pubDate>
      
      <guid>https://example.com/2009/07/04/some-useful-tools/</guid>
      <description>I am just cleaning up my bookmarks. Some of them could not be deleted. I&amp;rsquo;d like to list here.
This is a netflow monitor tool, you can capture, graph and store data.
Founded in 1992, the Distributed Management Task Force, Inc. (DMTF) is the industry organization leading the development of management standards and integration technology for enterprise and Internet environments.
Social Networking Meets Business, Concursive have CRM, online communitie, collaboration tools.</description>
    </item>
    
    <item>
      <title>NeDi - A Swiss Army Knife of network device management</title>
      <link>https://example.com/2008/09/13/nedi-a-swiss-army-knife-of-network-device-management/</link>
      <pubDate>Sat, 13 Sep 2008 15:47:28 +0000</pubDate>
      
      <guid>https://example.com/2008/09/13/nedi-a-swiss-army-knife-of-network-device-management/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.nedi.ch/&#34;&gt;&lt;img src=&#34;http://www.nedi.ch/lib/tpl/minima/images/nedi-s.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br /&gt;There is a shot list of its feature&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Auto discovery network deivce
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Network &lt;a href=&#34;http://www.nedi.ch/doku.php?id=tutor:topology-map&#34;&gt;Topology-Map&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;SNMP based monitoring
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Network performance and inventory management
&lt;br /&gt;&lt;br /&gt;[&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Systems Monitoring Shootout</title>
      <link>https://example.com/2008/08/04/systems-monitoring-shootout/</link>
      <pubDate>Mon, 04 Aug 2008 09:26:57 +0000</pubDate>
      
      <guid>https://example.com/2008/08/04/systems-monitoring-shootout/</guid>
      <description>Please download it here A paper from Open Management Consortium
This is a paper from &amp;ldquo;2008 Ottawa Linux Symposium&amp;rdquo;. It will give you a nice insight about some great NSM projects. It is talking about OpenNMS, Zabix, Zenoss, GroundWorks and Hyperic, those might b the hottest projects around NMS field. If you are looking for a open source network and system monitoring solution, or you are testing one of them; you should check it out.</description>
    </item>
    
    <item>
      <title>盛夏严防服务器中暑</title>
      <link>https://example.com/2008/06/15/monitoring-temperature-and-fan-speed-using-ganglia/</link>
      <pubDate>Sun, 15 Jun 2008 15:50:31 +0000</pubDate>
      
      <guid>https://example.com/2008/06/15/monitoring-temperature-and-fan-speed-using-ganglia/</guid>
      <description>哦不是中暑:-)而是发烧；夏天就要到了，监控服务器的主板温度和风扇是否工作正常有变的比较重要起来了。
今天发现一个文档 Monitoring Temperature and Fan Speed Using Ganglia and Winbond Chips 这个是一个不错的文档，值得参考一下。
文章是写如何在Ganglia中实现对主板温度和风扇的监控。以前也有人问过我这个问题“Ganglia的监控图上为什么没有温度也风扇的图”；相信您看后就知道怎么回事了。
下面是我对关于温度和风扇监控的一点想法：

 主板的芯片能提供这些数据的访问给操作系统  操作系统上有sensors这个命令工具用来采集这些数据  有合适的脚本分析上面命令的输出数据转换成能被监控工具（ganglia， cacti，nagios， opennms）采集的格式等  往往这两个参数并不是监控工具的默认采集数据，所以需要扩展采集工具的采集集合，收集并保存这些数据。  在监控工具如Ganglia中显示这些数据，当然如果有自动报警功能就好了，可以及时通知管理员给服务器消暑：） Ganglia是最好的网格或者群集的监控软件，不过当你用它的使用也要注意到下面这个问题：
What does Ganglia not provide?
Ganglia does not attempt to address service monitoring or reporting (unlike Nagios). So far, we have not come across a single monitoring solution that addresses all of our needs effectively.
上面所说的服务监控是说，它的特点不是想Nagios和OpenNMS那样对服务器系统做非常全面细致的监控，它默认的监控指标比较少不过对于监控网格或者群集这种数量巨大的对象来说这些比较经典的指标也够用了，特别是对服务器的可用性，CUP、RAM，网络资源利用率和工作负载等数据的采集也比较够用了。如果你使用它来监控数量不是很多服务器的话，你可以使用它的可扩展性加入任何想监控的KPI。我最喜欢的还是它能把服务做分组，而且垂直的方向上可以加N层的嵌套；这种组织方式能比较好的适用于业务系统众多而复杂的数据中心。  </description>
    </item>
    
    <item>
      <title>A follow-up post</title>
      <link>https://example.com/2008/06/09/a-follow-up-post/</link>
      <pubDate>Mon, 09 Jun 2008 20:42:08 +0000</pubDate>
      
      <guid>https://example.com/2008/06/09/a-follow-up-post/</guid>
      <description>I&amp;rsquo;d like to know about this.
[poll id=&amp;ldquo;2&amp;rdquo;]</description>
    </item>
    
    <item>
      <title>zenoss opennms comparison/比较</title>
      <link>https://example.com/2008/05/31/zenoss-opennms-comparison/</link>
      <pubDate>Sat, 31 May 2008 05:52:22 +0000</pubDate>
      
      <guid>https://example.com/2008/05/31/zenoss-opennms-comparison/</guid>
      <description>在我做任何比较之前还是先看看Wiki上对一系列网管监控软件的比较，源网页地址在 http://en.wikipedia.org/wiki/Network_monitoring_comparison
上面一共列出了12中不同的开源软件，从13个方面以矩阵的方式来做比较。

Nagios和Cacit都是比较老牌的开源网管软件；OpenNMS是稍微点出现的项目，它集成了前两者的部分优点，界面是Java的界面，后台的自动发现机制非常的方便。Zenoss是一个比较年轻的项目，所谓长江后浪推前浪，它是纯python语言编写的一个软件，架构非常的不错，而其界面做的非常好，面向对象编程的理念处处可见。从根上可以看出它们的主要编程语言各有不同，这也决定了它们的特点和发展方向的不同，这里仅以此作为一个见到的比较和总结。其实我想写一个更好的比较表，如果您感兴趣的话请留言，我们可以一起做一个更好的比较。</description>
    </item>
    
    <item>
      <title>Ganglia install and configure</title>
      <link>https://example.com/2008/05/24/ganglia-install-and-configure/</link>
      <pubDate>Sat, 24 May 2008 02:15:27 +0000</pubDate>
      
      <guid>https://example.com/2008/05/24/ganglia-install-and-configure/</guid>
      <description>我准备安装的版本是ganglia-3.0.7 ， 参考的安装文档是http://www.linuxsir.org/bbs/thread309837.html
rpm的安装会比较省事。rpm安装都会很正常，不过在Suse下面需要注意一下两点：

 gmond和gmated的启动脚本不是rpm包中默认装上的那个，那个脚本适用于redhat linux；下载源码编译之后在gmond/ gmated/的文件夹里有后缀为 .SuSE的哪两个文件才对。  rpm吧gmated的web界面默认安装路径是/var/www/http/ ，SuSE下的apache的路径是 /srv/www/htdoc/；安装完后copy或者连接过来 配置：
 gmond.conf 更具我参考的安装文档产生这个文件的命令是 gmond -t &amp;gt; /etc/gmond.conf；rpm安装包中有这个文件，如果需要恢复到默认状态可以使用这个命令。  gmated.conf 是服务器端的主要配置文件，详细阅读一下源码包中的那个html文件对这个文件的配置会有帮助 安装过程中出现的问题如下：在启动gmond的时候启动失败，debug一下可以看到下面的错误。
sles:~ # gmond &amp;ndash;debug=9
slurpfile() open() error on file /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq: No such file or directory
udp_recv_channel mcast_join=239.2.11.71 mcast_if=NULL port=8649 bind=239.2.11.71
Error creating multicast server mcast_join=239.2.11.71 port=8649 mcast_if=NULL family=&amp;lsquo;inet4&amp;rsquo;. Exiting.
在所有虚拟机（host-only 网络设置）上都遇到这个错误。一次一个NAT网络的虚机上正常
至今觉得这是一个网络的问题，还没有想出正确的配置和解决方法。如果您有什么好建议请留言。  </description>
    </item>
    
    <item>
      <title>ISO open source software</title>
      <link>https://example.com/2008/05/16/iso-open-source-software/</link>
      <pubDate>Fri, 16 May 2008 07:30:04 +0000</pubDate>
      
      <guid>https://example.com/2008/05/16/iso-open-source-software/</guid>
      <description>There are some projects do have ISO file for downloading. That means you could run this solution with in 20 minutes on a physics machine or a vmware session. You can just download this ISO image file and burn it on a blank cd; then you will insert it into DVD/CD driver of your target machine, after press few enter keys; You finally got all software on this box. Reboot this machine, you get everything up an running on it; including a Linux OS and everything which the solution depends on.</description>
    </item>
    
    <item>
      <title>Using Ganglia for cluster and grid monitoring</title>
      <link>https://example.com/2008/04/16/using-ganglia-for-cluster-and-grid-monitoring/</link>
      <pubDate>Wed, 16 Apr 2008 09:41:06 +0000</pubDate>
      
      <guid>https://example.com/2008/04/16/using-ganglia-for-cluster-and-grid-monitoring/</guid>
      <description>Ganglia是一个用来监控群集和网格计算环境的软件。它是可以扩展的分布式监控系统，它基于多播协议，数据存储和传输的格式都是基于开源的标准：XML/XDR/RRDTool/APR/Apache/php等。
应用Ganglia的几个理由：
 在一个点上监控包含很多服务器的群集，单个cluster内服务器的数量比较多，需要从整体看某个cluster的可用性和性能，也要能看到单独某个机器的运行情况。 监控分布式的cluster环境，例如跨网段和地域的灾备的环境。 需要监控系统能分N级的查看方式，以银行为例：北数据中心&amp;ndash;&amp;gt;网络银行业务&amp;ndash;&amp;gt;个人网银系统&amp;ndash;&amp;gt;web server 群集&amp;ndash;&amp;gt; WebSvr001；可以按业务逻辑和系统架构逻辑。 需要724365的监控整个系统，能得到可用性、性能和容量等方面的报表。  应用Ganglia的几个好处：
 监控能力的无限扩展，被管理服务器数量达数千个甚至根多。 纯web前端，apache和php的应用页面方便定制 强壮的系统结构，并且具备可以任意扩展采集数据KPI的特点 适合高性能计算或者网格计算环境。  Ganglia应用需要注意的方面：
 在每一个节点上需要部署一个代理程序，考虑到对代理配置的变更的工作量，在部署代理之前，需要彻底的分析需求，尽量减少部署过程中配置变更带来的多于调试的工作量。 部署后期的变更工作，如果比较频繁的话将导致后台维护工作量增大，可以考虑使用一些开源的软件分发和自动化配置管理的工具。这些配置的初始化工作可以与OS的安装部署工作一起考虑。  它被很多大学和专业机构研究并使用，所以有非常多的专业文档可以参考，哪行文档多分析了Ganglia的系统架构和特点，多系统的原理介绍的非常细致。下面是我收集的几个关于这个软件的文档请参考。并且在它们的网站上也可以看到很多相关的资源连接，都是非常好的实施方面的详细文档。
If you need more detail please take look those documents below.</description>
    </item>
    
    <item>
      <title>Hyperic HQ 3.2 new features</title>
      <link>https://example.com/2008/02/02/hyperic-hq-32-new-features/</link>
      <pubDate>Sat, 02 Feb 2008 06:02:00 +0000</pubDate>
      
      <guid>https://example.com/2008/02/02/hyperic-hq-32-new-features/</guid>
      <description>If you&amp;rsquo;d like to check out release note, please click here. http://support.hyperic.com/confluence/display/DOC/HQ+3.2+Release+Notes
I had a quick install on RHEL 5. For some features what I saw, I took some screenshots as bellowing. I hope this helps you to understand what&amp;rsquo;s new in 3.2 and save a little bit time for you if you do not wants to install it. I will describe in Chinese.
New Nav menu 新导航菜单 
导航菜单的名称变成了：Dashboard &amp;ndash; Resources &amp;ndash; Analyze &amp;ndash; Administration 菜单的风格稍微有一点变化。Analyze下面可以进入Alert Center去查看报警信息。我觉得3.</description>
    </item>
    
    <item>
      <title>Build Zenoss 2.1.2 on Redhat Enterprise Linux 5</title>
      <link>https://example.com/2008/01/30/build-zenoss-212-on-redhat-enterprise-linux-5/</link>
      <pubDate>Wed, 30 Jan 2008 13:22:00 +0000</pubDate>
      
      <guid>https://example.com/2008/01/30/build-zenoss-212-on-redhat-enterprise-linux-5/</guid>
      <description>Well, it is the first time to running a RHEL 5 for me, at same time got zenoss built successfully on it. zenoss-2.1.2 was build from source, the whole process went a while since RHEL is in one of my VMware session; CPU %sy was pretty high during building source code.
Build zenoss-2.1.2 
The INSTALL.txt file is good enough, my installation how-to can be really sample:

 Read INSTALL.</description>
    </item>
    
    <item>
      <title>网管系统的测试工具</title>
      <link>https://example.com/2008/01/21/trap-tools/</link>
      <pubDate>Mon, 21 Jan 2008 17:34:00 +0000</pubDate>
      
      <guid>https://example.com/2008/01/21/trap-tools/</guid>
      <description>很多网络系统管理软件都有Trap管理的功能，在系统的安装和配置过程中；验证系统是否能正常处理Trap是很麻烦的事情。原因有很多，发送trap的设备没有，设备上的snmp没有启用，或者设备都正常，到网管系统的网络可能有防火墙吧snmp给堵住了。
为了方便的测试和配置网络管理监控系统，需要手工生产和验证trap的发送和接收。最近偶然在网上发现了这样几个免费（非OSS软件）软件工具，可以做这件事。
下载的网站是：http://www.ncomtech.com/ 下面吧我所下载和测试的软件做一个小结，希望对您有所帮助：

 Trap Receiver http://www.trapreceiver.com/ 是一个Windows程序非常小，安装了之后会在windows安装一个服务。程序的启动目录是C:\Program Files\Trap Receiver\TrapRcvr.exe 程序界面非常简单，如下图所示： 
点击configure按钮后可以做一些配置：Action －－当收到某些特定的trap是出发邮件、声音等动作；logging－－把收到的trap信息按照某种格式记录在文件中；Mibs－－导入目标设备的trap文件，让这个接收器能认识到另外的trap格式。还有其他配置信息也非常简单。
  
 **TrapGen **http://www.ncomtech.com/trapgen.html 顾名思义－这就是一个手工生产和发送trap的工具，是一个命令行工具。example: trapgen -d 192.168.2.3；上图中的第一条和第三条就是用这个命令发出的trap。欲知详细帮助信息，使用&amp;quot;trapgen -h&amp;quot;  I/F Spy http://www.ncomtech.com/ifspy.html 是一个网络接口枚举工具，它通过snmp协议去访问目标设备的IFMIB信息，显示所有IFMIB相关信息。  UDP Listen http://www.ncomtech.com/udplisten.html UDP协议的监听程序，是命令行工具，有linux和Solaris版，能用作一个debug工具。  Thingy http://www.ncomtech.com/thingy.html是一个Windows下的GUI工具，能帮你监控三个SNMP指标，采集并做大于等于和小于的逻辑判断然后显示不同的信号灯。 这几个小工具都很小，都能在windows下安装和使用对网络系统监控软件的安装、配置和排错应该有一定的帮助。如果您有什好的小工具也请回复一下本文。  </description>
    </item>
    
    <item>
      <title>Hyperic HQ Engerprise 3.1.4 测试报告</title>
      <link>https://example.com/2008/01/12/hyperic-hq-engerprise-testing/</link>
      <pubDate>Sat, 12 Jan 2008 15:26:00 +0000</pubDate>
      
      <guid>https://example.com/2008/01/12/hyperic-hq-engerprise-testing/</guid>
      <description>多系统/跨平台支持 
如下图所示，我安装了并运行了四个代理程序。HQ的服务器是安装在我的笔记本上的是Windows XP平台的。HQ管理服务器在windows下的安装是非常简单的，两分钟就能完成。安装包中包括了Jboss和PostgreSQL。其它三个测试的代理程序分别安装在OpenSUSE Linux 10.3 （VM），AIX 5.3 和 Solaris 10 （5.10），代理程序的安装过程非常简单，需要注意的是保证代理和管理服务器的时钟同步。否则数据收集和显示的时间会错位。

对不同平台的数据采集是不同的，代理能根据操作系统而已采集不同的数据指标；比如CPU的监控指标windows、linux，Aix和Sun都有细微差别。
Dashboard首页－－仪表盘 
HQ登陆后的首页，第一个感觉是－专业。算是一个Portal门户界面。页面顶端是最新的两个报警信息，和水平导航条。右边的模块有：资源搜索、保存的资源图、可用性图和最近增加的平台等。右边的模块有：自动发现、最爱资源，最近报警、控制动作问题资源和监控指标视图等。整体来看：所有的模块都可以配置、拖拽、添加和删除；您可以按照自己的喜好设置布局。对于网管来说：最近报警、和问题资源和监控指标视图应该是非常重要的；通过这些内容可以立刻了解到所关心的资源和服务的整体状况。
浏览资源 
Platforms平台－－四个监控对象：所显示的是所有被监控对象，HQ主要是Agent based的监控方式，当然也可以通过snmp方式监控网络设备，不过这个我没测过它监控网络设备的能力。我安装测试的是HQ企业版，所以我只能监控到4个被监控对象；当然如果是付费用户的话就可以增加被管理目标的数量了，多话钱是肯定的了；好像HQ是按照被监控节点的数量收钱的。测试这个企业版的目的是，浏览一下它所有的功能，下面所说的有些功能是企业版才有的开源版本是没有的。
Servers服务器－－21被管理服务器：HQ的自动发现功能不仅能发现到服务器上的基础资源（CPU、文件系统和网络）；还能自动发现被监控平台上的数据库、web和App服务等。这些服务有的是需要一些配置才能采集到数据的，例如对数据库的监控，MySQL需要在HQ服务器上输入一个MySQL的用户名和密码（密码不能为空），这个用户需要有能运行status命令的权限。Oracle数据库需要按照HQ页面上的提示在数据库实例上，用DBA的权限运行一个命令，也建立一个用户。代理程序是通过这个用户通过JDBC链接到数据库上采集监控指标的。对于Apache来说，是需要配置Status模块的。HQ也算得上是单一代理的监控方式了，这一个特性是非常重要的；和BMC公司的Patrol产品有些相似。单一代理能很好的降低被监控服务器的额外负担。
告警事件规则 
默认情况下所有HQ里没有任何一个报警规则的。不过你可在它的问题资源模块上看到OOB次数。OOB是Out Of Bound的简称，意思是超出边界，那么边界在那？边界在Baseline上，baseline会在每几天算一次，它并不是平均值，某个监控资源的实际忙闲程度水平的参考面。例如如果你的CPU平时都不超过30％的话，它的基线可能是20％，如果某次采样数据是24％了，OOB的数量就被加一；它表明该资源的使用异常了，需要引起你的注意了。HQ企版可以设定固定fix阀值，也可以设定动态阀值。所谓让很多企业级用户梦寐以求的动态阀值，其实就是比对BaseLine来报警的机制。HQ的报警规则可以是：例如CPU使用率超出Baseline的15％；那么这样CPU使用率的报警范围就是动态的了。报警规则的设置可以根据不同的platform而定，可以给某了platform定义一套默认的规则级应用到所有监控对象上。还能在某个监控对象上设置特殊的报警规则。报警条件可以是多条件的逻辑判断。报警事件可以每次触发时都发出，也可以在某个时间段上持续到达多少次才发出，发出的告警信息可以发给某个人或者某组人，还能在时间内升级等。显然这就是某些用户梦想中的事件压缩、峰值抑制、事件升级等功能。HQ的企业版还能从事件上触发Action。
报表中心 
默认的报表好像是有7个，可以输出成PDF，excel，csv和html格式。不得不说的是HQ的数据采集方式应该是从HQ服务器上向Agent发起的，取得了数据后，保存在Postgresql数据库中。HQ服务器端保存了所有数据，不过如果在某个时间端，HQ服务器不能和agent通信的话，这段数据就是空白的。这一点可呢功能和所有其它开源软件都一样。而CA的UDPM和BMC的Patrol是不同的，Agent采集到的数据可以短期的保存在被管服务器端；采集数据的连续性不受网络影响。
总结 
HQ企业版的功能太强大了，可以与商业软件媲美；单基于Baseline的动态阀值报警就是Big four所不能提供的。不过企业版是不能用的：虽然能使用到所有功能，不过只能监控4个服务器。在浏览HQ网站文档的时候，某个功能如果后面有一个红色的星号，那么它就是企业版的功能，需要付费使用了。不过它开源版的功能已经非常不错了，而且有这么优秀的一个框架使用；能支持二次开发和扩展。下次在提供一个开源版的测试报告。</description>
    </item>
    
    <item>
      <title>如何配置OpenNMS中的 Path outage －路径失效</title>
      <link>https://example.com/2007/12/23/opennms-path-outage/</link>
      <pubDate>Sun, 23 Dec 2007 12:20:00 +0000</pubDate>
      
      <guid>https://example.com/2007/12/23/opennms-path-outage/</guid>
      <description>这个功能是是1.3.2之后加入的。它解决的问题是：当OpenNMS系统和被监控节点之间的网络路径失效了，或者网络链路down了，那么OpenNMS就需要抑制发送这个节点的告警。例如，如果一个广域网链路down了，所有由这个链路连接的远程站点的所有节点就都看起来down了。因为你将会得到一个路由器上远端链路无响应的告警，而不需要得到在这个路由器后所有节点Down的告警。如果当一个远程节点不响应了，OpenNMS会测试一下那个远程路由器广域网接口的ip，通过对这个ip的测试OpenNMS觉得是否该发出此节点Down的告警。OpenNMS测试的这个节点叫做此节点的Critical Path IP Address（关键路径Ip地址）。
给一个节点配置Path Outage
在OpenNMS的节点配置上，点击Admin, 点击 Configure Path Outage，输入对于这个节点来说关键的ip地址。点击Submit按钮。
配置基于规则的Path outage
可以为一组节点配置一个规则。在总导航条上选中Admin，Configure Notifications，点击Configure Path Outages，在Define the Critical Path下面输入一个Ip地址，例如：192.168.0.1（这种格式）；在Current Rule下面输入地址范围，例如：IPADDR IPLIKE 192.168.0.*；可以选中Show matching node list后的box，点击Validate Rule Results连接；在下面的页面可以查询到受那个关键Ip地址所影响的所有节点；最后点击Finish按钮完成配置。
查看Path Outage
在总导航条上选中Path Outages，在页面中你可以看到你配置的所有Path Outages的规则。
这个文章基本上翻译的是http://www.opennms.org/index.php/Path_Outage_How-To 只是觉得这是个不错的功能，所以就大概翻译了一下，希望对感兴趣的朋友们有帮助。由于手头硬件环境的限制，我还没有真实测试过这个功能，如果您对此功能做了什么测试的话，也欢迎和我交流，请留言或者或发邮件给我。</description>
    </item>
    
    <item>
      <title>如何使用OpenNMS中的StrafePing功能</title>
      <link>https://example.com/2007/12/21/opennms-strafeping/</link>
      <pubDate>Fri, 21 Dec 2007 07:14:00 +0000</pubDate>
      
      <guid>https://example.com/2007/12/21/opennms-strafeping/</guid>
      <description>自从1.3.7之后OpenNMS加入了Smokeping功能，取名为StrafePing。从此OpenNMS也成了Smokeping的银牌赞助商。

安装：

StafePing做为一个Poller默认被安装在1.3.7后的软件中，不需要单独安装和配置。

配置：

没有单独的配置文件，相关的配置信息需要修改文件： poller-configuration.xml中的相关部分。需要在 标记中加入需要使用的Ip地址范围。启用之后StrafePing做为一个被监控的服务显示在这个节点上。

默认安装OpenNMS并不使用这个服务，是为了减小网络流量；推荐根据OpenNMS硬件的能力只对部分节点做这种监控。

使用：

需要产品StrafePing的图形有两种方式。1）在OpenNMS首页上，点击右侧的Resources Graphs，选中产看的机器，在Response Time下面的列表中选中需要产看的Ip地址，点击Submit，即可产看到图形。2）在节点产看页面，选中Resources Graphs，在Response Time下面的列表中选中需要产看的Ip地址，点击Submit，即可产看到图形。

如何想看懂StafePing****的图

请参考我以前的blog http://lzheng.blogspot.com/2007/02/smokeping-rttround-trip-time-tcp-tcp.html

参考Smokeping的网站http://oss.oetiker.ch/smokeping/doc/reading.en.html</description>
    </item>
    
    <item>
      <title>发送告警短信的方法，德国工艺服了</title>
      <link>https://example.com/2007/12/14/gsm-modem-alert-sms/</link>
      <pubDate>Fri, 14 Dec 2007 17:15:00 +0000</pubDate>
      
      <guid>https://example.com/2007/12/14/gsm-modem-alert-sms/</guid>
      <description>在OpenNMS的邮件组中偶然发现的这个解决方案，利用这个方案你可以用串口连接外置的GSM modem来发送短信。
这个方案的名称叫做：SMS Server Tools 网址在－&amp;gt; http://www.meinemullemaus.de/smstools/index.html
工作原理 －&amp;gt; http://www.meinemullemaus.de/smstools/slideshow/page1.html
据说是可以运行在任何平台上，能支持很多设备，不过我没用试过，记录一下日后可能有用。</description>
    </item>
    
    <item>
      <title>如何用通过OpenNMS监控Windows 服务器</title>
      <link>https://example.com/2007/12/14/opennms-monitoring-ms-windows/</link>
      <pubDate>Fri, 14 Dec 2007 11:34:00 +0000</pubDate>
      
      <guid>https://example.com/2007/12/14/opennms-monitoring-ms-windows/</guid>
      <description>OpenNMS可以监控可用性和性能参数。下面看看OpenNMS监控Windows服务器的三种情况。
第一种情况：
Windows机器上没有安装SNMP服务，在自动发现了这个节点后，它会被加入节点列表，之后它被定期的轮询。如果这个节点断网了，OpenNMS会报警；同时这个节点的可用性被计算。自动发现还会发现这个机器上的服务。ICMP是肯定会有的，还可能有http等其他的服务；这些服务也会被定时的轮询，如果某个服务停了，这个节点的整个的可用性受到影响。这种情况下该节点的所有服务的响应时间会被OpenNMS收集并保持历史数据。
第二种情况：
安装了SNMP服务。先说一下windows服务的安全性，默认情况下public是默认的只读密码；为了更加安全可以配置其他的只读密码，并指定某些特定的IP才能访问这个节点。这个策略在Windows的觉策略中很容易实现，或者说建议使用域控制器来管理这个策略，比较方便。假定OpenNMS能访问该节点的snmp服务的情况下。这些数据会增加：SNMP Attributes；在选择了资源图后，可以看到snmp的节点数据和接口数据。进入后可以看到，其实收集 的是一个tcp／ip接口上基本的信息：流量，连接数，丢包，错包等。个人认为流量是个最有用的数据，特别是对于一些简单的web/ftp服务器也就够用了。
第三种情况：
我们需要监控到操作系统的性能数据cpu/disk/RAM等。就需要安装一个snmp代理，这个代理可以提供这些信息，opennms才能通过snmp协议收集这些数据。需要到下面网址下载一个免费的snmp代理，当然这个产品也有收费版本：http://www.wtcs.org/informant/download.htm 这个代理很小需要在windows机器上安装一下。默认情况下OpenNMS的对windows采集模板中包含了对cpu/disk/ram等数据的采集，等到下一次OpenNMS在采集这个机器的时候相关数据就会被显示在节点snmp数据下面。
这里是通过这个免费的snmp代理能采集到的数据：
/Program Files/SNMP Informant/standard/mibs/informant-std-tree.txt
&amp;ndash;standard(1.3.6.1.4.1.9600.1.1)
|
+&amp;ndash;logicalDiskTable(1)
| |
| +&amp;ndash;logicalDiskEntry(1) [lDiskInstance]
| |
| +&amp;ndash; r-n InstanceName lDiskInstance(1)
| +&amp;ndash; r-n Gauge32 lDiskPercentDiskReadTime(2)
| +&amp;ndash; r-n Gauge32 lDiskPercentDiskTime(3)
| +&amp;ndash; r-n Gauge32 lDiskPercentDiskWriteTime(4)
| +&amp;ndash; r-n Gauge32 lDiskPercentFreeSpace(5)
| +&amp;ndash; r-n Gauge32 lDiskPercentIdleTime(6)
| +&amp;ndash; r-n Gauge32 lDiskAvgDiskQueueLength(7)
| +&amp;ndash; r-n Gauge32 lDiskAvgDiskReadQueueLength(8)
| +&amp;ndash; r-n Gauge32 lDiskAvgDiskWriteQueueLength(9)
| +&amp;ndash; r-n Gauge32 lDiskAvgDiskSecPerRead(10)</description>
    </item>
    
    <item>
      <title>OpenNMS的Yum的安装方式，安装简单了很多</title>
      <link>https://example.com/2007/12/13/opennms-yum-install/</link>
      <pubDate>Thu, 13 Dec 2007 10:14:00 +0000</pubDate>
      
      <guid>https://example.com/2007/12/13/opennms-yum-install/</guid>
      <description>OpenNMS网站的安装文档：
http://www.opennms.org/index.php/Installation:Yum
下面是我在一个CentOS4的机器上按照上面文档安装的。


 先浏览一下这个页面 http://yum.opennms.org/repofiles/ 找到适合你的OS的那一行。  我选择安装的是1.3.10-0.8030.snapshot 这是当前开发的最新版本的OpenNMS； 运行命令： rpm -Uvh http://yum.opennms.org/repofiles/opennms-repo-snapshot-rhel4.noarch.rpm  检查是否安装成功， 运行命令： yum list opennms ；我能看到如下输出结果   [root@jng-hkg-48-dyn3328831 ~]# yum list opennms

Repository opennms-stable-common is listed more than once in the configuration

Repository opennms-stable-rhel4 is listed more than once in the configuration

Setting up repositories

Reading repository metadata in from local files

Available Packages

opennms.noarch 1.3.10-0.8030.snapshot opennms-snapshot</description>
    </item>
    
    <item>
      <title>破门而入Zenoss总部–Break in at Zenoss HQ</title>
      <link>https://example.com/2007/12/07/zenoss-21-beta/</link>
      <pubDate>Fri, 07 Dec 2007 03:01:00 +0000</pubDate>
      
      <guid>https://example.com/2007/12/07/zenoss-21-beta/</guid>
      <description>Zenoss 2.1 Beta版有什么新功能，看了这部三分钟的电影您就能知道了：http://content.screencast.com/media/c01d3364-2df0-4ccd-90f8-964f9268c326_ee342243-dec3-4aaf-bb9e-c82f06220438_static_0_0_Zenoss Beta 2_1 Compromised.wmv这部电影使用了碟中谍的背景音乐，和星际的片尾字幕显示。为了方便大家的观看，下面是片中部分台词
赶快进入看看能找到什么？Zenoss在那，它在哪？就在这，打开门来看看是否有一Zenoss2.1 bate正在运行？快来看看这什么东西，干嘛的？这什么玩意？我不确定我能做这事！这是什么？看上去是一个地图么？Google Map，这是Google Map么？对啊，是Google Map～这些绿色的圆点是什么？来点击一下看看～看上去像是显示了一个数据中心之类的东西！Locations～哦!你可以拖拽这些东西？是的～这看上去，好像布局是可以配置的？哦 My god！哦你可以单击来选择一个最喜欢的布局？是啊，来看看～哇哦～～看这些黄色的按钮，他们是图标还是按钮？来点击一下看看先！这就来到了事件窗口了～来看看这个网络map怎么样？这些玩意还真的是浮动的！！非常cool！这个小企鹅是个啥？这个可能是个Linux服务器～哦，你可以告诉我windows服务器是啥，那个是windows服务器的图标？哦 My God！！！你可以点击之后看到一个小圈在上面。哇！！是在是cool！！我喜欢它！！
在拍摄这个电影期间没有Zenoss的员工受伤，如需更多zenoss Beta 2.1的信息请联系我们www.zenoss.com
观后感：
一个貌似比较无知比较神经质傻哥们对Zenoes的新特色进行了一番探索，一个开发人员尝试给他做了一个演示。从一定程度上看出Zenoss开发人员比较兴奋，从侧面可以看出他们比较happy比较喜欢他们的工作，喜欢这个产品。我想这可能是一个产品创造性的主要源泉。开源软件人的创造性大于商业软件，商业软件是金钱驱动的，是商业；我觉得商业软件的开发人员很难把自己的创作性投入产品中，起码在中国是这样。
关于Zenoss 2.1，废话少说最快的体验方法莫过于直接使用它。一种不需要安装的方式是直接下载安装好的VMWare虚拟机。你只需要到VMWare下载一个VMWare Player，在下载这个Zenoss的虚拟机压缩文件就成：http://nchc.dl.sourceforge.net/sourceforge/zenoss/zenoss-2.1.1-x86.vmware.zip下载并且解压缩后您就可以使用了。它是使用DHCP的在启动之后就能在root登录的console上看到登录的网址，请登录端口8080的那一个。登录密码是admin/zenoss，have fun～～～
功能点评：
先请看：http://www.zenoss.com/community/code/zenoss-2.1/zenoss-core-2-1 文中提到的电影下载自本页。我仅仅感受了一下界面并没有深入功能。就界面上讲，我觉得他们做的非常好。界面上的每一块基本上都是可以伸缩和隐藏的，好像在非IE的浏览器里显示的更好。主页上的Dashboard是可以配置的象MSN Space的页面一样的定制方式。Google Map的引入使人眼前一亮，我曾经在OpenNMS，Cacti，Unicenter中尝试Map功能;Zenoss在这个功能上创意和功能都大大超出了其他产品。他的网络地图怎一个cool字了得，做到这个份上对于3层网络拓扑图来说算是一种很高的境界了。
我准备使用的是它的自动发现功能和对JXM监控的功能。如果您对这个软件有什么心得的话别告诉我。
后记：
我仔细看了一下Zenoss.com网站，发现两年之内变化还是蛮大的。最大的方面是在它提供的技术支持和服务上。Zenoss Enterprise Edition的 Zenoss Subscriptions定价从66$到150$不等，同时还提供了培训、实施和定制等服务。前一段时间看到的相关新闻中提到了Zenoss可以列入10大最赚钱的开源软件之一（网管类）。他们的Zenoss很happy，他们公司也很happy。还真是鱼和熊掌兼得。</description>
    </item>
    
    <item>
      <title>Zenoss 2.0 安装失败：）</title>
      <link>https://example.com/2007/09/06/zenoss-20-install/</link>
      <pubDate>Thu, 06 Sep 2007 09:35:00 +0000</pubDate>
      
      <guid>https://example.com/2007/09/06/zenoss-20-install/</guid>
      <description>今天是在没有心情搞了。快被Zenoss的网站给搞糊涂了。
我准备好了一个Suse10的机器来装Zenoss。
首先想到的是上http://zenoss.com
在下载的页面，我有点差异了，怎么系统兼容表里命名写这有suse10的rpm包，而下载连接的列表里确只有redhat和centos的安装包，奇怪！！！！
接着看看文档把，发现新的希望：http://www.zenoss.com/community/docs/install-guides/install-on-suse-10/ 
看看这文档，乍一看很不错啊，写的步骤非常清晰，大喜。没看完我有纳闷了，他明明也说Zenoss-2.0.0-0.sles10.i386.rpm这样一个安装文件啊。算了去google搜一下把，看到的帖子都来自zenoss的论坛啊，发现满世界的人都在找这个文件，哦，地球人都知道啊 ！
还是不死心，去sourceforge搜，结果一样，也没有。
我昏啊，你们明明写这支持，还有安装文档，为啥就不提供一个下载的连接呢？？？
Zenoss的人你们都脑子进水了么！！呵呵第一次这么说开源的人，这次真的是无奈得很，以前把这种信息的搜寻和troubleshooting做为一个乐趣，现在真的没这样耐心了。
最终zenoss的安装，宣告失败！！ :-)
一晃三个月都没更新这个blog了！！！～～～！！！！继续开源ing </description>
    </item>
    
    <item>
      <title>How to install  hyperic-hq on openSuse 10.2</title>
      <link>https://example.com/2007/06/21/how-to-install-hyperic-hq-on-opensuse-102/</link>
      <pubDate>Thu, 21 Jun 2007 08:58:00 +0000</pubDate>
      
      <guid>https://example.com/2007/06/21/how-to-install-hyperic-hq-on-opensuse-102/</guid>
      <description>Make the hq and group 
groupadd hq useradd -c &amp;lsquo;hyperic hq&amp;rsquo; -d /home/hq -g hq -s /bin/bash hq mkdir /home/hq chown -R hq.hq /home/hq
 
  ****Untar installer package and install **** 
cd /home/hq tar zxf hyperic-hq-installer-3.0.4-389-x86-linux.tgz chown -R hq.hq . su hq hq@Suse:~&amp;gt; cd hyperic-hq-installer/ hq@Suse:~/hyperic-hq-installer&amp;gt; ls LICENSES.txt agent-3.0.4.tgz installer-3.0.4 server-3.0.4.tgz setup.bat setup.sh shell-3.0.4.tgz hq@Suse:~/hyperic-hq-installer&amp;gt; ./setup.sh Unpacking JRE to temporary directory /tmp/jre Initializing Hyperic HQ 3.</description>
    </item>
    
    <item>
      <title>开源IT管理工具大全之All in one虚拟机</title>
      <link>https://example.com/2007/06/15/e5bc80e6ba90ite7aea1e79086e5b7a5e585b7e5a4a7e585a8e4b98ball-in-onee8999ae68b9fe69cba/</link>
      <pubDate>Fri, 15 Jun 2007 07:24:00 +0000</pubDate>
      
      <guid>https://example.com/2007/06/15/e5bc80e6ba90ite7aea1e79086e5b7a5e585b7e5a4a7e585a8e4b98ball-in-onee8999ae68b9fe69cba/</guid>
      <description>我做开源工具测试时,90%以上是在VMWare虚拟机中实现的,本人比较懒一直没有学习Xen虚拟机的用法,等下次吧,一等要彻底开源是我的一个梦想呵呵!
说说这个All in One虚拟机的想法,我只是想把所有的我熟悉的工具都安装和配置在一个虚拟机里,这样当有人需要给做Demo的时候,我可以很快的做一个分享.如果有朋友感兴趣的话,我可以刻盘他.总的来讲希望能分享一下我的学习成果给大家.
第一步:安装虚拟机
这个虚拟机我不像使用很多的Snapshoot,我以前是这么做的,从一个基础的OS发出许多分支到不同的工具;这样做的缺点有二:1)特别占磁盘空间;2)不能同时访问多个系统.
我选择的Linux是Open Suse Linux 10.2;Suse的包管理对我来说真的很方便,从安装DVD上用Yast可以方便安装各种软件,无须考虑包之间的依赖性问题.
我选择的是最小图形化系统安装,安装完之后,vmdk文件的大小好像是2GB多.
接下来安装的是所有的必须的包,大致如下:Apache,Perl,MySQL,PostgreSQL,rddtool,net-snmp,php,gcc,Kernel-source(for vmware tools)&amp;hellip;等安装完之后用chkconfig on 命令设置需要自动启动的服务;然后把apache等服务逐个启动一下验证是否工作正常.
然后安装的是VMWare tools,这个好像也不是必须,不过还是装上比较好,方便虚拟机和host机共享文件.我的虚拟机的版本是5.5.3workstation版本.
第二步:安装各种开源软件
下面可能会是一个很长的change log
1. 安装OpenNMS 1.3.2 安装方法 设置了opennms的自动启动,还没有设置tomcat5.5.23的自动启动.
2.安装Cacti **0.8.6j **安装方法, 使用的poller.php,尝试安装cactid,安装失败,原因可能是OpenSuse10.2好像没有net-snmp lib包. 暂时不安装cactid
3.安装OCSNG 1.0.1 安装方法
4.安装 hyperic-hq 3.0.4-389 安装方法, 2007-6-21th
5.安装 OTRS 2.2.1-1 安装方法很简单，执行rpm安装既可, 2007-7-28th</description>
    </item>
    
    <item>
      <title>How to install Cacti on OpenSuse 10.2</title>
      <link>https://example.com/2007/06/14/how-to-install-cacti-on-opensuse-102/</link>
      <pubDate>Thu, 14 Jun 2007 10:02:00 +0000</pubDate>
      
      <guid>https://example.com/2007/06/14/how-to-install-cacti-on-opensuse-102/</guid>
      <description>1.
Download Extract the distribution tarball
Suse:/opt # wget http://www.cacti.net/downloads/cacti-0.8.6j.tar.gz
Suse:/opt # tar zxvf cacti-0.8.6j.tar.gz
2.
Create the MySQL database:
Suse:/opt # mysqladmin &amp;ndash;user=root create cacti
3.
Import the default cacti database:
Suse:/opt/cacti-0.8.6j # mysql cacti &amp;lt; user=&amp;ldquo;root&amp;rdquo;&amp;gt; GRANT ALL ON cacti.* TO cactiuser@localhost IDENTIFIED BY &amp;lsquo;cacti&amp;rsquo;;
Query OK, 0 rows affected (0.03 sec)
mysql&amp;gt; flush privileges;
Query OK, 0 rows affected (0.00 sec)
mysql&amp;gt; quite
5.
Edit include/config.php and specify the MySQL user, password and database for your Cacti configuration.</description>
    </item>
    
    <item>
      <title>[转]10大优秀开源网络管理工具</title>
      <link>https://example.com/2007/06/01/top-10-nsm-tools/</link>
      <pubDate>Fri, 01 Jun 2007 01:47:00 +0000</pubDate>
      
      <guid>https://example.com/2007/06/01/top-10-nsm-tools/</guid>
      <description>转载ITmanagement的一个文章；全文的部分翻译。个人以为这个文章的把网管的开源工具做了一个小结，英文好的同志请直接访问原文地址：click Here 
“最高评分的管理管理工具不会使人不得不花未来的钱。来考虑一下这些自由且低成本的开源软件吧。”
Leslie T. O’Neill May 24th, 2007

如果您的公司排名在Fortune 1000强和中小企业之间，那么您网络管理的选择形势看似比较严酷。你既不能在小市场上收集一堆拙劣的玩意来组成一个解决方案；你也不能花很多钱买一些真正不需要的高科技产品。这里有一个很好的选择：试用可一个开源的网络管理方案，加专业服务，包括开发和技术支持。
**Open Source = Flexible **开源＝灵活性

一个开源的解决方案对厂商来说也是非常灵活性的，他们很快地增加新技术的支持，比改进一个私有系统更快。例如：当Ubuntu 7.04 “Fiesty Fawn”四月份发布之后, Hyperic HQ在发布的第二天就宣布了对其提供技术支持。

当谈到开源的网络管理方案时，公司最需要也用的最多的技术莫过与监控功能。不过监控技术在很大程度上已经变成了日用品。
通常的，专业化版本的开源IT管理软件平台集成多个其他开源项目在一个框架中，象Nagios网络监控等；并且加入统一的网络界面；并且提供技术支持服务。另外，他们都想通过强大的社区来提高和改进代码，跟踪bug等。
六个企业级平台

下面的六个开源IT管理都可能用作HP, IBM, CA 和 BMC大型管理套件的替代品。每一个都能提供低价的专业服务和免费软件下载。它们的不同支持在与所提供的功能和支持的操作系统

Quest Big Brother

这个Web-based系统和网络监控产品能支持 Windows, Unix 和Linux等操系统, 还有一个通过用户投稿形成的脚本知识库，利用它能容易地定制Big Brother取管理你的网络。它的GUI是一个不错的特色，使用相同的颜色代码；红色代表不好，绿色代表好。


GroundWork Open Source Monitor Professional

2004年发布，它是最早的企业级网络管理产品之一。它集成了超过100种最好的开源项目，包括Nagios, Apache 和 NMap, 在这个框架之上有添加了很多特有功能，例如Web-based用户界面等。Monitor提供了集中化的监控和管理，管理和监控你的企业网络，包括Linux, Unix 和Windows 服务器, 应用, 数据库和网络设备。

Hyperic HQ Enterprise

瞄准的是一个数据中心，Hyperic被设计为去监控和管理Web应用的所有层次， 包括硬件、中间件、虚拟化、Web和开放式应用。它还提供基线和趋势分析。它支持 Apache, JBoss, Linux和更多应用。</description>
    </item>
    
    <item>
      <title>Hyperic HQ小测手记</title>
      <link>https://example.com/2007/05/30/hyperic-hq-testing/</link>
      <pubDate>Wed, 30 May 2007 04:28:00 +0000</pubDate>
      
      <guid>https://example.com/2007/05/30/hyperic-hq-testing/</guid>
      <description>HQ的网站是一个显的非常商业化的网站；看上去制作的比较精良也比较专业。从HQ的官方文档（好像没找到pdf手册）中看出它能监控的东西还真的非常多，无论是商业的软件还是开源的都有一大串的matrix；他们在被监控的及其上是需要安装和运行代理的。所以从这一点上讲和商业软件也没有什么区别，总之看的数据多应该比较好，不过数据收集的多有时候会给监控对象代理太重的workload。
如何安装
下载HQ\hyperic-hq-installer-3.0.4-389-x86-linux从HQ的网站。这个压缩文件包含：安装程序，服务器端程序（好像包括一个内嵌的PostgreSQL数据库），代理程序，服务期端shell程序，JRE。
BTW:服务器端和代理都是Java程序，如果自己配置好JRE的话可以下载不包含JRE的安装包。Windows上的代理包是一个zip文件，为了方便我都下载的含有JRE的安装包。
由于是纯Java的应用所以服务器端和代理端看似好像都没有任何依赖性要求，只是需要在服务器端安装xorg-x11-libs包，否则不能正常绘图，看不到图形。
在Linux下的安装过程大致如下。
mkdir /opt/hq
useradd hq -G root -d /opt/hq
su hq
tar zxvf hq.tgz
cd hyperic-hq-installer/
./setup.sh
/opt/hq/server-3.0.4/bin/hq-server.sh start
注意最好建立一个新的用户为HQ，服务期端本身需要被非root用户安装和启动。另外代理和服务器端都需要特殊的两个端口通信，所以安装完之后必须停止或者配置防火墙；否则不能访问服务器，服务器也不能和代理通信。启动代理之前需要配置好防火墙。
试用：
总体说HQ的安装和配置都是非常简单的，不过他的Web界面更是简洁。当代理启动了之后，会自动出现在Auto-Discovery下面，点击Add Resource按钮将它变成一个正式的监控对象。默认的情况下，代理会收集一定数量的监控指标；大概是可收集数量的20%左右。当在某个监控对象上（例如Memory Used）设置了收集间隔之后，服务器端就开始了定时的数据收集，所收集的数据默认情况下用折线图的形式展示。可以根据某个指标建立一个告警，告警的逻辑也相当的完整：逻辑判断，巅峰判断，升级处理；看似能想到的都有了。由于是第一次使用展示没有看的如何建立一个告警规则应用于所有监控对象的。我用HQ对我的一个服务器（iis,MS Sql,.net）做了监控，从数据收集和展现效果上来说，真的堪称可与商业软件媲美。
使用结论：
安装简单方便，在Linux下代理端完全无需关照包依赖性。代理配置的安装配置需要一定量的工作，必须配置服务器地址，通信端口等。
代理程序对服务器的工作负担还是比较大的，特别是在启动的那几分钟内。代理进程对CPU的使用率可以达到50～80%，之后就比较低了。对内存的利用一般是30MB左右，当然这应该是可以通过降低收集数的数量和频率来降低的。
用户界面的使用还真的是很方便，还支持告警信息的RSS访问。总之HQ是一个开源软件中的重量级选手：功能强，复杂性高，代理程序负担较重。其他使用小结，待续。</description>
    </item>
    
    <item>
      <title>ZABBIX特点介绍，转自它们的网站</title>
      <link>https://example.com/2007/05/22/zabbix-key-features/</link>
      <pubDate>Tue, 22 May 2007 14:53:00 +0000</pubDate>
      
      <guid>https://example.com/2007/05/22/zabbix-key-features/</guid>
      <description>FROM：http://www.zabbix.com/features.php
ZABBIX offers functionality that will make your IT resources look more transparent, and it will also help to easily identify performance and availability problems. ZABBIX greatly increases the productivity of system administrators by providing simple-to-use monitoring system.
Key features

 开源的方案Open Source solution  能编译运行在多种OS：AIX, FreeBSD, HP-UX, Linux, MacOS X, NetBSD, OpenBSD, Solaris, Tru64/OSF  SQL database存储配置、性能等各种信息  Web interface 简单易用的访问  提供实时和历史的监控分析数据  Data 可视化和影射  高性能的监控代理 (UNIX, Win32)  监控 &amp;ldquo;agentless&amp;rdquo; 环境  维护和监控SLA of IT Services  监控 SNMP (v1,v2,v3) devices IT Services 提供IT基础架构（组建/服务/硬件）等和业务逻辑的联系和对应</description>
    </item>
    
    <item>
      <title>What is ZABBIX?</title>
      <link>https://example.com/2007/05/22/what-is-zabbix/</link>
      <pubDate>Tue, 22 May 2007 13:51:00 +0000</pubDate>
      
      <guid>https://example.com/2007/05/22/what-is-zabbix/</guid>
      <description>
第一次看到这个软件是在OpenNMS的邮件讨论组中，他们计划做一个vmware的image放到VMTN上 。我在VMTN里哪里点击了一下监控管理这一类，一个叫OpenESM的项目进入了我的视线。它能引起我的注意是因为，它在项目的描述中说:我们理解ITSM、、、、Check it out! 大致浏览了一下他们的网站，发现他们的目的是在Zabbix的基础上作一下优化和开发，加入若干特色：GSM modem发短信、新报表、SLA监控等。
现在很多项目都有迅速实施的解决方案。对于很多开源项目来说，它们对于新手的相同门槛就是安装。安装上了，不会配置；配置好了，不会用；用上了解决不了问题。
我先下载了OpenESM ，一个不算太大的文件1.3GB。解压缩之后用VMWare打开运行，猜出root的用户名是openesm，登陆之后发现它是一个Fedora的虚拟机。登陆OpenESM的控制台， http://ip/ 接下来就需要去www.openesm.com上下载手册了，否则无法继续下去。照着手册安装代理，在我的两个Windows的机器上。安装需要先下子代理安装包，允许安装命令的时候需要制定自己的主机名和服务器的主机名。在控制台中加入这两个安装了代理的机器，由于是初次使用没用玩自动发现之类的功能。收集了一阵子数据之后，很快发现了很多有趣的数据。
最终总结如下

 这是我安装的第一个有代理程序的开源监控软件，感觉在Windows下代理的安装还是比较方便的。比我想象的简单，安装文件只有一个exe文件，装完之后形成一个服务。我记得在查阅文档的时候看到了一文档，上面列出了所有代理程序能收集的数据的表格，说明了什么数据在什么操作系统中支持，那些不支持。它能在多种操作系统上安装，他的安装时说从代码编译安装，windows上不需要，在非windows上就以为这需要安装编译器什么的。这好像并不是特别好。  可用性和性能的数据都能收集。  事件管理功能，能触发action，还没有试过，能触发邮件和GSM短信等。没有试过。  没有试的还挺多，还需要进一步研究。   </description>
    </item>
    
    <item>
      <title>Install OpenNMS 1.3.2 on OpenSuse 10.2 system (The simplest version  )</title>
      <link>https://example.com/2007/05/13/install-opennms-132-on-opensuse-102-system-the-simplest-version/</link>
      <pubDate>Sun, 13 May 2007 11:40:00 +0000</pubDate>
      
      <guid>https://example.com/2007/05/13/install-opennms-132-on-opensuse-102-system-the-simplest-version/</guid>
      <description>1&amp;gt;Install dependence packages
zliu3:~yast -i rrdtool
zliu3:~yast -i postgresql
zliu3:~ # rpm -qa |grep rrdtool
rrdtool-1.2.15-25
zliu3:~ # rpm -qa |grep postgresql
postgresql-8.1.5-13
postgresql-libs-8.1.5-13
postgresql-contrib-8.1.5-13
postgresql-pl-8.1.5-15
postgresql-server-8.1.5-13
rcpostgresql start
copy jdk/tomcat 5.5 package files to /opt
cd /opt
tar xzvf jdk1.5.tar.gz
tar xzvf tomcat5.5.tar.gz
export JAVA_HOME=/opt/jdk1.5.0_09
export OPENNMS_HOME=/opt/opennms
export CATALINA_HOME=/opt/apache-tomcat-5.5.20
export PATH=$PATH:$JAVA_HOME/bin
java -version
$CATALINA_HOME/bin/startup.sh
Test Tomcat 5.5 http://Ip_address:8080/
vi /var/lib/pgsql/data/postgresql.conf
# - Connection Settings - max_connections = 256
vi /var/lib/pgsql/data/pg_hba.</description>
    </item>
    
    <item>
      <title>OpenNMS网络和系统管理简介</title>
      <link>https://example.com/2007/05/08/what-is-opennms/</link>
      <pubDate>Tue, 08 May 2007 04:41:00 +0000</pubDate>
      
      <guid>https://example.com/2007/05/08/what-is-opennms/</guid>
      <description>1.1 概述 
Opennms能够帮助IT管理部门持续的监控分布式的异构系统和网络设备的运行状态，它可以支持SNMP网络管理协议确保管理的扩展性，并且提供非常灵活的定制功能从而有利于管理范围的伸缩。它内置的故障事件管理以提供故障事件的记录和分析的能力，快速隔离非根源事件并迅速发现故障原因。Opennms良好的设计可以快速部署实施，简单友好的图形界面能够使得用户迅速掌握，从而降低操作的复杂度，提高IT管理效率。

1.2 体系架构 
作为一个通用的网络系统故障监控平台，其体系架构应如下图所示：

 

**附图1. ** Opennms****体系架构

我们从下至上对Opnnms体系架构作一一的介绍：

u 被管理对象层，SNMP代理程序是数据采集和动作执行层。对应网络设备来讲，该层对应与网络设备本身的网络管理功能，不需要在设备上单独部署功能模块；对计算机来讲，该层是运行在目标计算机上的SNMP服务，负责采集该系统运行状况、性能等数据，并向管理层汇报。

u Opennms监控引擎是实现网络和系统可用性、故障管理的业务逻辑和策略的处理层。他利用特定的轮询策略：从代理程序层收集数据、更新和维护被管理对象状态、执行相关的报警事件通知。

u 管理对象数据库是网络和系统管理的数据存储层。其中以面向对象的方式保存着网络和系统资源的模型，记录着他们的配置、描述和状态等信息。这些模型和信息是通过Opennms网络扫描模块自动建立起来的，并由管理者层自动维护。

u 图形用户界面是网络和系统管理的数据表示层。他以各种直观、生动的用户界面向用户展示网络和系统中各种对象的关系、配置、状态和故障情况，是优秀的用户接口。


针对某企业简称user short name的环境，其IT故障监控子系统的管理框架为：

u 被管理对象层——启动核心路由器和交换机的SNMP网管协议，作为网络设备故障的数据提供源；在所有需要管理的服务器上运行SNMP服务，作为监控操作系统故障的数据提供源。

u Opennms网络监控服务器——新增一台服务器，部署Opennms的监控引擎模块，由该模块对被管理对象层的数据源进行自动的数据采集和翻译采集的结果。并实时发送报警信息。

u 对象存储库——在和Opennms监控引擎安装的机器上安装PostgreSQL，作为Opennms监控模块的对象存储库。

u 图形用户界面——某企业简称user short name管理员可使用任何的WWW浏览器连接Opennms网络监控服务器的用户界面，使用合适的用户名，在某种适当的权限下查看和浏览网络监控信息、状态信息、可用性报表和性能报表。

1.3 功能介绍 
1.3.1 网络节点自动发现 
对象存储库中的信息并不是靠管理员手工输入和维护的，而是由Opennms网络监控引擎－自动扫描模块自动从用户的计算机系统中搜索发现出来的。


**附图2. ** 网络节点自动发现

1.3.2 图形用户管理界面 
在某企业简称user short name这 样的网络和系统中，需要一些友好的监控视图。目的是使得管理员能够通过直观的界面，迅速发现故障，从而在最短的时间内解决故障。该用户界面视图可使得管理 员通过管理工具看到现实世界对象的真实反映，而不是抽象的符号。使用户能够监控整个系统的概貌，系统的大体分布和总体运行状况等。并且决策适当的故障排除 方案，各种界面视图可通过Intranet进行浏览查看。</description>
    </item>
    
    <item>
      <title>OpenNMS常问问题All-in-One</title>
      <link>https://example.com/2007/05/08/opennms-faqs/</link>
      <pubDate>Tue, 08 May 2007 04:35:00 +0000</pubDate>
      
      <guid>https://example.com/2007/05/08/opennms-faqs/</guid>
      <description>**问：OpenNMS是什么？
**答： OpenNMS是第一个开发在开源模式下的企业级网络管理平台应用。OpenNMS的目标是成为一个真真的分布式、可升级的网络管理平台，尽管它看似一个 FCAPS网络管理模型，使之可用于开放源码和商业领域。目前：OpenNMS专注与以下三个方面：服务轮询 － 检查应用服务的可用性，产生可用性报表。数据收集 － 收集、保存和报表网络信息数据，并设定和触发门限值。事件和提示管理 － 接受事件系统内部的和外部的事件，将源事件提供给强大的故障告警和故障升级系统。OpenNMS Group是开发和支持OpenNMS应用的一个商业性的实体。
问：为什么要开源？
答： 我们坚信真真的创新不会来自规模巨大的企业。我们还相信网络管理软件领域比Linux操作系统更适合开源模式。不像Linux，网络管理要去监视和控制来 自不同厂商的很多的技术。考虑到每年都有很多新的网络设备面世。商业软件公司并不希望追赶这种更新产品的工作负荷，相反它们只能依赖与它们的通用管理技术 （最小化的通用性）。相反，对于一个开源项目中的每一个人－－厂商、用户或者技术顾问－－都能对项目做出自己的共享，从而保障了这个项目成功的几率。
**问：OpenNMS是用什么语言写的？
**答： OpenNMS主要是用Java语言写的。OpenNMS2.0的目标是：让它成为一个以一堆.jar文件形式来安装的产品。还有一些非Java的部分： icmpd-Java1.4 API不能理解ICMP。因为ICMP回答请求（ping）是一个最简单的来测试基于Ip的网络设备是否可以服务的方法，没有那个网络管理应用程序不用的 它的。将ICMP功能分离为一个独立的守护进程的目标是，如果系统中有ICMP的功能那么OpenNMS就用，如果没有OpenNMS就率略它。 OpenNMS不需要ICMP来监控网络设备。数据库－OpenNMS现在使用PostgreSQL作为它的地层数据库，PostgreSQL 是用C写 的。OpenNMS2.0会使用几个能通过Hibernate适配器访问到的数据库。rrdtool－OpenNMS当前的版本实时的选择使用 RRDtool或jRobin（Java会使用RRDtool）。最终这个选项的默认使用jRobin，也可以选择使用RRDtool。
**问：OpenNMS有图形的显示么？
**答： 这可能是一个对于OpenNMS新人来说最常问的问题：OpenNMS的图形监控界面在那？简单的问答是我们没有一个这样的地图，如果你想听听我们的解释 请继续往下看。OpenNMS是被一些经验丰富的网络管理技术顾问开发出来的。HP的Openvew NNM是一个很流行的商业软件，它能生产一个可定制化的网络监控图形。OpenNMS Screenshot

[![](http://lh4.google.com/image/liuzh66/Rl19YgD97vE/AAAAAAAAAE8/hFVbteNWiR0/s160-c/OpenNMS.jpg)](http://picasaweb.google.com/liuzh66/OpenNMS) 

[OpenNMS](http://picasaweb.google.com/liuzh66/OpenNMS) 


**原文地址** [http://www.opennms.org/index.php/FAQ-About](http://www.opennms.org/index.php/FAQ-About) </description>
    </item>
    
    <item>
      <title>OpenNMS 安装说明－精简版</title>
      <link>https://example.com/2007/04/26/opennms-install-sample/</link>
      <pubDate>Thu, 26 Apr 2007 10:47:00 +0000</pubDate>
      
      <guid>https://example.com/2007/04/26/opennms-install-sample/</guid>
      <description>Per-install Checklist:

 SuSE 10.1 Linux install CD  OpenNMS rpm packages for SuSE Linux  JDK 1.5 package  Tomcat 5.5.20 package Here we go:
  
 Insert install CD into Cd/Dvd rom  Do SuSE Linux mini install  Logon in OS, run &amp;lsquo;yast firewall&amp;rsquo; to open 8080 tcp port on firewall  upload all packages to /opt  untar JDK  untar Tomcat  install postgresql through yast; run &amp;lsquo;rcpostgresql start&amp;rsquo;  Export some variables export JAVA_HOME=/opt/jdk1.</description>
    </item>
    
    <item>
      <title>ntop ~ Web-based network traffic monitor</title>
      <link>https://example.com/2007/03/21/ntop-web-based-network-traffic-monitor/</link>
      <pubDate>Wed, 21 Mar 2007 04:09:00 +0000</pubDate>
      
      <guid>https://example.com/2007/03/21/ntop-web-based-network-traffic-monitor/</guid>
      <description>安装方法：
最简单的安装方法应该是从Linux的安装光盘中安装，因为它比较小只有2～3MB；很多Linux都包含这个软件。在SuSE Linux 10.1中可以找到ntop-3.2-17。
配置使用：
安装之后参考说明文档做首次初始化运行，如果是通过rpm从Linux光盘中安装；相关的系统服务也已经帮你安装。在SuSE里运行rcntop start就可以启动后台进程。访问ntop的界面http://myserver:3000/。
Tips：
ntop会吃掉比较多的内存资源，不建议在生产机上安装。它工作在第二层，采用实时抓包的方式；ntop像是网络探针来捕获和分析网络活动，产生一些分析报表，部署时需要考虑它的部署位置。
于其它系统的集成：
该系统界面的访问比较的直接，没有用户认证过程。所有报表和分析结果的按两个方式保存和呈现：host和协议。它通过rdd存储数据，通过web页面展示图片；本身不需要依赖web server。准备尝试把它集成到Nagios和OpenNMS中。
ntop的英文说明
From: http://www.ntop.org/Monitoring.html
NTOP is helpful as an &amp;ldquo;emergency&amp;rdquo; tool. When you are experiencing response time delays or you suspect that something is wrong with your network, NTOP allows you to easily monitor the protocols running on your LAN and to determine the utilization of each.
NTOP comes very well when suspicious behavior is found on your network.</description>
    </item>
    
    <item>
      <title>GroundWork rpm 安装会导致原系统的一些改变</title>
      <link>https://example.com/2007/02/28/groundwork-rpm-error/</link>
      <pubDate>Wed, 28 Feb 2007 09:14:00 +0000</pubDate>
      
      <guid>https://example.com/2007/02/28/groundwork-rpm-error/</guid>
      <description>GroundWork rpm安装对系统造成的改变有：

 /etc/init.d/apache2 被改名为 apache2-save 导致，以前的Apache不能启动  会在/etc/ld.so.conf中加入一行/usr/local/groundwork/lib ；不知道为什么这会导致一下系统的服务不能正常运行，如：PostgreSQL和snmpd。修复方法是注释掉这一行，然后运ldconfig命令。还不知道GroundWork在没有这一行的情况下有什么问题，注释掉之后好像它还是能正常运行的。   </description>
    </item>
    
    <item>
      <title>GroundWork和OTRS系统的集成问题</title>
      <link>https://example.com/2007/02/27/groundwork-and-otrs/</link>
      <pubDate>Tue, 27 Feb 2007 09:40:00 +0000</pubDate>
      
      <guid>https://example.com/2007/02/27/groundwork-and-otrs/</guid>
      <description>为了节省服务器，我们可能不得不把所有的监控以及相关的系统都安装到一个物理的机器上。如果是从原代码安装，我相信一定有很多选项能避免它们之间的冲突。假如你是后安装的GroundWork，它会更改系统默认的Apache2的配置，导致以前安装的所有的Web应用都不能用。
在我的测试机上，先安装的OTRS，rpm安装，后安装的GroundWork，也是rpm安装。GroundWork安装之后，OTRS不能登陆。根据GroundWork的一些文档我做了，如下的修复步骤。
1）vi /etc/apache2/conf.d/otrs.conf 可以看到如下OTRS的web配置信息。
# &amp;ndash;# added for OTRS (http://otrs.org/)# &amp;ndash;# agent, admin and customer frontendScriptAlias /otrs/ &amp;ldquo;/opt/otrs/bin/cgi-bin/&amp;ldquo;Alias /otrs-web/ &amp;ldquo;/opt/otrs/var/httpd/htdocs/&amp;quot;# load all otrs modulesPerlrequire /opt/otrs/scripts/apache2-perl-startup.pl# Apache::Reload - Reload Perl Modules when Changed on DiskPerlModule Apache2::ReloadPerlInitHandler Apache2::ReloadPerlModule Apache2::RequestRec# set mod_perl2 options# ErrorDocument 403 /otrs/customer.pl ErrorDocument 403 /otrs/index.pl SetHandler perl-script PerlResponseHandler ModPerl::Registry Options +ExecCGI PerlOptions +ParseHeaders PerlOptions +SetupEnv Order allow,deny Allow from all# directory settings AllowOverride None Options +ExecCGI -Includes Order allow,deny Allow from all AllowOverride None Order allow,deny Allow from all# MaxRequestsPerChild (so no apache child will be to big!</description>
    </item>
    
    <item>
      <title>Nagios华丽的外衣NagVis</title>
      <link>https://example.com/2007/02/25/nagios-nagvis/</link>
      <pubDate>Sun, 25 Feb 2007 03:09:00 +0000</pubDate>
      
      <guid>https://example.com/2007/02/25/nagios-nagvis/</guid>
      <description>如果你用过Nagios的话，它的2D、3D Map一定会给你留下一些印象；2D Map的确能比较试用一点，不过看上去还是挺难看的。NagVis就是看到了这一点，它力求能让各种状态信息表达的更炫，更好看；它可以说是Nagios的一个不错的插件，直接copy到Nagios的相关目录下，配置一下就行了。它的效果如下图所示：说的在玄虚一点它可以是一个“业务流程管理视图”[CA Unicenter中的名词，OpenView里也有类似的概念]。其实就是把原子的监控对象：被监控节点和节点上的服务；和业务系统或者IT的逻辑关系相结合起来。例如：我的业务系统A的其中一个数据库服务器的数据库进程停了，这个可以影响到所有物理包含或者逻辑包含它的对象的状态。NagVis试图用漂亮的图标来表达这些状态和关系，是管理者能看的更加直观。</description>
    </item>
    
    <item>
      <title>Install Smokeping via yum</title>
      <link>https://example.com/2007/02/16/install-smokeping-via-yum/</link>
      <pubDate>Fri, 16 Feb 2007 16:38:00 +0000</pubDate>
      
      <guid>https://example.com/2007/02/16/install-smokeping-via-yum/</guid>
      <description>From :http://ai.net.nz/horde/wicked/display.php?page=SmokePing
Install needed packages 
rrdtool
`yum install rrdtool &amp;lt;br /&amp;gt;**perl-CGI-SpeedyCGI**&amp;lt;br /&amp;gt; `yum install perl-CGI-SpeedyCGI
 
fping
`yum install fping &amp;lt;br /&amp;gt;** Or do them all together:**&amp;lt;br /&amp;gt; `yum install rrdtool perl-CGI-SpeedyCGI fping
 
Smokeping
`wget http://people.ee.ethz.ch/~oetiker/webtools/smokeping/pub/smokeping-2.0.9.tar.gztar xvzf smokeping-2.0.9.tar.gzmv smokeping-2.0.9 /usr/local/smokepingchown -R root:root /usr/local/smokeping&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;cd /usr/local/smokeping/binfor foo in *.dist; do cp $foo `basename $foo .dist`; done&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;cd /usr/local/smokeping/etc/for foo in *.dist; do cp $foo `basename $foo .</description>
    </item>
    
    <item>
      <title>如何看懂Smokeping图表</title>
      <link>https://example.com/2007/02/15/smokeping-chart/</link>
      <pubDate>Thu, 15 Feb 2007 08:45:00 +0000</pubDate>
      
      <guid>https://example.com/2007/02/15/smokeping-chart/</guid>
      <description>_RTT(Round-Trip Time) _

简单说它是一个数据报在网络上两点中间往返一次的时间。是影响TCP性能和表征网络运行状况的重要参数。在网络中实时、准确地测量大量TCP设备和系统的RTT参数是网络管的重要环节之一。Smokeping就是这样的自动测试系统，它向目标设备和系统发送各种类型的测试数据包，测量、记录和展示RTT。


_Median RTT _****中间数

它是中间数并不是平均值。Smokeping有多种类型的探针，探针在默认的设置下，每300秒向目标设备发送20测探测数据包。假如这20个数据包都返回的话，它就记录下了20个RTT，那么Median RTT就是第十个包的RTT；如果有5个包丢失的话，那么Median RTT就是第八个返回的包的RTT值。


_Avg RTT _****评价值

它是每一个测试回合中所有RTT的算术评价值。


Avg pkt loss

它是丢包率。


上图中测试的三个服务器，是用默认的FPing探针探测该服务器是否在线。Smokeping就装在OpenNMS上，可以看出它的RTT最小；奇怪的是它的丢包率却是最大。其它的，一个是美国的一个Web服务器，另一个是美国的Exchange邮件服务器。



Last 3 Hours 最近的3小时

_Median Ping RTT （__506.2 ms avg）_中间数的平均值是5.6.2毫秒。如果是绿色的短横线，说明一个300秒的周期内所有的包都返回都有RTT的时间记录下来；如果是蓝色的短横线则说明有2个包丢失。

_Packet Loss：_丢包率。从上图中我们看出全都是绿线，所以丢包率当然是0。

_Probe：_10 HTTP pings using echoping(1) every 300 seconds

这张图是2007-1-11 12:00:05生成的。每一个绿色的短横线都是一个测试回合300秒内用echoping测试HTTP协议10次。绿色画出的是中间数的位置，一个回合中的其它值都在它附近被以灰度的形式被刻画；灰度的范围越小越好，灰色的范围像是烟雾一样笼罩在中间数附近。在中间数附近的烟越小越好，说明网络很平稳。RTT曲线的起伏还显示了网络的负载情况。

点击这里看一个网上的Demo

update : 2008-1-18

现在OpenNMS把smokeping集成了，你可以在OpenNMS中配置使用这个功能。</description>
    </item>
    
    <item>
      <title>翻译[opennms-discuss]邮件组里的一个讨论“Nagios转变”</title>
      <link>https://example.com/2007/02/01/opennms-discuss-nagios/</link>
      <pubDate>Thu, 01 Feb 2007 14:51:00 +0000</pubDate>
      
      <guid>https://example.com/2007/02/01/opennms-discuss-nagios/</guid>
      <description>全文在＝》China OpenNMS
 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
我们已经在一个中等规模的企业实施了Nagios，用来监控一堆Cisco设备：交换机、路由器、防火墙，还有各种类型的服务器
（Windows,Linux和Unix）。对我们来说Nagios工作的非常好。我们现在看OpenNMS，是由于她有好看的用户界面和集成的服务资源
图。我喜欢Nagios是由于它的模块化。我能很容易的写一个插件来完成任何相关的事情。
我看到OpenNMS有NRPE和NSCLIENT的能力，但是有一些邮件和资源图不能彻底的采集到。有人正打算用OpenNMS作为Nagios或者其他
软件的替代品？我的答案是非常确定的，可是我也非常想听到一些关于OpenNMS的成功或者不很成功的故事。我正在测试环境中使用
的是OpenNMS1.3.2。
Thanks!
Jon Christensen
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
我们也有一个和你类似的环境（路由器、交换机、各种服务器），目前有大约250个节点。
使用一个CentOS4的服务器，我们已经在上面安装了OpenNMS1.2.9，Syslog-NG，Swatch, Logtool(http://xjack.org/logtool/)，
在Windows上用Informant MIB，在几乎所有Linux/Unix上的是NET-SNMP，和它们一起的还有很多在客户端的自定义脚本；它们中的
大多数都使用send-event.pl或者和它无关。
应为所有这些，我们已经能完全替代了HP OpenView，虽然这是我的一面之词：这个架构是如此的模块化，以致于我们能做的比我们
使用OpenView的还要多，因种种理由。
Tim Selivanow
NOC Technician
EasyStreet Online Services, Inc.
______________________________________
我的个人观点：
从Nagios转到OpenNMS上，其实不太容易。由于一下因素：
1）Nagios非常模块化，架构让人决定非常稳定可靠；它没有用到Java。
2）它的文档非常好，包括它官方的使用手册和用户上传的文档；从文档可以看出这个欧洲Base的项目非常踏实，风格严谨。开发ONMS的那帮老米显得比较自作聪明一点。
3）Nagios的论坛很好，有很多人可以互相帮助。</description>
    </item>
    
    <item>
      <title>Cisco网络设备如何配置SNMP代理</title>
      <link>https://example.com/2007/01/28/cisco-network-configure/</link>
      <pubDate>Sun, 28 Jan 2007 13:31:00 +0000</pubDate>
      
      <guid>https://example.com/2007/01/28/cisco-network-configure/</guid>
      <description>Cisco是网络设备的老大，它的设备以稳定、成熟和高性能著称。很多用户都以自己的网络设备是99％的Cisco设备而自豪。
对于任何一个网络设备如果没有配置SNMP代理，就不能被任何管理工具管理。下面的这个连接就是关于如何配置Cisco的SNMP服务：http://www.cisco.com/univercd/cc/td/doc/product/software/ios122/122cgcr/ffun_c/fcfprt3/fcf014.htm
可网管网络设备都内置有SNMP代理，很多网管不喜欢配置、enable SNMP服务的理由如下：不希望SNMP服务占用CPU、内存等资源；不信任SNMP服务的安全性；不认确认SNMP管理协议的价值。我个人认为：通过SNMP协议对网络设备管理的价值将远远高于它对设备造成的消耗和带来的风险。如果你同时面对和管理30台以上的网络设备，试想把它们的运行状况做一遍检查，您需要花的时间是多长。
网络管理系统和网络设备的互动如下：

 网管系统主动定时读取MIB的值，存储和分析得到的数值，产生报表和报警事件。  网管系统被动作为网络设备发送Trap的目的地，网管系统需要能翻译各种网络设备的Trap信息的意义。   </description>
    </item>
    
  </channel>
</rss>
