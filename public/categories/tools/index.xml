<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Hugo Future Imperfect Slim em português</title>
    <link>https://example.com/categories/tools/</link>
    <description>Recent content in Tools on Hugo Future Imperfect Slim em português</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 09 Jul 2015 08:44:43 +0000</lastBuildDate><atom:link href="https://example.com/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>icinga2 企业级功能评测1</title>
      <link>https://example.com/2015/07/09/icinga2-e4bc81e4b89ae7baa7e58a9fe883bde8af84e6b58b1/</link>
      <pubDate>Thu, 09 Jul 2015 08:44:43 +0000</pubDate>
      
      <guid>https://example.com/2015/07/09/icinga2-e4bc81e4b89ae7baa7e58a9fe883bde8af84e6b58b1/</guid>
      <description>Icingaweb 2 用户权限管理 icingaweb 2 是诸多GUI中最新的一种，也有替代其它之前所有GUI的趋势，目前看还比较新，只有最基本的功能。登陆Web界面的用户，用户和组的信息可以使用自己的数据库存储或者配置文件存储，也可以使用外部的LDAP集成，使用php-ldap模块集成外部的LDAP/MS AD服务器。 具有完整的RBAC模式; User -&amp;gt; Group -&amp;gt; Role = Permission Set（操作 action） + monitoring/filter/objects(范围 scope)
   
Icinga2 的联系人和联系人组 在icinga2服务器端，在配置文件中定义了组和用户，他们在Web GUI界面上叫做 Contacts / Contactgroups 。
[bash] [root@icinga2-test conf.d]# cat users.conf /**
 The example user &amp;lsquo;icingaadmin&amp;rsquo; and the example group &amp;lsquo;icingaadmins&amp;rsquo;. */  object User &amp;ldquo;icingaadmin&amp;rdquo; { import &amp;ldquo;generic-user&amp;rdquo;
display_name = &amp;ldquo;Icinga 2 Admin&amp;rdquo; groups = [ &amp;ldquo;icingaadmins&amp;rdquo; ]
email = &amp;ldquo;martin@aws-faq.com&amp;rdquo; }</description>
    </item>
    
    <item>
      <title>icinga2 监控工具评测</title>
      <link>https://example.com/2015/06/18/icinga2-e79b91e68ea7e5b7a5e585b7e8af84e6b58b/</link>
      <pubDate>Thu, 18 Jun 2015 14:14:51 +0000</pubDate>
      
      <guid>https://example.com/2015/06/18/icinga2-e79b91e68ea7e5b7a5e585b7e8af84e6b58b/</guid>
      <description>本来想写一个安装手册，可是安装完成之后发现其实非常简单，最后就把题目改为评测了。本文也不是全面的评测文章，关于它的能力和功能，待后续了解的深入了在继续更新本文。
icinga2 架构分析 请下载和查看这个icinga2官方的文档：[su_button url=&amp;ldquo;http://pan.baidu.com/s/1qW3JkJE&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;stroked&amp;rdquo; background=&amp;quot;#cccc00&amp;quot; size=&amp;ldquo;6&amp;rdquo; icon=&amp;ldquo;icon: cubes&amp;rdquo;]下载点这里[/su_button]

为什么用icinga，原因如下：
[su_list icon=&amp;ldquo;icon: eye&amp;rdquo;]
  Nagios的架构不能扩展
  增加模块是比较困难的
  不是群集和分布式监控架构
  安全性相对糟糕
  配置功能有限
  [/su_list]
安装配置 icinga2的安装可以说非常简洁，基本上配置好yum源，几条命令就装万了，而且就可以用了。只是在web界面选择和配置上稍微有点麻烦，它目前有三个可以安装配置的界面：classic, icinga-web, icinga-web2； classic太老了，不具有极其强烈的怀旧情节，就别碰了。建议生产环境中还是使用icinga-web；web2太新了，很多集成的项目的都还没有做好，还比较初级，功能不完善。
待续~~</description>
    </item>
    
    <item>
      <title>Fiddler Timers </title>
      <link>https://example.com/2010/12/22/fiddler-timers/</link>
      <pubDate>Wed, 22 Dec 2010 07:28:45 +0000</pubDate>
      
      <guid>https://example.com/2010/12/22/fiddler-timers/</guid>
      <description>Fiddler is a Web Debugging Proxy which logs all HTTP(S) traffic between your computer and the Internet. Fiddler allows you to inspect all HTTP(S) traffic, set breakpoints, and &amp;ldquo;fiddle&amp;rdquo; with incoming or outgoing data. Fiddler includes a powerful event-based scripting subsystem, and can be extended using any .NET language.Fiddler is freeware and can debug traffic from virtually any application, including Internet Explorer, Mozilla Firefox, Opera, and thousands more.
  ClientConnected- Exact time that the client browser made a TCP/IP connection to Fiddler.</description>
    </item>
    
    <item>
      <title>Nmap — Network Mapper(网络映射器)</title>
      <link>https://example.com/2007/04/28/nmap-network-mappe/</link>
      <pubDate>Sat, 28 Apr 2007 11:43:00 +0000</pubDate>
      
      <guid>https://example.com/2007/04/28/nmap-network-mappe/</guid>
      <description>Nmap (“Network Mapper(网络映射器)”) 是一款开放源代码的 网络探测和安全审核的工具。它的设计目标是快速地扫描大型网络，当然用它扫描单个 主机也没有问题。Nmap以新颖的方式使用原始IP报文来发现网络上有哪些主机，那些 主机提供什么服务(应用程序名和版本)，那些服务运行在什么操作系统(包括版本信息)， 它们使用什么类型的报文过滤器/防火墙，以及一堆其它功能。虽然Nmap通常用于安全审核， 许多系统管理员和网络管理员也用它来做一些日常的工作，比如查看整个网络的信息， 管理服务升级计划，以及监视主机和服务的运行。
Nmap输出的是扫描目标的列表，以及每个目标的补充信息，至于是哪些信息则依赖于所使用的选项。 “所感兴趣的端口表格”是其中的关键。那张表列出端口号，协议，服务名称和状态。状态可能是 open(开放的)，filtered(被过滤的)， closed(关闭的)，或者unfiltered(未被过滤的)。 Open(开放的)意味着目标机器上的应用程序正在该端口监听连接/报文。 filtered(被过滤的) 意味着防火墙，过滤器或者其它网络障碍阻止了该端口被访问，Nmap无法得知 它是 open(开放的) 还是 closed(关闭的)。 closed(关闭的) 端口没有应用程序在它上面监听，但是他们随时可能开放。 当端口对Nmap的探测做出响应，但是Nmap无法确定它们是关闭还是开放时，这些端口就被认为是 unfiltered(未被过滤的) 如果Nmap报告状态组合 openfiltered 和 closedfiltered时，那说明Nmap无法确定该端口处于两个状态中的哪一个状态。 当要求进行版本探测时，端口表也可以包含软件的版本信息。当要求进行IP协议扫描时 (-sO)，Nmap提供关于所支持的IP协议而不是正在监听的端口的信息。
除了所感兴趣的端口表，Nmap还能提供关于目标机的进一步信息，包括反向域名，操作系统猜测，设备类型，和MAC地址。
摘自：nmap中文文档 nmap首页</description>
    </item>
    
  </channel>
</rss>
