<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Computing on 刘征的博客</title>
    <link>https://example.com/categories/cloud-computing/</link>
    <description>Recent content in Cloud Computing on 刘征的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 24 Mar 2018 20:51:01 +0800</lastBuildDate><atom:link href="https://example.com/categories/cloud-computing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>容器化应用的设计原则</title>
      <link>https://example.com/blog/cloud-native-container-design/</link>
      <pubDate>Sat, 24 Mar 2018 20:51:01 +0800</pubDate>
      
      <guid>https://example.com/blog/cloud-native-container-design/</guid>
      <description>本文来自于Red Hat咨询顾问Bilgin Ibryam所编写的一篇白皮书，名为《PRINCIPLES OF CONTAINER-BASED APPLICATION DESIGN》。这篇文章在作者的Blog上发表后，作者的twitter被Kubernetes官方twitter转发。白皮书在Red Hat官网的下载地址：https://www.redhat.com/en/resources/cloud-native-container-design-whitepaper 文本是对这篇文章的学习和整理。
先回顾经典的软件设计原则：
 保持简单，愚蠢（KISS） 不要重复自己（DRY） 你不会需要它 （YAGNI） 关注点分离（SoC） Single responsibility, Open/closed, Liskov substitution, Interface segregation, Dependency inversion （SOLID）  然后是Red Hat的云原生容器设计原则：
 唯一关注性原则（SCP） 高度可观测性原则（HOP） 生命周期一致性原则（LCP） 镜像不可变性原则（IIP） 进程可处置性原则（PDP） 自包含性原则（S-CP） 运行时约束性原则（RCP）  很多组织都理解云原生的重要性和必要性，但是并不知道从哪里开始。那么请确保：云原生平台和容器化应用能无缝的运行在一起，并且具备抵御故障的能力，甚至在底层的基础架构出现宕机的时候，也能通过过弹性扩展的方式表现出可靠性。本文描述了容器化应用时需要遵循的基本准则，实施这些原则有助于使之与云原生平台Kubernetes更加适配。
唯一关注性原则 SINGLE CONCERN PRINCIPLE（SCP） 在许多方面，唯一关注性原则与来自SOLID的SRP是类似的，它建议一个类应该只有一个责任。SRP背后的动机是每个责任是变更的一个轴心，一个类应该有，且也只有一个需要改变的理由。SCP原则中的“关注”一词强调关注是一种更高层次的抽象的责任，而且它更好地将范围描述为一个容器而不是一个类。虽然SRP的主要动机是变化原因的唯一性，而SCP的主要动机是容器镜像重用和可替换性。如果你创建一个解决单个问题的容器，并且以功能完整的方式来实现，不同应用程序中的容器镜像重用的可能性就会更高。
因此，SCP原则规定每个集容器都应该解决一个问题，并做得很好。 实现这一点，通常比在面向对象的世界中实现SRP更容易，容器通常管理的一个单一的进程，大多数情况下一个进程解决一个问题。
如果你的容器化微服务需要解决多个问题，它可以使用这样的模式，将多个容器用sidecar和init-containers的模式合并成一个部署单元（pod），这样每个容器仍然是处理单个问题。同样，您可以替换处理同样问题的容器。 例如，将Web服务器容器或队列实现容器，更新为更具可扩展性的容器。
高度可观测性原则 HIGH OBSERVABILITY PRINCIPLE（HOP） 容器提供了一种统一的方式来打包和运行应用程序，将它们视为一个黑盒子对象。 但任何旨在成为云原生公民的容器都必须提供API支持，要为运行时环境编写接口（API），以观察容器的健康状况和行为。 这是自动化容器更新和生命周期回收的基本先决条件和统一的方式，从而提高系统的弹性和用户体验。
实际上，您的容器化应用程序必须至少为其提供不同类型的健康检查的API&amp;ndash;活动和就绪等状态。更好的应用程序的行为则必须提供其他手段来观察容器化应用程序的状态。应用程序应该将重要事件记录到标准错误（STDERR）和标准输出（STDOUT）中，从而通过统一的日志聚合工具（诸如Fluentd和Logstash之类的工具）进行分析，并与跟踪和指标收集库相结合，例如OpenTracing，Prometheus等。
将您的应用程序视为黑盒子，但实施所有必要的API以帮助平台对其进行观测，并以最佳方式管理您的应用程序。
生命周期一致性原则 LIFE-CYCLE CONFORMANCE PRINCIPLE（LCP） HOP规定了你的容器提供供平台观测的API。 LCP则规定：您的应用程序有办法读取来自平台的事件。 此外，除了获得事件以外，容器还应该对这些事件相应地作出反应。这就是此原则名字由来。这几乎就像在应用程序通过一个“写入API”与平台进行交互。
来自管理平台的各种事件都是为了帮助您管理您的容器的生命周期的。决定处理哪些事件取决于您的应用程序 以及是否对这些事件做出反应。
但有些事件比其他事件更重要。例如，任何需要一个干净的关闭进程，这就需要捕获信号：终止（SIGTERM）消息，并尽可能迅速关闭。 这是为了避免通过强制关闭信号：kill（SIGKILL），之后跟随一个SIGTERM。
还有其他事件，例如PostStart和PreStop，可能对您的应用程序生命周期管理也非常重要。 例如，某些应用程序需要在服务之前进行预热请求和一些需要在关闭干净之前释放资源。</description>
    </item>
    
    <item>
      <title>EXIN DevOps Master 认证考试</title>
      <link>https://example.com/2016/11/07/exin-devops-master-e8aea4e8af81e88083e8af95/</link>
      <pubDate>Mon, 07 Nov 2016 15:19:08 +0000</pubDate>
      
      <guid>https://example.com/2016/11/07/exin-devops-master-e8aea4e8af81e88083e8af95/</guid>
      <description>DevOps这个词在去年参加红帽全球用户大会的时候就深深吸引了我，实际上哪个会上Docker容器的概念要比DevOps还火爆。Docker／openshift相关的session都尝尝是爆满的。从那里开始我逐渐感觉到了开源容器技术的强大和吸引力。
从红帽开始OpenShift的考试就是我在完成RHCA红帽认证架构师之后的一个心结，至今也没有完成。不过这根草我早晚是要拔掉的。主要是由于OpenShift是Docker ＋ kubernetes 的组合；是如今企业级PaaS容器平台的主要技术路线。总之离开红帽是如此的仓促，说实话这也是我职业生涯中的一个不小的遗憾。当时确实觉得 kubernetes 的命令行操作不是很方便，而且在OpenShift并没有降低这个门槛，也即是说在OpenShift里面还是要有一定的工作量和技能的要求在编写kubernetes的yml文件上。在这一点上，及时我熟练掌握了Rancher之后，同样发现编写compose file也是难以逃避的。在推广一步，大部分Docker PaaS平台也都是这样，很多产品也是在界面上提供一个文本输入框，让人输入容器服务定义文件的内容。
在最近的半年中，我的所有技术研究都集中在Docker和其服务编排技术上。与很多用户做过技术交流，PoC测试，有些单子也落地。总结后，有些结果让我感叹。国内的所有企业不区分规模和行业，其实他们对国内原生的创业公司是欢迎的，由于这些公司提供的是国产软件和技术服务。在Docker这个火热的领域中，已经有20多家国内创业公司，我想所有的公司也都已经接受到了这一点的福利了。外国软件通常给人的感觉是：不是国产软件（不要小看国内公司对国产软件的诉求），纯英文操作界面和文档，可能的水土不服，高昂的软件价格和服务费，如果技术太新的化很可能厂商也不具备足够的技术实力和服务力量。
经过了一些Docker容器项目之后，可以断言的是容器市场的火爆和它的技术优势是直接相关的。容器化之后的应用可以通过服务编排工具快速地部署／更新、弹性地伸缩和使用资源，优化其传统应用运维的若干缺陷。容器的轻量和just enough的隔离技术让资源池的管理更加简单，利用率大幅度提升，这对研发部门的环境管理是不小的提升，使CI的过程更加高效和经济。Docker对微服务的支持也深深地诱惑了所有开发者，做系统微服务实施开发者能想到的实施技术大多数会是容器。
以上容器的优势和特性使得国内的这些项目落地和实施的可能性进一步提高，甚至很多项目的速度远远超预期；按照我多年的经验看，一个软件技术型的项目，用户纠结半年到一年以上是很正常的。可能也跟国内企业包容本土化软件公司，追捧新潮技术直接相关；我观察到的一些项目，在2～4个月内落单的屡见不鲜。有些试点的DevOps咨询项目也落地很快。
这些项目都殊途同归地指向了DevOps这个关键词，这让我不得不从去年开始就关注和学习这个最佳实践。当然，我对DevOps的前途非常看好，因此当我听说业内出现了相关认证考试之后，我毫不犹豫地报名参加了。经过2个多月的缜密的准备，我终于幸运地一次通过了这个考试。考试获得了两个证书。
DevOps Master
DevOps Master 认证自由讲师
我参加的是讲师认证培训TTT，很高兴能成为Exin在国内的首批5个认证人员之一。在准备这个考试的过程中我学习了一些书籍，现在还在深度学习的书有两本。
我完成了这本黑皮书的读书笔记，很遗憾的是，我发现它的最新版，把封面改成了白底的了，我不能在叫它黑皮书／黑宝书了。这本书我起码看了两遍；目前正在调试它的书中的代码，代码中的营养还是很高的，计划尽快把所有代码调试通过；从而完成我许下多次的线上分享本书的诺言。
这本书被我称为CD红皮书／红宝书。本书早在10年就出版了，也就是说比Docker早好多年。他给我最大的印象就是，作者每一页上似乎都在介绍这做事情的原则和规矩是什么？我一点也不夸张，他对CD的介绍，就是通过讲解一系列在项目上的经验总结。对作者这种级别的经验，和写书的房子只能用一个词总结“服”。这本书太干，我至今还没有消化完。他让我看到了解决发布和变更风险的终极解决方案，没有一次性解决问题的部署／配置／发布工具，有的是历练和打磨了千万次的持续部署流水线；隐约地觉得没用入手的企业都会慢慢跟上的。
以上是我对DevOps的阶段性总结，跨度有半年之久。这半年中我逐渐看清了我的主要兴趣点，抛除所有其他主题，目前剩下的就是：云计算和DevOps。一方面觉得年纪不饶人，不能可能在和年轻人拼精力、体力和创意；我的背景和经验都让我感觉，在这两个话题上，我还是有很多年的经验和技术积累和总结的。云计算是（公有云＋私有云）未来企业IT基础架构的走向；DevOps是目前看比较正确的运作实践。一个便技术，一个便管理，正好完整覆盖了我的经验；在其对应的开源技术这个分支里，我想它们都还有这很多的为探索和研究的项目。</description>
    </item>
    
    <item>
      <title>下一代应用为中心的平台 OpenShift</title>
      <link>https://example.com/2016/01/12/e4b88be4b880e4bba3e5ba94e794a8e4b8bae4b8ade5bf83e79a84e5b9b3e58fb0-openshift/</link>
      <pubDate>Tue, 12 Jan 2016 04:05:46 +0000</pubDate>
      
      <guid>https://example.com/2016/01/12/e4b88be4b880e4bba3e5ba94e794a8e4b8bae4b8ade5bf83e79a84e5b9b3e58fb0-openshift/</guid>
      <description>Amadeus uses next-generation containerized application platform with OpenShift from Martin on Vimeo.
以上视频来源于：https://blog.openshift.com/openshift-3-amadeus-red-hat-summit-session-recording-recap/</description>
    </item>
    
    <item>
      <title>OpenStack Enterprise Ready</title>
      <link>https://example.com/2015/05/14/openstack-enterprise-ready/</link>
      <pubDate>Thu, 14 May 2015 16:36:27 +0000</pubDate>
      
      <guid>https://example.com/2015/05/14/openstack-enterprise-ready/</guid>
      <description>不是好不好，而是用不用？ 要说OpenStack的优点，技术人员能说出一堆词汇，如开源、弹性、稳定、可扩展、迅速搭建私有云、对硬件要求不高、解耦、能快速扩展新业务等等。但实际应用的案例为何这么少。
    国内传统企业用的少，互联网公司用了不少了，创业公司捣鼓OpenStack部署公有云服务的业务也不少了，总体看OpenStack水平高的人不在数量巨大的传统企业里，当前人员也不存在这个流向，更重要的是传统企业没有合适的在OpenStack上跑的workload。因此少。
    一个数据是，这两年计划部署OpenStack的企业为84%，可见大多数企业仍观望。这问题出在哪里？
   原因同上。
   技术仍旧是问题。OpenStack的问题是半年快速迭代，发布新产品，速度太快，老版本跟不上。理论上，新版本向下兼容。但在一些版本较大改动，加入新的功能时，如果企业已经深度应用了旧版本，可能面临技术无法升级，或者需要重度开发的问题。
     开发改动大么？那些地方大改动了？深度开发的部分是什么组件？是遵循了向下一个版本兼容的原则了么？代码提交会社区了么？OpenStack社区版升级了，企业就一定要升级旧的版本么？什么情况下升级版本？什么情况下打补丁知道么？OpenStack是云操作系统，我们看到的常见的开发场景是：界面友好度的调整、虚拟机功能的增强、辅助管理功能的增加等等。如果基于某个版本把这些附加功能开发出来了，其实业务需求清晰和随后调整不大的话，其实是可以用一定时间的。升级有两个原因：修复bug，增加新版本的功能。我见过创业公司把之前开发的东西一次一次废掉重来的情况，主要原因还是他们首先不能提交代码会社区，其次开发的东西不是外挂式和主框架松耦合的。企业面对开发是谨慎的，往往不会在投入大量功能评估后，在清晰的需求下二次开发。二次开发做的多得还是想做OpenStack生意的创业公司，而传统企业的这些金主客户，我感觉他们还真没有这个需求和闲工夫。因此开发重，不能平滑进入下一代新版本不是用的少和不用的原因。
     另外与企业规模有关。多大企业需要使用OpenStack，需要部署在哪些生产环境，是否是全面替代，还是迁移，包括从VMware迁移到OpenStack，或者是新应用局部部署OpenStack？这些不考虑清楚，没办法应用。
     这是一个很普遍的误区，太多人这么想了。从VMWare迁移到OpenStack真的这么重要么？真的存在这个场景了？服务器虚拟化和OpenStack是两种同类型的基础架构技术。服务器虚拟化跑传统的有状态应用；OpenStack跑需要弹性扩展的无状态应用。有状态应用不适合跑在OpenStack上。也不太可能不做任何改变就能适应OpenStack环境。企业的无状态应用少，但这是一个发展过程和阶段。原因在于无状态应用和合适在OpenStack上跑得workload太少了。企业目前的应用workload是因，OpenStack部署少是果。不存在OpenStack替代服务器虚拟化的事情，他俩会并存很长时间，不是非黑即白的替代逻辑。
     当前看，对企业应用需求的评估太少，大多是IT产业（厂商）一头热，鼓吹OpenStack太好，反而令人生疑。
      说的好就怀疑了？这里说的应用需求评估有两方面。或者两个理解方向。这里可能是说OpenStack功能性方面，客观的讲，当一个技术在风口上的时候，说好话的多，这是客观规律，多年前服务器虚拟化也这样，现在热度低了，它再发新版本大家连个搭理的功夫都没有了，也没有啥评测文章出来，这都是自然规律。OpenStack也有失去热捧的那天，我最近看了一些基于它创业的技术型公司也都在反思和总结经验中。
      怎么用，谁来带头？ 当前案例也有，如电信运营商阿尔卡特朗讯（名字太长，以后会不会再加上西门子诺基亚）、诺基亚、西班牙电信；汽车领域宝马汽车、银行企业西班牙BBVA、传媒领域时代华纳有线等。这些企业具有标杆意义，不具有示范效应。企业规模不一样，生产环境不同，这是最大的不同。这些案例最明显的是以信息为核心资源的企业，IT系统建设较为完善和复杂，有意愿、有钱尝试新的IT技术。
      规模、环境、以信息为核心资源、IT成熟、有意愿、有钱；这些都不能说成是中外企业IT的差异，也完全和是否用OpenStack无关的因素。我朝存在大量的传统大型企业，都已经排名全球100强了，很多是我们的客户。它们的市值比以上公司大得多。举个例子：CCB的市值是2015年4月30日 - 成交量 4.88亿股 市值 18,151.</description>
    </item>
    
    <item>
      <title>你还在为失去服务器感到焦虑？</title>
      <link>https://example.com/2015/02/15/e4bda0e8bf98e59ca8e4b8bae5a4b1e58ebbe69c8de58aa1e599a8e6849fe588b0e784a6e89991efbc9f/</link>
      <pubDate>Sun, 15 Feb 2015 13:14:59 +0000</pubDate>
      
      <guid>https://example.com/2015/02/15/e4bda0e8bf98e59ca8e4b8bae5a4b1e58ebbe69c8de58aa1e599a8e6849fe588b0e784a6e89991efbc9f/</guid>
      <description>我耐心看了以下这篇文章《AWS Lambda Debuts for Running Code in the Cloud 》。我还没有来得及去测试一下这个服务，我只是对它感到新奇。有了它，业务应用可能就只需要Dev了，而不需要Ops了；更不用提什么DevOps了。当然这个观点稍微有点极端了。它的确实现了：程序代码可以基于事件在AWS的各种服务中运行。看完了那片文章我也没有察觉到它底层到底使用的是什么技术。只是说AWS再次走到了共有云服务的最前端。
传统的共有云服务里，大家还停留在虚拟机提供，网络隔离的认识阶段。数据库服务、大数据服务、配套的程序部署和管理监控服务，对于一般性的共有云提供商，也不尽完全。曾经和作共有云的人聊过，他们觉得：传统企业数据中心的拥有着和管理这依然有巨大的纠结“失去对服务器的管控，就会有事业的风险”。因此，可见对服务器的管理是多么的重要。但是，如果你拥有了服务器的控制，并坐拥巨大的私有云建设的资金，那么您能如何很快交付出靠谱的云服务呢？说实话，目前私有云的建设很缓慢，也就是作个大批量的服务器虚拟化。IaaS的建设案例还很少，即使有人说他们建成了新一代的云平台，近看一下大多还仅仅是增强版的虚拟机提供。当然这个虚拟机的提供是基本功，做不好这一客其它的云服务也面谈。我们详细观察以下AWS，它大量的服务，像是RDS，LB，Auto Scaling 等等功能，无处不见AWS EC2的扎实功底和无限变化。
国内的广大用户，已经选择了私有云了；越大的企业，越有条件大赶快上云建设。只是却是道路艰辛，图省事的有钱人，可以上全套V公司的云计算，却是它的吸引力、炫耀力和安慰力都是无法阻挡的。底层上的技术的引用是至关重要的，越省事的套件，等同于越少的弹性和自由度，等同于更少的自由发挥的空间，和更少的创造。AWS是基于Xen的服务器虚拟化技术，和一堆的其他开源技术。入手这条路解决了启动费用高的问题，带来了无限的创新和发展自由空间。他们不需要商业化软件或者产品么，例如，AWS是重要的Citrix netscaler用户。</description>
    </item>
    
    <item>
      <title>AWS 服务索引地图</title>
      <link>https://example.com/2015/02/11/aws-e69c8de58aa1e7b4a2e5bc95e59cb0e59bbe/</link>
      <pubDate>Wed, 11 Feb 2015 14:41:22 +0000</pubDate>
      
      <guid>https://example.com/2015/02/11/aws-e69c8de58aa1e7b4a2e5bc95e59cb0e59bbe/</guid>
      <description>以上图片用FreeMind软件生成，下载英文版原图点击这里：aws-service-map.mm

下载中文版PDF全图点击这里：aws-服务-脑图</description>
    </item>
    
    <item>
      <title>2014年AWS服务更新总结</title>
      <link>https://example.com/2015/02/08/2014e5b9b4awse69c8de58aa1e69bb4e696b0e680bbe7bb93/</link>
      <pubDate>Sun, 08 Feb 2015 14:24:33 +0000</pubDate>
      
      <guid>https://example.com/2015/02/08/2014e5b9b4awse69c8de58aa1e69bb4e696b0e680bbe7bb93/</guid>
      <description>有一段时间没有关注AWS了，下面是在 aws-faq.com 发的新贴。顺便梳理了一下过去一年的更新情况，
http://www.aws-faq.com/featured/aws-服务2015年开年有啥更新.html
AWS在去年新增了6个服务，整体的更新和服务升级的频率是一周一次；也就是说他们发布新版本的频率是每周一次，当然这是有网上发布信息为依推理出来的；感觉一周很可能超过一次。他们的电商也其它业务的发布评论，很可能就更高了。
AWS的公有云服务的技术成熟度和领先度我感觉是第一名的。它激发和促进了整个行业的发展。对私有云的促进和很明显。OpenStack的更新是半年一个新版本。其参考和兼容AWS服务是很明显的。它可以很大的满足于企业自建云服务的需求。</description>
    </item>
    
    <item>
      <title>AWS-FAQ post - AWS 一月有什么动态?</title>
      <link>https://example.com/2015/02/07/aws-faq-post-aws-e4b880e69c88e69c89e4bb80e4b988e58aa8e68081/</link>
      <pubDate>Sat, 07 Feb 2015 15:07:42 +0000</pubDate>
      
      <guid>https://example.com/2015/02/07/aws-faq-post-aws-e4b880e69c88e69c89e4bb80e4b988e58aa8e68081/</guid>
      <description>AWS-FAQ post - AWS 一月有什么动态?
http://www.aws-faq.com/blog/aws-blog/aws-%E4%B8%8A%E5%91%A8%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88-2015-%E5%B9%B41%E6%9C%88.html
  AWS 邮件服务的推出还是比较有趣，虽然很晚推出这个服务，但是还是推出了
  __ 总之1月的动静不大
  </description>
    </item>
    
    <item>
      <title>rdo</title>
      <link>https://example.com/2014/12/02/rdo/</link>
      <pubDate>Tue, 02 Dec 2014 03:08:56 +0000</pubDate>
      
      <guid>https://example.com/2014/12/02/rdo/</guid>
      <description>https://openstack.redhat.com/Main_Page</description>
    </item>
    
    <item>
      <title>openstack all in one</title>
      <link>https://example.com/2014/11/25/openstack-one/</link>
      <pubDate>Tue, 25 Nov 2014 14:42:45 +0000</pubDate>
      
      <guid>https://example.com/2014/11/25/openstack-one/</guid>
      <description>test</description>
    </item>
    
    <item>
      <title>XenServer 添加硬盘做本地存储</title>
      <link>https://example.com/2013/11/25/xenservere6b7bbe58aa0e7a1ace79b98e5819ae69cace59cb0e5ad98e582a8/</link>
      <pubDate>Mon, 25 Nov 2013 10:39:00 +0000</pubDate>
      
      <guid>https://example.com/2013/11/25/xenservere6b7bbe58aa0e7a1ace79b98e5819ae69cace59cb0e5ad98e582a8/</guid>
      <description>当您的 XenServer 测试机需要增加硬盘的时候，你需要通过简单的几条指令把新硬盘添加为本地存储。
下面的实例情况是：
  测试机有两块硬盘
  OCZ SSD硬盘一块
  SATA 不通硬盘一块
  还有一个U盘插在系统上
    SATA的硬盘是我需要加载的新硬盘
  这个新的硬盘希望被处理成XenServer本地的SR
  添加过程中主要需要使用这样几条指令：
  查看当前系统上的检查出来并且挂载中的分区： cat /proc/partitions
  详细查看这些存储和设备对应的情况： ls -l /dev/disk/by-id/
  创建新的本地SR: xe sr-create content-type=user device-config:device=/dev/disk/by-id/scsi-SATA_ST9320325ASG_5VD7G964 host-uuid=3850317b-d23a-4ed0-87f9-2b27854319e5 name-label=&amp;ldquo;SATA320&amp;rdquo; shared=false type=lvm
  [bash] [root@XS62 ~]# cat /proc/partitions major minor #blocks name
7 0 52378 loop0 8 0 250059096 sda 8 1 4193297 sda1 8 2 4193297 sda2 8 3 241669447 sda3 8 16 312571224 sdb 8 17 204800 sdb1 8 18 312235312 sdb2 8 32 4137984 sdc 8 36 4137856 sdc4 252 0 241655808 dm-0</description>
    </item>
    
    <item>
      <title>AWS 免费套餐截止后必须终止</title>
      <link>https://example.com/2013/09/24/aws-e5858de8b4b9e5a597e9a490e688aae6ada2e5908ee5bf85e9a1bbe7bb88e6ada2/</link>
      <pubDate>Tue, 24 Sep 2013 05:26:22 +0000</pubDate>
      
      <guid>https://example.com/2013/09/24/aws-e5858de8b4b9e5a597e9a490e688aae6ada2e5908ee5bf85e9a1bbe7bb88e6ada2/</guid>
      <description>对于亚马逊 AWS 的测试用户来说，你要知道你的免费套餐的截止日期，否则预期就会收费了，会计时收费，像叫停车费一样。我今天收到了亚马逊的提醒邮件，被告知，我的免费套餐将在本月截止，然后我不得不终止了该服务器。
我是去年10月19日开通的这个免费实例，作为一个一年的 AWS 用户来说，深深的体会到了 AWS 的强大，它的管理控制台非常成熟，它的提供的服务非常全面，它的云市场做的相当好。对于任何一个普通人，你可以无痛，无压力的面对一个自己的数据中心，你可以假象你拥有一个世界上最高级的数据中心，你可以给你的应用任意、随时随地的附件任何一种高级的数据中心基础架构服务，你可以具有无限的资源，并且这个资源不限制类型和容量。共有云必将和私有云二分天下，共有云必将赢得所有中小企业用户。
[caption id=&amp;ldquo;attachment_52574&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] EC2_Management_Console[/caption]
[caption id=&amp;ldquo;attachment_52575&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] Try_Cloud_Computing_Free_with_AWS_Free_Tier[/caption]</description>
    </item>
    
    <item>
      <title>CloudStack&#43;Swift 我心中的黄金搭档</title>
      <link>https://example.com/2013/09/03/cloudstack-swift/</link>
      <pubDate>Tue, 03 Sep 2013 08:25:46 +0000</pubDate>
      
      <guid>https://example.com/2013/09/03/cloudstack-swift/</guid>
      <description>&lt;p&gt;迪斯尼是一个有魔力的组织，在它的电影里冤家可以变伙伴。甚至CloudStack和OpenStack两大私有云死对头来到迪斯尼这个神奇的地方也可以“在一起”。当迪斯尼决定建设自己的云计算基础设施时，与很多企业一样面临一个艰难的抉择，从众多云计算技术方案和产品中选择一条道路。如今的云计算市场规模已 达数百亿美元，水已经很深，领头的是亚马逊这样的公共云巨头，以及亚马逊的对手们：Rackspace、Google、CloudStack、 Eucalyptus、OpenNebula等多种私有云和公共云技术与服务，每家都有绝活和独到之处。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Xen Movie, Part 1: The first ten years of open source Xen.</title>
      <link>https://example.com/2013/08/01/the-xen-movie-part-1-the-first-ten-years-of-open-source-xen/</link>
      <pubDate>Thu, 01 Aug 2013 09:29:20 +0000</pubDate>
      
      <guid>https://example.com/2013/08/01/the-xen-movie-part-1-the-first-ten-years-of-open-source-xen/</guid>
      <description>http://brightcove.vo.llnwd.net/e1/uds/pd/13639319001/13639319001_2484626552001_Citrix-Open-Source--Public-Version-.mp4</description>
    </item>
    
    <item>
      <title>Citrix XenServer is Now Fully Open Source</title>
      <link>https://example.com/2013/08/01/citrix-xenserver-is-now-fully-open-source/</link>
      <pubDate>Thu, 01 Aug 2013 09:26:51 +0000</pubDate>
      
      <guid>https://example.com/2013/08/01/citrix-xenserver-is-now-fully-open-source/</guid>
      <description>http://brightcove.vo.llnwd.net/e1/uds/pd/13639319001/13639319001_2488040716001_XenServer-OSS-Richard-Sharp-Final.mp4
With the release of Citrix XenServer 6.2, Citrix is pleased to announce that XenServer is now fully open source. In this video, Richard Sharp, Vice President of XenServer Product Development, explains why Citrix open sourced XenServer, what it means to our customers and how it will help the entire XenServer platform.</description>
    </item>
    
    <item>
      <title>A new open source strategy for Citrix XenServer</title>
      <link>https://example.com/2013/08/01/a-new-open-source-strategy-for-citrix-xenserver/</link>
      <pubDate>Thu, 01 Aug 2013 09:21:01 +0000</pubDate>
      
      <guid>https://example.com/2013/08/01/a-new-open-source-strategy-for-citrix-xenserver/</guid>
      <description>http://brightcove.vo.llnwd.net/e1/uds/pd/13639319001/13639319001_2503709704001_Sameer-Dholakia-v3.mp4
Sameer Dholakia, Vice President and General Manager of the Citrix Cloud Division, talks about the full open source strategy for XenServer. Learn why Citrix made XenServer open source and how this will benefit our customers and ecosystem partners.</description>
    </item>
    
    <item>
      <title>什么是真的云？</title>
      <link>https://example.com/2013/04/15/forrester-private-clouds-what-is-cloud-computing/</link>
      <pubDate>Mon, 15 Apr 2013 17:31:21 +0000</pubDate>
      
      <guid>https://example.com/2013/04/15/forrester-private-clouds-what-is-cloud-computing/</guid>
      <description>[su_box ] 最近有一篇比较热的文章，中文标题《Forrester：70%的“私有云”根本不是云》；你如果稍微搜索一下，你发现它几乎被转载烂了，但是我看了几篇，真心的担心读者们是否都能正确的理解。写本文，全当是给您的一个阅读帮助。 [/su_box]
中文版网页点这里 英文版网页点这里
中文翻译的质量有限，有些概念和逻辑错误，我做了一点点的修订，从而避免误解。
**【基于CNW.com.cn译稿】**如果企业数据中心拥有高度虚拟化的环境，有一个Web门户供商业用户申请和访问虚机，再有一种方法可以跟踪有多少资源被使用了……拥有这一切并不能叫做有了一个私有云。
假如有足够大的容量可以为员工提供他们所需要的任意数量的计算资源，并能够动态地上下扩展或收缩容量，但仍然需要IT人员制备好系统的话，那么这仍然不能叫私有云。
虚拟化和私有云之间的界限是比较模糊的，根据Forrester的最新报告，在企业的IT高管们所自诩的私有云中，高达70%的IT环境其实并非私有云。“这是个严重的问题。实际上是在做云洗白而已。”Forrester的云专家James Staten如此说。
为什么说这个问题非常重要? Staten认为，如果将一个高度虚拟化的环境称为云环境，但它又不具备私有云的一项或多项关键特征，那么IT部门就给了用户一个不切实际的期望。假如用户们发现这个环境不能自配置，或者没有弹性资源池而感到不满时，他们就有可能因此而气馁。那么当下一次用户需要实时运行一个虚机时，他们会选择在哪里运行呢? 是IT部门给他们的伪私有云? 还是亚马逊的AWS? 如此一来，IT部门就无法控制事态了。
大多数云专家已经对云计算(公有云或私有云)的定义有了普遍的共识，这就是NIST提出的五个关键特征。这些特征包括：
● 用户可按需索取、自服务
● 泛在的网络接入
● 共享资源池
● 弹性扩展资源的能力
● 拥有可计量的服务
如果没有这五大特征，那从技术上说就不能叫云。和某些人的想法相悖的是，虚拟化并不是私有云。它只是为云提供动力的一个基本要素，但只依靠它是创建不出一个云的。VMware的营销经理Mike Adams说，私有云必须在虚拟化环境之上综合更多复杂的管理功能，方能满足NIST的定义要求。
CA的战略解决方案副总裁兼云专家Andi Mann给这场讨论踩了一脚刹车。“如果你不符合所有这五大特征，那么你就陷入了语义学纠结中。”他认为真正的问题并不是说符合这五个复选标记的东西就叫做云，而是在于IT能否为用户提供适当的服务。“有时候，80%的云都已足够好了，”他说。“用户真正在意的是业务服务。谁会在意你的环境叫什么。你要关心的就是客户，就是业务用户是不是得到了他们需要的资源。”
也许企业并不需要弹性扩展，因为原本就是静态工作负载。即便不需要弹性的资源扩展能力，它仍然还可以需要云的其他特征——自服务、计费、泛在网络接入和共享资源池。但它在技术上可能并不符合NIST的定义。“所以，如果你要想技术上也说得过去，也可以将其称为：高效率的虚拟环境，”Mann说。
那么，所有这些云洗白来自哪里? Staten认为，IT管理人员基本上对云都抱有恐惧心理。企业内的虚拟化专家通常都处于支配地位; 在需要资源时，他们可以去制备相应的资源容量。而云被视为一种赋予用户自服务和动态扩展资源权力的模式，对IT是一种威胁。如果用户可以自己开通了，那还要他们这些虚拟化专家干什么呢?
Staten认为，这样想上述问题是错误的。即便有了云，IT管理人员还是有大量的工作可做，比如需要设置和确保云服务有一个可供用户选择的服务目录，需要完成安全访问协议配置，提供资源可用性和虚拟化组件等。管理人员必须接受这样一个理念：如果他们不这么做，那么用户不论如何还是需要访问和使用他们所需要的资源，这样还是会陷入可怕的“影子IT”的局面。(Martin修订)
我想先对以上的几个关键点和名词做一些解释，从而能让我们更好的理解原文作者的意图。
  &amp;ldquo;cloud-washing&amp;rdquo; &amp;ndash; “云洗白” 这个比喻是说：本来根本什么云都不是！但是还是要狡辩和伪装为私有云。真像是：纯虚拟化环境不等于云
   &amp;ldquo;shadow IT.&amp;rdquo; &amp;ndash; “影子IT” 这个比喻是说：IT部门是业务部门挥之不去的阴霾，他们跟没发赶上业务部门需求变化请求的脚本，业务部门的人从来不管你是用的是神马云，你们这帮人根本没有按时的交付过任何东西，甚至于每当想起需要IT部门来配合做什么东西，就感到没有指望，啥都需要漫长的等待。
  IT部门真的是技术不行么？IT部门真的是干活的人不够么？这个比喻后背后真是的故事：特别是大规模的企业，业务部门所需要的任何IT资源和变更都必须通过IT自动、半自动或者手工配置实现；小的到开通一个邮箱，重置一次密码；大到新的业务系统的升级和上线；往往IT或者业务用户发频繁和密集地发起种种请求时，没有任何一家传统企业的IT部门（亚马逊、谷歌这种公司除外，因为它们已经是云计算公司了）能够很有自信地、充分让业务部门满意地完成被要求完成的所有工作。它们为什么完成不了呢？这个就走入了IT管理的经典理论，这就是我之前十年工作经验中天天和用户沟通的东西：“保持IT系统的稳定，还是接受变化”；为了既能响应业务部门不断的变化请求和IT用户的日常需求，IT部门想到了很好的流程来加以解决，这个流程是什么？它叫“变更管理流程”。举个例子，大型的商业银行一般一周或者两周有一次系统变更日；所有的对IT系统的配置和改变，必须提前计划安排好工作顺序，只能在变更日当晚的固定时间窗口中完成，例如晚上11点到凌晨5点；如果在这个时间段某个工作没有完成怎么办？对不起！没有完成的变更叫做失败变更，你还必须在变更窗前前就把系统回退到未变更前的状态！你现在发现了么？对生产系统是多么严肃的事情！如果你在变更前，没有万无一失的备份计划，你但失误，你就歇菜了；或者你觉得是顺利完成变更了，但是营业厅一开门，IT的投诉热线就被打爆了，这也不行；变更一但导致生产系统的宕机，轻则IT部门的领导引咎辞职，重则数据中心的大领导乌纱帽不保。
以上讲述的故事可以说是我的亲身经历，就是中国的国情；那么这个文章的出处毕竟是国外的，这几个发话的大佬们都是何方神圣？
Forrester的云专家 James Staten ：BIO 从Bio上看，他好像是Forrester的头牌云分析师之一，有20年的IT从业经验。
VMware的营销经理Mike Adams ：网上查不到它的Bio，在VMWare网站搜索，也只能看到他是http://blogs.vmware.com/vsphere/ 的负责人。网上并没有关于此人的详细介绍，但是我们从vsphere的blog上在读一下这个产品的定位“BEGIN THE JOURNEY TO A PRIVATE CLOUD WITH DATACENTER VIRTUALIZATION”；这个说法和此大师在文章中说的一样：vsphere是数据中心虚拟化的一个技术组建，数据中心虚拟化技术是私有云建设的起点。但是它是起点，不是私有云。纯种的服务器虚拟化项目也不是那天就能进化成私有云了。</description>
    </item>
    
    <item>
      <title>解决XenServer tools not installed</title>
      <link>https://example.com/2013/04/07/xenserver-tools-not-installed/</link>
      <pubDate>Sun, 07 Apr 2013 10:27:38 +0000</pubDate>
      
      <guid>https://example.com/2013/04/07/xenserver-tools-not-installed/</guid>
      <description>[box color=&amp;ldquo;orange&amp;rdquo; icon=&amp;ldquo;flag&amp;rdquo;] 鸣谢：Michael Zhang的经验分享，有需要的请收藏备用。 [/box]
刚刚搞定了POC环境中一个很诡异的问题。把过程写出来以供大家参考。建议可以把这个设置放到POC的实施手册中。 刚开始做POC时，我们安装了XP的模板，并且安装了同版本的XenTools，此时XenCenter面板上显示虚机的IP地址没有问题。但是跑了一段时间后发现，所有的虚机的IP地址都显示不出来了，并且XenCenter面板上显示XenServer tools not installed，虚机的内存信息，Disk IO等信息，都没有显示： 

后来重装了模板，重新发布了虚机，一切就OK了，此时我认为是原先的模板有问题，所以导致了这个issue。 但是后来跑了几天，某台虚机又出现了类似的症状，此时我意识到应该不是模板的问题了。然后我就检查了这台虚机的Service，发现：

这个Service就是XenTool的Service，因为没有启动，所以导致了上述的问题。 但是当我用手工试图重启该Service的时候，系统报改Service启动时停止，没有给出任何原因。Windows Event Log里也没看到任何报错。 后来上网查了下，原来是Windows Event Log的Application类的log满了以后，会导致该Service启动异常。 看了下XP的Windows Event Log的Application类日志的属性，默认只有64K：

我把上面的日志文件大小阀值改成了1024K，清空Application类的log，重启上面的Service, 成功，问题解决。
 

上述类似的问题我记得也有兄弟曾经遇到过，发邮件出来问过，当时怀疑是XenServer跟VDA的时间不同步造成，现在感觉也许跟这个原因有关。
[box color=&amp;ldquo;gray&amp;rdquo; icon=&amp;ldquo;order-check&amp;rdquo;] 欢迎投稿，请发邮件到： liuzh66@gmail.com [/box]</description>
    </item>
    
    <item>
      <title>TIPS install XenServer on Mac Mini 6.1 </title>
      <link>https://example.com/2013/02/21/tips-install-xenserver-on-mac-mini-6-1/</link>
      <pubDate>Thu, 21 Feb 2013 09:24:38 +0000</pubDate>
      
      <guid>https://example.com/2013/02/21/tips-install-xenserver-on-mac-mini-6-1/</guid>
      <description>[caption id=&amp;ldquo;attachment_52258&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;640&amp;rdquo;]mac-mini-2012-with-XenServer[/caption]
今天尝试在Mac Mini上安装XenServer，下面把经验共享一下。我遇到的问题有两个：
  网卡无法识别：使用默认安装盘安装，提示没有检测到网卡，安装无法继续
  网卡驱动植入失败：在按了F9加载驱动的时候，没有发现驱动程序，无法继续安装
  安装完毕之后，重启，屏幕上显示一个带问号的文件夹，一闪一闪无法正常启动XenServer
  经过一番折腾，发现这些点主意一下，应该就没有问题。
[caption id=&amp;ldquo;attachment_52255&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] 启动Macmini[/caption]
在启动Mac Mini的时候，在“咚”的一声之前，就按住ALT键，否则没法出现上面的屏幕，我用的是USB盘启动，所以要选择右侧的图标。
[caption id=&amp;ldquo;attachment_52256&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] 进入menu.c32菜单[/caption]
我遵循前人的经验，乖乖到此来禁止gpt；首先在这里要迅速输入menu.c32，输入完了就过了，就必须重新关机，重启mac mini。
[caption id=&amp;ldquo;attachment_52257&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] 输入disable-gpt参数[/caption]
进入这个屏幕了，要快速按TAB键，否则启动参数无法编辑，输入disable-gpt参数的机会就失去了。编辑启动参数的时候，把参数加载第二个&amp;mdash;（三个短横线）前即可，上图我为了拍照在参数之前加了很多空格，其实这个参数和前后要至少一个空格就够了。
在进入安装的屏幕后，如果是XenServer6.0.201的源安装盘，还必须下载tg3的网卡驱动，并且用工具打入iso文件，这样安装的时候，就可以选择到加载网卡启动，否则6.0.201的安装盘即不自带此网卡驱动，也无法正常识别附加的驱动。网卡驱动下载地址为：http://support.citrix.com/article/CTX135328 要把加压后的iso文件，再次加压到对应的目录里才行，直接把解压后的几个文件放入目录，安装程序是无法识别到网卡驱动的。如果能正常识别的话，会出现选择框，让你选择 Broadcom tg3。如果是XenServer6.1的安装盘，就不需要折腾驱动了，原盘自带了Broadcom tg3网卡驱动。下面有两张截图，供必须要使用XenServer 6.0.201的人参考。
[caption id=&amp;ldquo;attachment_52250&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] XenServer 6.0.201 with driver[/caption]
[caption id=&amp;ldquo;attachment_52251&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] xs-repository-list 实例[/caption]
即使你不是安装XenServer6.0.201，也推荐使用UltraISO来把iso文件写入一个USB盘来安装，因为Mac Mini没有光驱，而且这样不用刻盘，更加环保一点。
最后一个Tips：这个可能是解决问题3的技巧，在安装的最后一个屏幕上，安装程序提示移除Mac Mini上的其他所有截至，然后点击回车完成安装。在这个屏幕上要识时务的把安装U盘从机器上拔除，然后点击回车来重启Mac Mini。经过我的验证，拔出U盘后好像没有在遇到过闪烁文件夹的重启不了的问题。建议都使用自带Broadcom tg3网卡驱动的6.1来安装，否则6.0.201安装完成之后，一旦打了补丁，还需要下载for这个补丁的新版本的网卡驱动，在重新手工打上该驱动，否则网卡会起不起来。</description>
    </item>
    
    <item>
      <title>2012 Hadoop与大数据技术大会PPT下载</title>
      <link>https://example.com/2013/01/09/2012-hadoope4b88ee5a4a7e695b0e68daee68a80e69cafe5a4a7e4bc9appte4b88be8bdbd/</link>
      <pubDate>Wed, 09 Jan 2013 06:24:06 +0000</pubDate>
      
      <guid>https://example.com/2013/01/09/2012-hadoope4b88ee5a4a7e695b0e68daee68a80e69cafe5a4a7e4bc9appte4b88be8bdbd/</guid>
      <description>http://hbtc2012.hadooper.cn/download.html</description>
    </item>
    
    <item>
      <title>2013年的云计算，您准备好了么？</title>
      <link>https://example.com/2012/12/18/2013e5b9b4e79a84e4ba91e8aea1e7ae97e682a8e58786e5a487e5a5bde4ba86e4b988/</link>
      <pubDate>Tue, 18 Dec 2012 16:12:30 +0000</pubDate>
      
      <guid>https://example.com/2012/12/18/2013e5b9b4e79a84e4ba91e8aea1e7ae97e682a8e58786e5a487e5a5bde4ba86e4b988/</guid>
      <description>Getting Ready for Cloud Computing 2013
[dc]看[/dc]到篇不错的文章，值得分享一下。在最近的三四年里面，厂商都忙着炒作概念，用似云非云的各种虚拟化来对付用户，实际上云计算并没有那么简单，我一直不敢给客户讲，也讲不好的东西就是：对于一个特定的用户，告诉它什么是云？他应该怎么怎么过渡到云？先从那里做起？大致的路径是怎么样的？一旦对应到具体的用户环境里面，以上每个用户的答案都是不同的，感觉没有十足实践经验的人，根本无法和用户达成共鸣和一致。这个和我以前做ITSM/ITIL完全不同，在那块领域里面，讲究的是管理的思路和理念，等你做了一些项目之后，你从项目中的总结和提炼，就成了你的炮弹，用在其它新用户身上，用不好，也用不错；管理的学问往往是殊途同归的。而云计算，目前国内真的还属于初级阶段，就像是在2002年左右的时候，我们给银行做ITIL做服务台一样，对无论是用户和厂商的人来说，还不夸张的说，都是雾里看花。
[tab label=&amp;ldquo;云计算七大注意事项&amp;rdquo; first=&amp;ldquo;yes&amp;rdquo;]
[list icon=&amp;ldquo;star&amp;rdquo;]
   检查和评估您的网络 : 如果数据中心不做网络架构的巨大调整，给云平台配置足够强大的带宽资源，上云计算，基本上就是让用户和运维人员都痛苦不堪，不会有啥好结果。    建立鼓励员工进谏的机制 : 识别、评估、选择和实施云计算方案的流程需要提前设计好。在每个阶段和过程里让最终用户、开发人员和管理层都充分的参与意见。    聚焦在立竿见影的运维痛点和功能差距上: 瞄准那些影响最终用户生产力和新上面的应用部署项目上。让云计算的高效和灵活等优势小试牛刀一下，从而验证需求点的准确性和方案的靠谱性。    先尝后买 : 云计算是最着急投胎的，没有必要大干快上，对于数据中心来说也是一个渐进的温和的改良的过程。选定一个足够小的范围，先尝后买，分区分配扩容，放大项目范围。    承载应用（App hosting）和SaaS应用不能划等号 : 这根本就是个误解，无须多说。    监控利用率和满意度 : 不管云做的大小，资源都要物尽其用，跟踪最终用户和领导大满意度，与同行用户横向比较数据，找出自己的所处位置和程度。实施反馈机制，让用户驱动云的需求和建设方向。    眼观六路，站足先机 : 市场风云莫测，业务模式层出不穷，这些都不断催熟这云方案。所以广泛关注，收集跟多信息，为云计算建立多个选项，多种选择总是好事。    [/list] [/tab]
[tab label=&amp;ldquo;英文原文&amp;rdquo;]
If you’ve been holding back about moving to the ‘Cloud’, it is time to get onboard the Cloud Computing express.</description>
    </item>
    
    <item>
      <title>何谓云？</title>
      <link>https://example.com/2009/10/21/what-is-cloud-computing/</link>
      <pubDate>Wed, 21 Oct 2009 04:36:11 +0000</pubDate>
      
      <guid>https://example.com/2009/10/21/what-is-cloud-computing/</guid>
      <description>下面是两个Youtube上的视频，短短5分钟的视频就把云计算的相关核心概念解释的很清楚。
好像国内吧Youtube给屏蔽了，上面的视频可能看不到，Google真的应该和中国政府把关系搞好，哎~~</description>
    </item>
    
    <item>
      <title>BMC and Cloud computing</title>
      <link>https://example.com/2009/07/16/bmc-and-cloud-computing/</link>
      <pubDate>Thu, 16 Jul 2009 13:34:31 +0000</pubDate>
      
      <guid>https://example.com/2009/07/16/bmc-and-cloud-computing/</guid>
      <description>July 15, 2009 – BMC Software has announced that it is leveraging Amazon Web Services to provide a single, unified management solution meant to give customers control over existing internal IT assets and external cloud infrastructures, according to a company release.
http://www.information-management.com/news/amazon_bmc_software_cloud_computing-10015748-1.html
BTW: it seems the IT management is as important as infrastructure.</description>
    </item>
    
    <item>
      <title>Cloud Computing Infrastructure and Architecture Guide-From SUN</title>
      <link>https://example.com/2009/07/14/cloud-computing-infrastructure-and-architecture-guide-from-sun/</link>
      <pubDate>Tue, 14 Jul 2009 05:34:26 +0000</pubDate>
      
      <guid>https://example.com/2009/07/14/cloud-computing-infrastructure-and-architecture-guide-from-sun/</guid>
      <description>** » 下载本指南** （中文版）
《云计算基础设施和体系架构指南》
** » 下载本指南** （英文版）
《Cloud Computing Infrastructure and Architecture Guide》
» 更多 Sun 白皮书、指南、蓝图 (英文版)</description>
    </item>
    
    <item>
      <title>It just looks like a Mac desktop</title>
      <link>https://example.com/2009/02/02/it-just-looks-like-a-mac-desktop/</link>
      <pubDate>Mon, 02 Feb 2009 14:14:13 +0000</pubDate>
      
      <guid>https://example.com/2009/02/02/it-just-looks-like-a-mac-desktop/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://www.apple.com.cn/getamac/whichmac/images/portables_macbookair20090106.jpg&#34; alt=&#34;&#34;&gt;We all knows Mac OS X looks very nice, and works nice also. But, Mac can not be only system for you to use. Most of us are using Intel PC desktops and laptops. You can&amp;rsquo;t have your cake and eat it too. Chinese saying says &amp;ldquo;鱼和熊掌不可得兼&amp;rdquo; . So, you might need a new Mac skin for your desktop, no matter MS Windows or Linux OS. I&amp;rsquo;d like share two tips, you can make a Mac desktop in  minutes.&lt;br /&gt;&lt;br /&gt;**For Windows: **FlyakiteOSX is a all-in-one package. It much more easier then making a Mac-buntu. Does it slow down you windows system? Of course, yes. it&amp;rsquo;s just a little bit and acceptable for me.&lt;br /&gt;&lt;br /&gt;&lt;img src=&#34;http://osx.portraitofakite.com/header.png&#34; alt=&#34;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;For Gnome Linux:&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;There is a open source prject on the SourceForge.net: &lt;a href=&#34;http://sourceforge.net/projects/mac4lin&#34;&gt;http://sourceforge.net/projects/mac4lin&lt;/a&gt; You need download the package and un-tar it. A pdf document will walk you through every settings. I made my Mac-buntu just in 20 minutes. I do not like &amp;lsquo;global meun&amp;rsquo; and widget, so I ingored them. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>从云计算联想到第一代电脑系统</title>
      <link>https://example.com/2009/01/19/e4bb8ee4ba91e8aea1e7ae97e88194e683b3e588b0e7acace4b880e4bba3e794b5e88491e7b3bbe7bb9f/</link>
      <pubDate>Mon, 19 Jan 2009 07:32:50 +0000</pubDate>
      
      <guid>https://example.com/2009/01/19/e4bb8ee4ba91e8aea1e7ae97e88194e683b3e588b0e7acace4b880e4bba3e794b5e88491e7b3bbe7bb9f/</guid>
      <description>记得以前看过一本描写Bill Gets的书，他上中学的时候，在河滨中心通过一个远程终端，连接到某大学的计算机系统，输入程序代码，并且得到代码在远程电脑系统中的输出，输出好像是在屏幕上出现的，或从打印机上输出的。我基本上忘了那电脑系统的名称，不过它的特点基本上是这样的：当时电脑系统很少，可能全世界上也没有多少台功能全面的电脑；用户使用的特别像是一种计算服务，由于终端设备根本没有技术能力，当时还没有个人电脑；接入方式根本不是tcp/ip更不是internet，当时还没internet。在学习了云计算的一些概念之后，我迷惑了，这个时尚的技术，怎么越看越眼熟啊。
IBM的主机系统可谓是当今电脑世界的恐龙化石级产品，他是一个活化石基本的技术，在经历了开放系统时代之后，我们即将进入云计算时代，我总感觉云计算是一种技术路线的复古。主机系统和第一代电脑系统最相似，区别是可以通过TCP/ip网络，和开放系统通信了。最为一种新兴起的技术，我试图follow http://www.johnmwillis.com/来学习云计算，遗憾的是从08年初以来并没有仔细听他所有的colud cafe；这个老兄在把blog改名为IT Management and Cloud Blog，真可谓是一高产的blogger，这哥们每天能发四五个post，强啊。最近找时间听了一段cloud cafe，我发现到目前为止还没有一个能让大多数人都认同的云计算的概念，基本上对云计算的感念方面有两道三种说法。可以看看 http://en.wikipedia.org/wiki/Cloud_computing 参考这上面的说法也只能有一个模糊的感觉。
看看电脑技术打发展历程：最早的电脑系统，主机系统，开放系统，群集，网格，云计算。前一段时间看过一个非常抢眼的标题“以后世界上将只有5台电脑”。SaaS是一个比较火热的和云计算相关的技术，我认为它像是在web2.0发展到一定阶段后Web应用的一个发展，这方面的强者为salesforce之流。Google和Salesforce不同的是，Google提供网上office套件的同时，还开发他的平台，并提供与之配套的 SDK。Amazon不提供应用也没有SDK，他只提供平台，平台上包括基本的计算和存储服务。Google和Amazon说起来算是基础架构作为一种服务。抛开云计算本身不谈，用户使用和访问的方式并没有发生变化，在任何一个web浏览器存在的地方都能使用或者管理到云计算。客户端的计算和存储能力再次此退化到零，这不能说不是计算机技术发展的返祖现象吧！哈哈～～我也快糊涂了！</description>
    </item>
    
    <item>
      <title>Open Source and Cloud Computing(开源与云计算)</title>
      <link>https://example.com/2008/10/16/open-source-and-cloud-computinge5bc80e6ba90e4b88ee4ba91e8aea1e7ae97/</link>
      <pubDate>Thu, 16 Oct 2008 13:09:16 +0000</pubDate>
      
      <guid>https://example.com/2008/10/16/open-source-and-cloud-computinge5bc80e6ba90e4b88ee4ba91e8aea1e7ae97/</guid>
      <description>Link：Open Source and Cloud Computing(开源与云计算)
From above post:
开源的成功有几个关键元素：
1.许可证要允许和鼓励再发布、修改乃至发展分支；
2.一个体系结构要使程序能被作为组件在任何可能的地方重用，以及可以被扩展，而不是被替换来提供新功能；
3.低门槛，让新用户轻松上手一试。
4.低门槛，让开发人员构建新的应用与大家分享。
所以我给出我的第一个建议：如果你关心云计算的开源，**请在那些设计为联合而不是集中控制的服务上构建项目**。体系结构从来都是战胜许可证的。 
个人认为：使用云计算的用户并不一定是租用土地的佃户；佃户把自己的收成都给了地主，自己剩下的少的可怜。云计算的用户会愿意付出多少成本给地主是可以计算的，计算的原则就是‘保证自己的利益、安全等’。
 </description>
    </item>
    
  </channel>
</rss>
