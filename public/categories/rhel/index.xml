<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RHEL on Hugo Future Imperfect Slim em português</title>
    <link>https://example.com/categories/rhel/</link>
    <description>Recent content in RHEL on Hugo Future Imperfect Slim em português</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 16 Jun 2015 16:25:34 +0000</lastBuildDate><atom:link href="https://example.com/categories/rhel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在 RHEL 7 上安装 Foreman 1.8</title>
      <link>https://example.com/2015/06/16/e59ca8-rhel-7-e4b88ae5ae89e8a385-foreman-1-8/</link>
      <pubDate>Tue, 16 Jun 2015 16:25:34 +0000</pubDate>
      
      <guid>https://example.com/2015/06/16/e59ca8-rhel-7-e4b88ae5ae89e8a385-foreman-1-8/</guid>
      <description>首先安装RHEL7使用光盘安装最小化系统，安装完成之后，关闭防火墙和SELinux（为了测试方便），配置主机名为FQDN格式，如 fm1.8.xenlab.com； 加本机的主机名解析到/etc/hosts 文集中。之后注册到RHN。
[bash]
[root@fm18 ~]# subscription-manager register [root@fm18 ~]# subscription-manager attach &amp;ndash;auto [root@fm18 ~]# subscription-manager repos &amp;ndash;disable=&amp;quot;*&amp;quot; [root@fm18 ~]# subscription-manager repos &amp;ndash;enable=rhel-7-server-optional-rpms [root@fm18 ~]# subscription-manager repos &amp;ndash;enable=rhel-server-rhscl-7-rpms [root@fm18 ~]# subscription-manager repos &amp;ndash;enable=rhel-7-server-rpms [root@fm18 ~]# rpm -ivh http://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm [root@fm18 ~]# yum -y install http://yum.theforeman.org/releases/1.8/el7/x86_64/foreman-release.rpm [root@fm18 ~]# yum -y install http://ftp.sjtu.edu.cn/fedora/epel/epel-release-latest-7.noarch.rpm [root@fm18 ~]# yum clean all [root@fm18 ~]# yum makecache [root@fm18 ~]# yum update -y [root@fm18 ~]# reboot [root@fm18 ~]# yum install foreman-installer</description>
    </item>
    
    <item>
      <title>Practical Linux Infrastructure</title>
      <link>https://example.com/2015/03/29/practical-linux-infrastructure/</link>
      <pubDate>Sun, 29 Mar 2015 14:10:37 +0000</pubDate>
      
      <guid>https://example.com/2015/03/29/practical-linux-infrastructure/</guid>
      <description>Practical Linux Infrastructure by Syed Ali Link: http://amzn.com/148420512X
[gallery size=&amp;ldquo;medium&amp;rdquo; ids=&amp;ldquo;53654,53655&amp;rdquo;]
The CI/CD pipeline automates as many tests as possible to gain confidence in the code. In addition, it performs a complete build of the software system and ensures the code that has been checked in does not cause anything to break. Any failure has to be investigated by a developer. There are numerous software products that can help implement a CI/CD pipeline, including the following: Jenkins (http://jenkins-ci.</description>
    </item>
    
    <item>
      <title>入手 zsh 和 oh-my-zsh</title>
      <link>https://example.com/2015/03/23/e585a5e6898b-zsh-e5928c-oh-my-zsh/</link>
      <pubDate>Mon, 23 Mar 2015 02:47:45 +0000</pubDate>
      
      <guid>https://example.com/2015/03/23/e585a5e6898b-zsh-e5928c-oh-my-zsh/</guid>
      <description>安装zsh在任何系统上几乎都是差不多。Zsh 是一款功能强大的交互式 shell，与 Bash 相比，Zsh 下面几点表现令人印象深刻：
[wm_list bullet=&amp;ldquo;icon-linux&amp;rdquo; class=&amp;quot;&amp;quot;]
  自动补全
  拼写纠错
  定制性强
  美观的命令提示符（这点吸引力最大）
  [/wm_list]
相信你安装之后，对上面几点会有更加真切的感受！
下面是RHEL 7 上的安装过程。
[bash]
[root@w540]~# yum install git [root@w540]~# curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh [root@w540]~# cat .zshrc
Path to your oh-my-zsh installation. export ZSH=/root/.oh-my-zsh
Set name of the theme to load. Look in ~/.oh-my-zsh/themes/ Optionally, if you set this to &amp;ldquo;random&amp;rdquo;, it&amp;rsquo;ll load a random theme each time that oh-my-zsh is loaded.</description>
    </item>
    
    <item>
      <title>Martin&#39;s lab 主服务器搭建</title>
      <link>https://example.com/2015/03/08/e4b8bbe69c8de58aa1e599a8e690ade5bbba/</link>
      <pubDate>Sun, 08 Mar 2015 15:42:01 +0000</pubDate>
      
      <guid>https://example.com/2015/03/08/e4b8bbe69c8de58aa1e599a8e690ade5bbba/</guid>
      <description>上图是红帽产品和技术架构的全貌。来源是：http://www.redhat.com/en/technologies/cloud-computing 这张图我用在了我的首次给公司内部的全体销售培训上。由于我是IT管理背景的，因此我很习惯从云管理层往下看云引擎的各个层面。但是管理层产品，其实是后来整合纳入的。红帽起家的旗舰产品还是在底层的RHEL。总之，我想在一个Lab里面实现以上所有的部分，所谓实现是让其每个部分都能在运行在假象的一个有意义的业务场景里。还好，红帽的产品全都是基于x86平台的，因此我用几个笔记本，再加上我家里的这台HP MicroServer G8服务器应该能够全部部署出来。
做这样的一个lab还是要一定的规划和设计的，这些初步的规划和设计都在我的本子里手写的，就不在这里敲字了，随后我会抽空上几张图。
主服务器基本配置 硬件：Lenovo W540 CPU Intel i7, RAM 32 GB, SSD 512GB, HD 1TB
OS : RHEL 7.1
订阅是红帽公司的业务模式，也是红帽认为最自豪的部分，红帽相信可以成为开源技术和用户之间的催化剂，它不断参与最优秀的开源技术创新，并为其用户提供最强有利的技术服务和支持。红帽技术员工可以申请一个红帽雇员订阅。我的订阅可以在网上查到如下图所示：

红帽的服务必须是基于订阅的每一个节点（物理、虚拟）都需要有有效的订阅，否则红帽的支持服务不能生效。对于一个已经成功注册到红帽官网，并且状态正常的服务器，应该显示如下的注册状态：
[bash] [root@w540 ~]# subscription-manager list
+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+ 安装的产品状态 +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+ 产品名称： Red Hat Enterprise Linux Server 产品 ID： 69 版本： 7.0 构架： x86_64 状态： 已订阅 状态详情： 开始： 2014年09月09日 结束： 2015年12月08日 [/bash]
红帽员工订阅意味着所有红帽产品。
基本服务配置 KVM KVM的上手还真比我想象的速度要慢一些，起码比我用XenServer的经历更加纠结一些。总之现在可以彻底的忘记其它任何的选项，KVM可以满足我的所有需求了。由于主服务器有512SSD + 32GB RAM + 8 vCPU，所以我打算把产品里的所有管理控制节点VM都部署在这个机器上。预计有10个左右的虚拟机。 安装配置方面这里就不赘述了。只把困扰我许久的几个网络配置贴出来，供参考。
网桥0的功能是为所有虚拟机提供外网链接，使他们和主机一样直通主机所物理链接的局域网。 [bash] [root@w540 ~]# cat /etc/sysconfig/network-scripts/ifcfg-br0 DEVICE=br0 ONBOOT=yes TYPE=Bridge BOOTPROTO=none STP=on DELAY=0 DNS1=192.</description>
    </item>
    
    <item>
      <title>虚拟机根分区扩容</title>
      <link>https://example.com/2015/01/21/e8999ae68b9fe69cbae6a0b9e58886e58cbae689a9e5aeb9/</link>
      <pubDate>Wed, 21 Jan 2015 15:46:31 +0000</pubDate>
      
      <guid>https://example.com/2015/01/21/e8999ae68b9fe69cbae6a0b9e58886e58cbae689a9e5aeb9/</guid>
      <description>我的Satellite虚拟机下载了所有常用的repo，100GB的磁盘空间都占满了，无奈必须扩容，否则没法用了。
扩容的前提条件正好满足：根分区在最后一个分区。
由于是kvm的虚拟机，所以首先需要扩大硬盘文件的大小： qemu-img resize my.img +100G 。
下面去操作系统里扩容。先要用fdisk删除根分区。记录初始的其实点。然后用n命令新建分区，输入原始其实点位置，回车默认接受结束点的最后一个位置。w存盘。
reboot系统，起来之后用命令扩容分区： resize2fs /dev/vda2 ； 在线扩容需要等一段时间，100GB的空间初始化在我的普通磁盘上做了5分钟左右。在此reboot机器，起来之后在看 df -kh 发现已经增加了100GB了，接下来再也不用担心类似情况了。</description>
    </item>
    
    <item>
      <title>RHEL 性能 提升方法和工具</title>
      <link>https://example.com/2015/01/10/rhel-e680a7e883bd-e68f90e58d87e696b9e6b395e5928ce5b7a5e585b7/</link>
      <pubDate>Sat, 10 Jan 2015 16:42:29 +0000</pubDate>
      
      <guid>https://example.com/2015/01/10/rhel-e680a7e883bd-e68f90e58d87e696b9e6b395e5928ce5b7a5e585b7/</guid>
      <description>RHEL 7 中已经引入了比较完备的性能优化、调整和监控的工具。对于我这个监控背景的人来说，不具体看下，实在忍不住。
首先，从这篇KB学起来把。https://access.redhat.com/articles/785283
RHEL 下性能调优的工具有三种。
  Performance Co-Pilot
  TUNA
  Tuned
  下面依次简单说下这几个工具。
Performance Co-Pilot 监控工具 [caption id=&amp;ldquo;attachment_53397&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;1000&amp;rdquo;] PCP Charts - Overview View[/caption]
PCP是一个工具集，它分为两个部分：
  PCP Collectors ： 性能指标数据采集器，它可以从系统内核或者其他数据源来持续的采集数据。是由几个系统服务组成。 These are the parts of PCP that collect and extract performance data from various sources, e.g. the operating system kernel.
  PCP Monitors ：性能参数集中查看和监控的图形界面。它可以同时连接多台服务器。These are the parts of PCP that display data collected from hosts (or archives) that have the PCP Collector installed.</description>
    </item>
    
  </channel>
</rss>
