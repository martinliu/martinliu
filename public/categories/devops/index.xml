<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on Hugo Future Imperfect Slim em português</title>
    <link>https://example.com/categories/devops/</link>
    <description>Recent content in DevOps on Hugo Future Imperfect Slim em português</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 08 Apr 2020 17:04:08 +0800</lastBuildDate><atom:link href="https://example.com/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Elastic Stack 监控 Covid-19 疫情发展</title>
      <link>https://example.com/blog/%E4%BD%BF%E7%94%A8-elastic-stack-%E7%9B%91%E6%8E%A7-covid-19-%E7%96%AB%E6%83%85%E5%8F%91%E5%B1%95/</link>
      <pubDate>Wed, 08 Apr 2020 17:04:08 +0800</pubDate>
      
      <guid>https://example.com/blog/%E4%BD%BF%E7%94%A8-elastic-stack-%E7%9B%91%E6%8E%A7-covid-19-%E7%96%AB%E6%83%85%E5%8F%91%E5%B1%95/</guid>
      <description>代号为 COVID-19 的新型冠状病毒肺炎在全球肆虐着，剧情翻转的非常快，目前欧美已经成为了全球的重灾区。 本文介绍如何使用 Elastic Stack，实现对国内外疫情发展态势的分析。介绍一种简单易行的数据分析流程。说不定你也可以得出独到的高价值洞察。
本文使用的 Elastic Stack 版本和环境如下：
 Vagrant 的基础镜像 bento/centos-8 Elasticsearch 7.6.1 Kibana 7.6.1 Logstash 7.6.1  关于使用 Vagrant 环境搭建 Elastic Stack 的方法，见我之前的文章。本文的数据分析处理流程图如下所示。
分析和展示丁香园数据 本文的目标分析数据源是 https://ncov.dxy.cn/ncovh5/view/pneumonia 这个也是我们最近一直在关注的关于中国的疫情公布平台。
丁香园网页的数据被香港大学的 Isaac Lin 同学，通过他所开发的网络爬虫抓取加工后，用 API 的形式和 csv 数据文件的形式提供了出来，他的爬虫程序和结果数据给很多目前分析疫情的人带来了很大的帮助，有不少人去他的 blog 和 github 上点赞和评论的。
 https://github.com/BlankerL/DXY-COVID-19-Data/tree/master/csv https://lab.isaaclin.cn/nCoV/  你可以用 Python 程序调用Lin 同学的 API 然后在将处理后的结果写入 ES，这样的脚本可以参考 Rockybean 的这个 https://www.yuque.com/elastictalk/blog/et25?from=timeline。也可以用下面的命令将Github 的 csv 文件下载到本地，在做手工的数据分析，这样也等于是对林同学的数据内容和定义进行一次深入的探索，这也将更有益于你理解数据，方面后面使用 Kibana 做数据分析。
在本机使用 git 做数据下载和同步的命令如下。
git clone https://github.com/BlankerL/DXY-COVID-19-Data.git cd DXY-COVID-19-Data/ git pull 你也可以用用git pull命令在日后做数据更新，并进行后续的跟踪分析。</description>
    </item>
    
  </channel>
</rss>
