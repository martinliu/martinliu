<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>刘征的博客</title><link>https://martinliu.cn/</link><description>Recent content on 刘征的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 06 Feb 2021 10:36:12 +0800</lastBuildDate><atom:link href="https://martinliu.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Elastic 可观测性工作坊</title><link>https://martinliu.cn/blog/workshop-elastic-observability/</link><pubDate>Sat, 06 Feb 2021 10:36:12 +0800</pubDate><guid>https://martinliu.cn/blog/workshop-elastic-observability/</guid><description>&lt;p>本工作坊包括本地虚拟机版本、AWS 和腾讯云共三个版本，目标是用实践的方式理解 Elastic 可观测性解决方案。可观测性是管理云原生以应用复杂且分布式运维难点的关键所在。&lt;/p></description></item><item><title>博客换一个新样式</title><link>https://martinliu.cn/blog/change-back-on-github-page-again/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/change-back-on-github-page-again/</guid><description>&lt;p>这是一个拖了很久的工作，旧的样式被改的太乱了，已经无法继续使用了，更新一下重新来过。&lt;/p></description></item><item><title>DevOps Coach 周刊 #6</title><link>https://martinliu.cn/blog/devopscoach-weekly-6/</link><pubDate>Mon, 31 Aug 2020 00:11:01 +0800</pubDate><guid>https://martinliu.cn/blog/devopscoach-weekly-6/</guid><description>宕机 上一周新发的宕机事故。 近期全球重大宕机事故的分析总结、事后回顾。 May your queries flow and your pagers stay silent. &amp;ndash;Dave, Betsy, Niall, Stephen, and Ken
上周新发事故 Zoom 无法开始和加入会议， 官方报道 https://status.zoom.us/incidents/1z2lrf4nrv8p Slack 多个功能模块服务降级，甚至无法使用，官方：https://status.slack.com//2020-08/960bbb3c9d49a3cc Let&amp;rsquo;s Encrypt 数据中心硬件方式故障导致 API 报错，官方：https://status.io/pages/incident/55957a99e800baa4470002da/5f45330250878c04bf3fb6eb NZX 新西兰证券交易所遭受重大DDoS攻击导致NZX停电，交易停止。媒体：https://www.stuff.co.nz/business/122562006/major-ddos-attack-causes-nzx-power-outage-trading-halt eBay宕机。服务器状态最新，DNS故障和服务不可用的错误错误，媒体：https://www.express.co.uk/life-style/science-technology/1329281/eBay-down-server-status-DNS-failure-service-unavailable-error Heroku 发生大量的 H100 报错，官方：https://status.heroku.com/incidents/2101 Fastly CDN 服务商的服务发生多区域性能故障，官方：https://status.fastly.com/incidents/p1lwmmv2j2gq Cloudflare 上周发生的这个问题，我的个人 blog 也遇到了，Google 的搜索索引服务记录了那些 500 错误，我也感到非常诧异；第三方传输供应商问题导致HTTP 5xx错误增加； 官方：https://www.cloudflarestatus.com/incidents/hptvkprkvp23 鳄鱼杯：2020年第二季度最大宕机颁 来源：https://statusgator.com/blog/2020/08/21/5-biggest-outages-of-q2-2020/
任何可能发生的坏事都会发生。这句古老的谚语100%适用于技术行业，在这个行业中，崩溃和中断远比销售和营销团队希望我们想象的要常见得多。然而，与基础设施打交道的DevOps工程师知道，要确保所有东西都能一直按预期工作是多么困难&amp;ndash;并配置监控，实际跟踪系统的健康状况，帮助防止崩溃和停机。
在StatusGator，我们监控800多个基于云的服务的状态页面，并向用户提供即时通知。我们拥有堆积如山的宕机和中断数据，并能看到全貌，因此我们决定每季度制定一份最高宕机时间列表。我们希望我们的发现能够激励DevOps工程师去看看其他人是如何处理服务中断的，以便他们能够提高自己的可靠性。
请继续阅读，了解2020年第二季度的五大故障，以及Slack、Zoom、GitHub、IBM Cloud和T-Mobile在这些危机中如何行动。我们还对这些故障的结果进行了评级，并很乐意听到您对我们评级的看法。
第一名 Slack 全球范围的服务中断, May 12, 2020 Slack是全球数千家公司的主要沟通方式，因此其稳定的正常运行时间是最重要的问题。因此，当用户在美国东部时间晚上7:30左右停止发送和接收Slack消息时，情况迅速升级为一个全面的问题。与之前的故障期间不同，这影响到了整个Slack生态系统：没有人能够登录Slack，也没有人能够收到任何通知。&amp;ldquo;Slack宕机了吗？&amp;quot;，用户们自问自答，答案是毋庸置疑的 &amp;ldquo;是！&amp;rdquo;
美国东部时间晚上10:26，Slack报告全面恢复了服务，并再次为造成的不便道歉。更重要的是，他们在Medium上发表了一份详细的事后报告，解释了问题背后的原因，他们为克服这个问题所采取的行动，得出的结论，以及他们正在采取的措施，以消除类似情况再次发生的机会。</description></item><item><title>Elasticsearch 3 节点集群搭建 (7.9.0)</title><link>https://martinliu.cn/blog/elasticsearch-3-nodes-cluster-setup/</link><pubDate>Thu, 27 Aug 2020 13:54:46 +0800</pubDate><guid>https://martinliu.cn/blog/elasticsearch-3-nodes-cluster-setup/</guid><description>最近发布的 Elastic Stack 7.9 ，带来了很多新的特性。Elastic Agent 统一集成数据采集代理是一大亮点。另外还看增加了企业搜索、端点安全防护等组件。Ingest Manager 统一 Beat 配置管理功能让我们向 SaaS 风格的监控工具又迈进了一步。由代理端自行注册到后端，在后端统一纳管所有被管理服务器，将是一种以后非常通用的模式。这样做的好处是：将数据采集端点的配置工作量和复杂度降低到最低。Beats 的各种相关独立模块也在平行的发布，这种双轨模式也可以让用户更弹性的做出选择，能最大程度的保持旧版本部署环境管理模式的延续性。 Ingest manager 的前提条件是：后台 ES 需要启用 api key 安全，启用 ES 客户端的 HTTPS 访问。我们也可以看到这两个功能选项也有其非常广泛的应用需求。本文将用最简单的文字，向你描述一套 3 节点的 ES 集群的搭建方式，这套系统的核心特性如下：
启用用户名和密码认证 启用集群内 es 节点间 transport.ssl 通讯加密 启用 es 的 http 客户端 http.ssl 加密通讯 安装脚本中包括创建数字证书的必要命令（没猜错的话，大部分人可能会在这一步花费大量时间） 演示环境介绍 我使用的是本地的测试环境，环境配置如下：
Mac OS vagrant virtualBox - CentOS 8 Elastic Stack 7.9.0 ip 和主机名分配见 Vagrantfile 文件 Vagrant 的 vagrant-hostsupdater 插件实现了 Mac OS 主机和所有虚拟机的 host 文件 DNS 解析的同步，保证所有相关虚拟机都可以解析其它虚拟机的 FQDN，尽量模拟生产环境。 本文所使用的所有配置文件和安装脚本见：https://github.</description></item><item><title>DevOps Coach 周刊 #5</title><link>https://martinliu.cn/blog/devopscoach-weekly-5/</link><pubDate>Tue, 25 Aug 2020 15:20:51 +0800</pubDate><guid>https://martinliu.cn/blog/devopscoach-weekly-5/</guid><description>宕机 上一周新发的宕机事故。 近期全球重大宕机事故的分析总结、事后回顾。 May your queries flow and your pagers stay silent. &amp;ndash;Dave, Betsy, Niall, Stephen, and Ken
Equinix 重大电力故障让数据中心客户大发雷霆 关于 Equinix ：Equinix 是全球领先的数据运营商，目前在美洲、亚太、欧洲及中东 14 个国家（地区）的 31 个市场运营着 94 个国际业务交换。 消息来源 CBR https://www.cbronline.com/news/equinix-outage 教练点评：数据中心 UPS 的单点故障并不稀奇，但是这次 Equinix 的事故堪称史诗级事故。
&amp;ldquo;经历如此严重的停电，显然是不可接受的&amp;rdquo;
北京时间 8 月 19 日 8 点 10 分更新：最后的电路似乎已经在 8 月 18 日晚间约 22 点 20 分恢复；在停电开始后约 18 小时。
数据中心巨头 Equinix 表示，在其位于伦敦码头区的 IBX LD8 数据中心遭遇长时间停电后，它已经为所有客户恢复了机架&amp;ndash;该问题使数百名客户（包括几家 ISP）的服务从北京时间凌晨 4:30 开始离线；使许多人对缓慢的电力恢复深感沮丧。</description></item><item><title>DevOps Coach 周刊 #4</title><link>https://martinliu.cn/blog/devopscoach-weekly-4/</link><pubDate>Mon, 17 Aug 2020 18:43:26 +0800</pubDate><guid>https://martinliu.cn/blog/devopscoach-weekly-4/</guid><description>宕机 上一周新发的宕机事故。 近期全球重大宕机事故的分析总结、事后回顾。 May your queries flow and your pagers stay silent. &amp;ndash;Dave, Betsy, Niall, Stephen, and Kent
新闻 项目发布速递 Azure Functions 的 PowerShell 7 支持现在是 GA，如果在 PowerShell 中编写无服务器函数对你有吸引力。 Go 1.15 - 流行的编程语言。 AWS Glue 2.0 - AWS 上的 ETL 作业服务。 Node 14.8.0 - 服务器端 JavaScript 运行时。 DevOps 大会/峰会 中国 DevOps 社区流水线大赛 &amp;ndash; Pipeline Craft Championship
8 月 18 日开始为期两个月，免费活动 报名：https://wj.qq.com/s2/6852880/c181 活动官网：https://Pipeline.devopsmeetup.com 提交大议信息发邮件到：martin@devopscoach.</description></item><item><title>DevOps Coach 周刊 #3</title><link>https://martinliu.cn/blog/devopscoach-weekly-3/</link><pubDate>Tue, 11 Aug 2020 15:03:54 +0800</pubDate><guid>https://martinliu.cn/blog/devopscoach-weekly-3/</guid><description>宕机 上一周新发的宕机事故。 近期全球重大宕机事故的分析总结、事后回顾。 上周新发宕机事故 Discord 这个值得注意的是，它涉及到谷歌云平台中所谓的 &amp;ldquo;吵闹邻居 &amp;ldquo;情况。https://discord.statuspage.io/incidents/bnv0wbddzz2x Slack 更新缓存基础架构的坑。从2020年7月23日晚上9:00 PDT到2020年8月1日下午5:17 PDT，客户在使用各种API端点时可能会出现滞后或故障。我们于7月29日开始调查这一问题，并将这些问题追溯到最近对我们的缓存基础设施进行的一项变更，旨在增加该基础设施的容量。一个不可预见的副作用导致一小部分API请求需要更长的时间来处理并最终超时。我们在8月1日恢复了这一更改，所有受影响的客户的问题都得到了解决。8月6日, 6:49 AM GMT+8 https://status.slack.com//2020-07/7d32ad54b0703c47 **佳能 ** 遭遇勒索软件攻击，Maze宣称对此事负责 来源： https://www.zdnet.com/article/canon-suffers-ransomware-attack-maze-claims-responsibility/ Steam 服务器目前已经瘫痪 https://gamerant.com/steam-servers-down-8-05/ Fastly 著名 CDN 服务器最近又出性能事故了， 影响范围，Edge Cloud Services (Fastly API, 快速配置应用, TLS 制备) https://status.fastly.com/incidents/d6ljy97shb0p 关于 Quay.io 宕机事故回顾 来源官网： https://www.openshift.com/blog/about-the-quay.io-outage-post-mortem 时间线：5 月 19 日第一次宕机，28 日第二次宕机，这些事故影响了大多数 quay.io 服务的用户。 Red Hat SRE 团队对本次事件的经验总结： 关于谁和什么人在使用你的服务，你永远都不可能有足够的参考数据。 由于Quay &amp;ldquo;一直是正常工作&amp;rdquo;，我们从来不需要花太多时间分析我们的流量模式，处理负载的行为。这创造了一种虚假的安全感，即服务将无限期地扩展。 当服务出现故障时，恢复是你的首要任务。 由于Quay在第一次中断期间不断出现数据库死锁的情况，我们的标准流程并没有明确的实现服务恢复的预期目标。这就导致我们花了更多的时间进行分析和收集数据，希望找到根本原因，而不是把所有的精力都放在让客户恢复运行上。 要了解你的每一个服务功能的影响。 App Registry很少被我们的客户使用，所以它不是我们团队的主要优先事项。当你的产品中有很少使用的功能时，bug就不会被提交，开发人员也不会再看代码。我们很容易认为这不会给团队带来任何负担&amp;ndash;直到它突然成为重大事件的一部分。 关于 Heroku 事故 #2090 的后续分析 概述：此次事件涉及Heroku的基础设施提供商（大概是AWS）的DNS故障。这次事故的坑是 DNS。 来源官网：https://status.</description></item><item><title>腾讯云下部署 Elastic Stack 各种 Beat 的最佳实践</title><link>https://martinliu.cn/blog/beats-implement-on-qcloud/</link><pubDate>Fri, 07 Aug 2020 17:14:20 +0800</pubDate><guid>https://martinliu.cn/blog/beats-implement-on-qcloud/</guid><description>概述 使用 Elastic Stack 的各种 Beats 模块可以彻底的终结在服务器上手工捞日志查指标的扭曲实践。利用腾讯云提供的 Elasticsearch 服务，可以轻松搞定大规模云环境的运维。本文一次性的帮你梳理清楚了，必备的基础操作，确保你能用 Elastic Stack 安全、稳定和扩展的持续监控你的生产环境。
创建 ES 集群 登录腾讯云服务控制台，查询并进入 Elasticsearc 服务，点击新建按钮，创建 Elasticsearch 集群。如下图所示。
集群配置说明：
北京区 7.5.1 - 白金版 单可用区 冷热模式 本实例其它参数保持默认，可以根据实际业务需求修改这些参数。
点击下一步后，设置 Elasticsearch 集群的超级用户名和密码。
在几分钟之后这个集群就成功创建了。查看下面这些基础的配置。
启用 Kibana 内网地址： http://es-ot7wei87.internal.kibana.tencentelasticsearch.com:5601 用于 Bests 的 Setup 命令 启用 Kibana 公网地址： https://es-ot7wei87.kibana.tencentelasticsearch.com:5601 用户Elastic Stack 的初始化配置，如创建角色和调整索引生命周期策略等。 这样我们就有了一个安全、可扩展和性能足够的 ES 后台服务。
创建 Beats 写入角色和用户 登录 Kibana ，点击角色和用户管理，创建用于 Beast 配置文件的‘只写’权限用户。
创建 beats-writer 角色 创建 beats-writer 用户，该用户只赋予beats-writer角色，自定义一个安全的复杂密码。 Beats-write 角色设置如下图所示：</description></item><item><title>DevOps Coach 周刊 #2</title><link>https://martinliu.cn/blog/devopscoach-weekly-2/</link><pubDate>Mon, 03 Aug 2020 22:26:23 +0800</pubDate><guid>https://martinliu.cn/blog/devopscoach-weekly-2/</guid><description>宕机 上周全球重大宕机事故清单。
Facebook 具英媒体报道：7月 28 日 12：20pm， Facebook, Instagram 和 WhatsApp 这三款用户的一半以上的用户，无法加载出页面，无法正常使用服务。 Facebook 官方还没有关于这次事故的回应。实际上整个欧洲大陆，特别是葡萄牙和西班牙的故障更要严重一些。原因不明。 影响范围：London, Birmingham 和 Manchester. 来源： https://metro.co.uk/2020/07/28/facebook-instagram-whatsapp-13048914/ fastly - 知名 CDN 服务商 官方声明：Fastly的网络具有内置冗余和自动故障转移路由，以确保最佳性能和正常运行时间。但当网络问题出现时，我们认为我们的客户应该得到清晰、透明的沟通，这样他们才能保持对我们的服务和团队的信任。当我们重新分配流量、升级硬件或在极少数情况下我们的网络不提供流量时，我们会在这里发布通知。如果您遇到问题而没有看到张贴的通知，请发送电子邮件至 support@fastly.com 寻求帮助。 影响范围：North America (Ashburn (BWI), Ashburn (DCA), Ashburn (IAD), Ashburn (WDC), Atlanta (FTY), Atlanta (PDK), Dallas (DAL), Dallas (DFW), Jacksonville (JAX)). 来源：https://status.fastly.com/history Heroku 官方声明：JUL 28, 2020 09:15 UTC Heroku 平台的很大的部分都遭受到可用性故障。然后开始和他们的服务提供商一起解决问题。一个多小时后平台恢复了正常。 来源：https://status.heroku.com/incidents/2090 新闻 DevOps实践的采用与组织拥抱数字化转型齐头并进。这两个短语都有被过度使用的风险，但这些帖子讨论了一些有用的心理模型，以帮助聚焦对话。
https://aws.amazon.com/blogs/enterprise-strategy/mental-models-for-digital-transformation/ https://aws.amazon.com/blogs/enterprise-strategy/mental-models-to-clarify-the-goals-for-of-digital-transformation-part-2/ 开发者平台的哪些属性会导致采用？下面的文章是专门关于大规模边缘平台的，但对于任何为开发者构建各种平台的人来说，包括在内部平台团队中这样做的人来说，都是很好的阅读。</description></item><item><title>APM 分布式追踪为何这么难？</title><link>https://martinliu.cn/blog/apm-why-it-so-hard/</link><pubDate>Sun, 02 Aug 2020 20:48:30 +0800</pubDate><guid>https://martinliu.cn/blog/apm-why-it-so-hard/</guid><description>用跟踪的方式调试计算机程序的调用堆栈的实践其实由来已久，这种方法可能仅次于用 print 输出各种信息。在云原生的时代里，我们还会遭遇工具过剩的情况，工具之间的相生相克加剧了实施分布式追踪的难度。
总的来说有三个基础难点：
生成追踪数据难。对已有应用系统的代码库进行埋点处理的挑战巨大，你的应用程序系统的模式可能也不符合埋点的模式需求。 采集存储追踪数据难。捕获和管理大量追踪数据包，即照顾到查询和使用的需求，又要设定成本合理的数据存储策略，处理数据收集能力的扩缩容。 从数据中获益难。如何理解和使用数据产生可执行行动，如何用它优化微服务的遥测，怎么将它的利益扩展到各个相关团队。 分布式追踪系统的实施结果是落地一条能深度洞察目标系统的工具。让人们能轻松的理解局部和整体的状态，特别是在请求堆栈中的任何局部服务出现故障时，可以最快速的定位故障根源。
上图是用追踪数据生成的服务地图。
上图是一次用户请求的全部细节，还可以一键式的跳转到相应的日志或者指标。
以上三个难点覆盖了部署实施分布式追踪系统的核心领域。
埋点 OpenTelemetry是目前受到广泛支持的埋点框架，对棕地应用和绿地应用进行埋点处理的挑战是不同的，需要遵循不同的额最佳实践。 部署 在理解了目标追踪应用系统的运行时状态后，最好使用一种弹性的方式收集和存储追踪数据。满足分析数据量需求的同时平衡存储成本。 收益 将其与日志和指标工具关联起来，定义和监控重要有意义的监控点，用于优化系统性能基线，并最小化 MTTR。 在云计算、Kubernetes、容器化大行其道的今天，分布式追踪的实施是不是正处在进退维谷的尴尬境地呢？其实并非如此，特别是监控运维挑战越高的应用，其实越需要需要使用分布式追踪 APM 工具。分布式追踪对云原生的容器化微服务应用尤为适用。APM 对单纯使用日志和指标的场景具有极大的补充和提高作用，而且它是可观测性策略的关键组成部分。
总的来说分布式追踪工具可以通过追踪的方式展现请求在系统中的流动状态。流行的开源埋点框架使之与应用的编程语言、运行时环境无关，可以适配与所有类型的应用和服务。有些 APM 工具可以支持运行时埋点（或称为运行框架埋点），在不改变代码的情况下采集追踪数据。APM 的实施虽然有一定难度，但是当开始实施埋点处理，收集追踪数据以后，相关的价值和收益也就会慢慢显现出来了。
参考：
https://opentelemetry.io/ https://www.elastic.co/cn/apm</description></item><item><title>应用开发 DBA 技巧集锦</title><link>https://martinliu.cn/blog/sql-tricks-application-dba-chinese/</link><pubDate>Fri, 31 Jul 2020 22:23:44 +0800</pubDate><guid>https://martinliu.cn/blog/sql-tricks-application-dba-chinese/</guid><description>前言 DBA 可能是经常被其它团队依赖的一种角色、团队，因此他们也会有着很长的等待队列，也经常是事故救火中的英雄和常客。DevOps 强调用跨角色的学习和培训来解决这种依赖，也就是 DevOps 工作三步法的第三步，学习与持续改进。 本文写给所有的应用开发者，希望大家能多学习一些 DBA 知识，减少对专家 DBA 的依赖，加速你们的业务的交付，消除由于等待而造成的浪费。
本文转载自：https://hakibenita.com/sql-tricks-application-dba
以下是正文原文：
当我开始我的开发生涯时，我的第一份工作是DBA。那时，在AWS RDS、Azure、Google Cloud和其余云服务之前，有两种类型的DBA。
基础设施 DBA 负责建立数据库配置存储，并负责备份和复制。设置好数据库后，基础架构DBA会时不时地冒出来做一些 &amp;ldquo;实例调整&amp;rdquo;，比如调整缓存的大小。
应用 DBA 从基础架构DBA那里得到了一个干净的数据库，并负责模式设计：创建表、索引、约束和调优SQL。应用DBA也是实现ETL流程和数据迁移的人。在使用存储过程的团队中，应用DBA也会维护这些存储过程。
应用DBA通常是开发团队的一部分。他们会拥有深厚的领域知识，所以通常他们只会在一两个项目上工作。基础架构DBA通常是某个IT团队的一部分，他们会同时在多个项目上工作。
我是一名应用DBA 我从来没有任何欲望去摆弄备份或调整存储（我相信这很迷人！）。直到今天，我都喜欢说自己是一个懂得开发应用的DBA，而不是一个懂得数据库的开发者。
在本文中，我将分享我一路走来收集到的一些关于数据库开发的非浅显技巧。
Be that guy&amp;hellip;
Image by CommitStrip
只更新需要更新的内容 UPDATE是一个相对昂贵的操作。为了加快UPDATE命令的速度，最好确保只更新需要更新的内容。
以这个查询为例，它对电子邮件列进行了标准化处理。
db=# UPDATE users SET email = lower(email); UPDATE 1010000 Time: 1583.935 ms (00:01.584) 看起来很无辜吧，查询更新了1010,000个用户的邮箱。但是，真的需要更新所有的行吗？
db=# UPDATE users SET email = lower(email) db-# WHERE email != lower(email); UPDATE 10000 Time: 299.470 ms 只需要更新10000行。通过减少受影响的行数，执行时间从1.5秒降到了不到300ms。更新的行数少了，也节省了后期的数据库维护工作。
这种类型的大更新在数据迁移脚本中非常常见。所以下次写迁移脚本时，一定要只更新需要更新的内容。
在批量加载过程中禁用约束和索引。 约束是关系型数据库的重要组成部分：它们能保持数据的一致性和可靠性。不过它们的好处是有代价的，在加载或更新大量行时最明显。</description></item><item><title>DevOps Coach 周刊 #1</title><link>https://martinliu.cn/blog/devopscoach-weekly-1/</link><pubDate>Tue, 28 Jul 2020 10:35:19 +0800</pubDate><guid>https://martinliu.cn/blog/devopscoach-weekly-1/</guid><description>新闻 又到了一年一度的时间。定期的Puppet Devops状态调查已经开始。今年的重点是变革管理、持续交付和自服务平台之间的关系。 https://polls.onresearch.net/xsurvey/20JT028/20JT028T1/Survey.aspx?ckie=true
文档和设计在构建强大的系统中起着至关重要的作用。这篇文章探讨了为什么设计文档是有用的，以及它们应该包含什么样的内容。 https://www.industrialempathy.com/posts/design-docs-at-google/
一份关于公共Terraform代码安全状况的新报告。对于任何使用Terraform配置服务的人来说，一些有用的数据和一些好的提示。 https://bridgecrew.io/blog/state-of-open-source-terraform-security-report-2020/
看看如何使用 Azure Pipelines 自动验证 sysmon 配置。 https://medium.com/falconforce/using-azure-pipelines-to-validate-my-sysmon-configuration-48315dba7571
这是一个很好的大规模迁移低级组件的故事，在这个案例中是一个应用服务器。金丝雀的推出、上游贡献、性能和其他有趣的话题。 https://about.gitlab.com/blog/2020/07/08/migrating-to-puma-on-gitlab/
拥抱云原生技术和工作方式会带来挑战，本帖记录了其中一些挑战，包括安全、缺乏专业知识、发布周期缓慢等。 https://www.cloudops.com/2020/07/top-7-challenges-to-becoming-cloud-native/
文章 “How could they be so stupid?” 上周知名Twitter 账号入侵事件出现了更多细节，导致一些人说出了上面这句话。这里有一个看法，如何看待这不是 &amp;ldquo;愚蠢 &amp;ldquo;的问题。Lorin Hochstein https://surfingcomplexity.blog/2020/07/20/how-could-they-be-so-stupid/
Data Consistency Checks 你的数据库中的数据应该是一致的&amp;hellip;&amp;hellip;但话说回来，事故不应该发生，对吗？Slack接受在他们的规模下，数据经常会出问题，他们有框架和一套工具来处理它。Paul Hammond and Samantha Stoller — Slack https://slack.engineering/data-consistency-checks-e73261318f96
Obstacles to Learning from Incidents 我从这篇文章中学到了很多东西。我最喜欢的障碍是 &amp;ldquo;通过差异化来拉开距离&amp;rdquo;，比如 &amp;ldquo;我们绝对不会以这种方式应对事件&amp;rdquo;。Thai Wood — Learning from Incidents https://www.learningfromincidents.io/blog/obstacles-to-learning-from-incidents
You don’t need SRE. What you need is SRE. […] SRE，也就是谷歌定义的SRE，对于大多数组织来说并不适用。Sanjeev Sharma https://sdarchitect.blog/2020/02/20/you-dont-need-sre-what-you-need-is-sre/</description></item><item><title>Skaffold 让 K8s 开发者更加酸爽</title><link>https://martinliu.cn/blog/skaffold-make-local-k8s-dev-easy/</link><pubDate>Wed, 15 Jul 2020 00:09:53 +0800</pubDate><guid>https://martinliu.cn/blog/skaffold-make-local-k8s-dev-easy/</guid><description>今天介绍一个本地 Kubernetes 开发的利器 Skaffold。 这是我偶然间发现的一个工具，询问了一下周围的人，居然还没有人用过。测试之后，确实有一种不吐不快的感觉。
简介 Skaffold Google 开发的一个开源项目。是一个非常轻量的命令行工具，就是一个可执行文件。它的主页上是这样的介绍它的。
轻量：Skaffold只是一个客户端工具。由于集群上不需要任何的相关组件，您的集群没有任何开销或维护负担。 运行在任何地方：Skaffold是与世界分享你的项目的最简单的方法：&amp;ldquo;git clone&amp;rdquo;，然后 &amp;ldquo;skaffold run&amp;rdquo;。此外，你还可以使用配置文件、本地用户配置、环境变量和标志来轻松地集成不同环境的差异。 功能丰富：Skaffold拥有许多Kubernetes原生开发的基本功能，包括基于策略的打镜像标签、资源端口转发和日志、文件同步等。 优化你的开发：Skaffold使内部循环紧密，高度优化，让您在开发的同时得到即时反馈。 客户评价 &amp;ldquo;我们的客户很喜欢[Kubernetes]，但一直给我们反馈说在Kubernetes上开发很麻烦。Skaffold一针见血地解决了这个问题。以前需要几分钟才能部署的docker镜像或配置的更改，现在只需要几秒钟。Skaffold的插件架构使我们能够部署到Helm或Kustomize，并使用各种docker构建插件，如Kaniko。Skaffold用一个精简的工具取代了我们定制的实用程序和脚本集合，并且易于使用。&amp;rdquo; Warren Strange，ForgeRock的工程总监。
&amp;ldquo;当我们评估我们可以使用Kubernetes的工作流程时，Skaffold脱颖而出，成为我们在开发和部署中都想要的工具。它为我们提供了一个跨应用程序的通用入口点，我们也可以为CI/CD重用。现在，我们所有的Kubernetes应用的CI/CD管道在构建和部署时都使用Skaffold。&amp;rdquo; Taylor Barrella，Quora的软件工程师
&amp;ldquo;Skaffold是一个了不起的工具，它为我们简化了开发和交付。Skaffold通过覆盖两个维度，击中了我们的甜蜜点。第一，从本地开发、集成测试到交付的整个开发周期。第二，Skaffold让我们能够在Linux、OSX和Windows上独立开发，不需要特定的平台逻辑。&amp;rdquo; Martin Höfling，TNG技术咨询有限公司首席顾问
推荐首次测试流程 前置条件，你的开发用工作电脑上已经安装了它需要调用的 kubectl 和 docker 命令，kubectl 需要有至少一个可用的配置，这个配置可以指向任一一个你有权限部署的 Kubernetes 集群。
我在 macOS 上，直接运行 ‌brew install skaffold 即可，其它系统参考：https://skaffold.dev/docs/install/
克隆 Skaffold 的代码库到本地，获取必要的测试应用代码。
‌git clone https://github.com/GoogleContainerTools/skaffold
进入代码库中的‘hello world’示例应用。
执行：‌cd skaffold/examples/getting-started
执行 ‌skaffold dev ，你会看到 Skaffold 进入了这个项目的构建和运行的状态，执行结果是持续的输出 ”[getting-started] Hello world!“
现在 Skaffold 就进入了 /getting-started 的监视状态。观察任何代码文件的修改存盘动作，每次代码的变更会触发 Skaffold 流水线的执行，skaffold.yaml 文件中描述了本地流水线中的相关动作：</description></item><item><title>Beats 摄入数据的最佳实践</title><link>https://martinliu.cn/blog/build-security-in-elastic-stack/</link><pubDate>Sun, 21 Jun 2020 18:42:56 +0800</pubDate><guid>https://martinliu.cn/blog/build-security-in-elastic-stack/</guid><description>本文概要：配置 ES 3 节点全加密，Kibana 的 SSL 加密配置，Beats 的高可靠性加密传输，用 RBAC 怎样把权限控制到最小，在配置文件中消除明文密码，这些你都做到了么？如何保证安全、能适应和可扩展的配置 Elastic Stack 技术栈，让我们从 Bests 的角度开始讲解。
前言 本文使用的软版本：
Elastic Stack 7.8.0 macOS 10.15.5 Vagrant 2.2.9 VirtualBox 6.0 CentOS 8.0 下面的配置和测试过程基于以下 Vagrantfile ，你可以在其它任何同等的环境中测试下面的所有配置。
# -*- mode: ruby -*- # vi: set ft=ruby : # Every Vagrant development environment requires a box. You can search for # boxes at https://atlas.hashicorp.com/search. BOX_IMAGE = &amp;quot;bento/centos-8&amp;quot; ES_COUNT = 3 NODE_COUNT = 4 Vagrant.configure(&amp;quot;2&amp;quot;) do |config| #设置所有 guest 使用相同的静态 dns 解析 /etc/hosts config.</description></item><item><title>徘徊在 3 种 DevOps 平台服务之间难以抉择（上）</title><link>https://martinliu.cn/blog/a-comparison-of-devops-tools-p1/</link><pubDate>Sun, 21 Jun 2020 18:42:56 +0800</pubDate><guid>https://martinliu.cn/blog/a-comparison-of-devops-tools-p1/</guid><description>中国 DevOps 社区在最近两年期间得到了长足的发展，从最初的单一官网站点，发展到现在的社区官网、社区峰会官网、社区论坛、社区微信公众号和社区服务号等多种对外公众界面。在这些网站平台之后的是 20 多位社区志愿者们的辛勤工作和贡献。
社区官网最初是在 GitHub 上通过 Github-page 的免费空间发布的，在购买了收费的 Hugo 模板之后；网站的代码有了转为私有仓库的需求，因此CODING就从 GitHub 迁移到了 GitLab；当时 Github 还没有免费不限数量的私有仓库，而且 Github 也不能免费实现 20+ 社区代码贡献者的组队维护多个项目。GitLab 总的来说能满足目前的所有社区开发和协作需求：这些需求包括无限私有仓库，足够数量的代码协作人员，免费的 CI 构建和发布功能。GitLab 平台也可以实现 GitLab-page 的静态网站托管服务，但是，如果代码仓库设置为通过 page 实现静态网站发布的情况，需要整个代码库设置为对外公开访问，而这与代码库本身依然需要保持私密矛盾。因此社区的小伙伴也无奈的在 GitLab 上维护代码，然后将 hugo 构建后的结果再发布到 Github-page 的项目去。
根据以上社区网站代码库迁移的经历，下面总结一下中国 DevOps 社区在网站开发维护和配套 CI/CD 方面的总体需求：
实现多人（20+志愿者）私有和共有代码仓库的协作，相关工作包括社区网站内容维护和新功能开发，社区书籍和技术白皮书协作翻译等。 实现 OKR 风格的社区网站开发相关工作管理，季度目标制定，任务跟踪等。 实现 Scrum 风格的软件项目计划、分配和跟踪；统一规划开发和运维相关的所有任务；与季度 OKR 相关联。 实现自动化的 CI、CD 流水线。 自动化和快速的部署软件项目工件（Artifacts）到腾讯云服务器（和其它相关服务），包括静态网页到 Nginx 服务器的发布，到云存储的发布，目前也可能即将会用到 K8s 服务/Serverless 服务的发布。 基于目前社区的相关工作需求，我们在三个平台之间进行了综合的对比和评测：GitLab（免费版）、Jira Cloud（免费版） 和 CODING - 高级版（腾讯云 DevOps 平台服务）。总的来说我们需要一种能满足以上所有需求的、集成化的 DevOps 工具 SaaS 平台服务。</description></item><item><title>入门 Elastic Workplace Search</title><link>https://martinliu.cn/blog/getting-start-elastic-workplace-search/</link><pubDate>Fri, 24 Apr 2020 10:37:16 +0800</pubDate><guid>https://martinliu.cn/blog/getting-start-elastic-workplace-search/</guid><description>简介 Elastic Workplace Search 提供了一个统一的搜索体验，从而便于任何人在任何时间找到所需的文档信息。为企业搭建了一个横跨所有工作内容、所有团队和真相的统一搜索参考平台。
这个搜索平台能够对接各种数据源，并且实现文档内容级别的索引，目前所支持的数据源包括：OneDrive、SharePoint、ServiceNow、Box、Dropbox、Github、Github Enterprise、Google Drive、JIRA、Confluence、Salesforce、Zendesk 等。
它具有以下特点：
配置部署简单，缩短了系统上线和等待时间。不像是传统的消耗数个月甚至一年都无法完成的搜索项目，这个解决方案可以让企业在几天或几周内就能投入使用。 个性化定制的搜索体验。通过 Elasticsearch 所提供的搜索能力，管理员可以控制企业、团队级别的数据源，个体用户可以控制自己的私有数据源，所有级别上都可以调整相关度权重，从而提高搜索结果的准确性和实用性 提供各种自然语言的和关键字的搜索。系统提供了强大的语言分析和关键字检测能力，用户可以使用任意关键字和搜索开关轻松的搜索到所需的信息。 具备丰富的开箱即用功能：无须开发即可实现用户管理、数据源管理、基于用户和组的数据源可见性设置、数据源对不同用户和组的权重等功能。 系统安装配置 本文的假设，文中所使用的安装包和需要部署的配置文件都在 /vagrant 这个目录下面。下面的所有命令中都假设从这个目录里选用和复制。配置文件见代码库：https://github.com/martinliu/elastic-labs
本文所使用的安装测试环境是：
CentOS Server 8 JDK 11 Elasticsearch 7.6.1 Kibana 7.6.1 Elastic Workplace Search 7.6.1 下面使用 vagrant up 一键式拉起基础测试环境的说明，请参考之前的文章。本测试所使用的基础 ES 安装脚本如下。
echo I am provisioning a Elasticsearch Server... date &amp;gt; /etc/vagrant_provisioned_at sudo swapoff -a sudo sysctl -w vm.max_map_count=262144 sysctl -p sudo sh -c &amp;quot;echo 'elasticsearch - nofile 65535' &amp;gt;&amp;gt; /etc/security/limits.</description></item><item><title>随心所欲的为应用无痛添加搜索功能</title><link>https://martinliu.cn/blog/getting-start-elastic-app-search/</link><pubDate>Sat, 11 Apr 2020 09:36:49 +0800</pubDate><guid>https://martinliu.cn/blog/getting-start-elastic-app-search/</guid><description>开发搜索功能从此再也不用犯愁了，有了 App Search ，为应用增加搜索功能一下子变得简单了很多。本文描述了如何轻松上手这套搜索平台的所有步骤。
什么是 App Search? 这是一套强大的 API 和开发者工具集，以构建功能强大的面向用户的搜索应用为目标。相关详细介绍见 https://www.elastic.co/cn/app-search
丰富的开箱即用功能:
为相关性搜索应用场景而优化 拼写错误容忍 相关度调整 支持第三方 API 客户端，且具备强大的 API 独立的 API 日志和搜索分析 自动化扩展&amp;amp;运维支持 Search UI library 环境准备 测试环境现需要一台 Elasticsearch 服务器，或者和下面等同的环境。
本文的环境描述如下：
macOS 10.15.4 vagrant 2.2.7 virtualbox 6.0.15 虚拟机模板 bento/centos-8 elasticsearch 7.6.1 app-search 7.6.1 jdk-11.06 本文的测试环境基于 Vagrant + VirtualBox 的组合环境搭建而成，基础安装工作可以一键完成。
主要脚本 Vagrantfile、pre-install-ES.sh 请参考此代码库：
https://github.com/martinliu/elastic-labs/tree/master/app-search
开启并登陆这套安装环境的命令如下。
vagrant up vagrant ssh 在以上命令的启动信息里找到如下的 elastic 用户密码部分备用。
master1: Changed password for user elastic master1: PASSWORD elastic = eczHJ7NPrsO1B1BRA8SS 安装 App Search 浏览 App Search 的安装文档： https://swiftype.</description></item><item><title>使用 Elastic Stack 监控 Covid-19 疫情发展</title><link>https://martinliu.cn/blog/%E4%BD%BF%E7%94%A8-elastic-stack-%E7%9B%91%E6%8E%A7-covid-19-%E7%96%AB%E6%83%85%E5%8F%91%E5%B1%95/</link><pubDate>Wed, 08 Apr 2020 17:04:08 +0800</pubDate><guid>https://martinliu.cn/blog/%E4%BD%BF%E7%94%A8-elastic-stack-%E7%9B%91%E6%8E%A7-covid-19-%E7%96%AB%E6%83%85%E5%8F%91%E5%B1%95/</guid><description>代号为 COVID-19 的新型冠状病毒肺炎在全球肆虐着，剧情翻转的非常快，目前欧美已经成为了全球的重灾区。 本文介绍如何使用 Elastic Stack，实现对国内外疫情发展态势的分析。介绍一种简单易行的数据分析流程。说不定你也可以得出独到的高价值洞察。
本文使用的 Elastic Stack 版本和环境如下：
Vagrant 的基础镜像 bento/centos-8 Elasticsearch 7.6.1 Kibana 7.6.1 Logstash 7.6.1 关于使用 Vagrant 环境搭建 Elastic Stack 的方法，见我之前的文章。本文的数据分析处理流程图如下所示。
分析和展示丁香园数据 本文的目标分析数据源是 https://ncov.dxy.cn/ncovh5/view/pneumonia 这个也是我们最近一直在关注的关于中国的疫情公布平台。
丁香园网页的数据被香港大学的 Isaac Lin 同学，通过他所开发的网络爬虫抓取加工后，用 API 的形式和 csv 数据文件的形式提供了出来，他的爬虫程序和结果数据给很多目前分析疫情的人带来了很大的帮助，有不少人去他的 blog 和 github 上点赞和评论的。
https://github.com/BlankerL/DXY-COVID-19-Data/tree/master/csv https://lab.isaaclin.cn/nCoV/ 你可以用 Python 程序调用Lin 同学的 API 然后在将处理后的结果写入 ES，这样的脚本可以参考 Rockybean 的这个 https://www.yuque.com/elastictalk/blog/et25?from=timeline。也可以用下面的命令将Github 的 csv 文件下载到本地，在做手工的数据分析，这样也等于是对林同学的数据内容和定义进行一次深入的探索，这也将更有益于你理解数据，方面后面使用 Kibana 做数据分析。
在本机使用 git 做数据下载和同步的命令如下。
git clone https://github.com/BlankerL/DXY-COVID-19-Data.git cd DXY-COVID-19-Data/ git pull 你也可以用用git pull命令在日后做数据更新，并进行后续的跟踪分析。</description></item><item><title>如何在墙内正常导入 Vagrant 虚拟机模板</title><link>https://martinliu.cn/blog/download-import-vagrant-box/</link><pubDate>Thu, 26 Mar 2020 08:57:57 +0800</pubDate><guid>https://martinliu.cn/blog/download-import-vagrant-box/</guid><description>当你满心欢喜的安装完了 vagrant 之后，在你第一次 vagrant up 命令的时候，是下载超时么？你的内心是什么感受？想放弃了么？
其实你只需要找到国内的 box 文件镜像服务器，或者下载地址，然后手工下载对应的 Box 文件（操作系统镜像文件），并导入即可，本文将帮你铲除这只官方镜像文件下载失败的拦路虎。
Vagrant 的优势：
虚拟机对于系统级开发和测试工作具有不可替代的作用 手工安装的虚拟机非常 准备工作 我的测试环境如下，如果你的测试环境和我的不同，但是本操作方法和过程也同样的适用于相似的环境。
环境描述：
macOS catalina version 10.15.3 vagrant 2.2.4 Virtuabox 6.0.15r135660 如果你也百度了’ vagrant box 国内镜像‘的话，结果会使你很失望，清华大学等站点只是缓存了个别的镜像文件，并没有其它版本特别全面的网站，更没有完整的镜像。如果你知道其它国内的镜像站点请告诉我，我会增加到本文。
Ubuntu 的可以浏览这两个目标下载网址。
https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/vagrant/
然后用vagrant 下面的命令就可以将 box 下载并且添加到本地。
ubuntu 18.04 LTS: vagrant box add https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/bionic/current/bionic-server-cloudimg-amd64-vagrant.box &amp;ndash;name ubuntu18
ubunt 16.04 LTS： vagrant box add https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/xenial/current/xenial-server-cloudimg-amd64-vagrant.box &amp;ndash;name ubuntu16
ubuntu14： vagrant box add https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box &amp;ndash;name ubuntu14</description></item><item><title>最简化 Elasticsearch &amp; Kibana &amp; Filebeat 安装说明</title><link>https://martinliu.cn/blog/install-es-kibana-filebeat/</link><pubDate>Thu, 26 Mar 2020 08:51:15 +0800</pubDate><guid>https://martinliu.cn/blog/install-es-kibana-filebeat/</guid><description>本文描述如何搭建一套具备用户名和密码安全认证的 Elastic Stack 系统，并开始使用 Filebeat 的基础模块实现分布式的日志收集。
安装单节点 Elasticsearch 服务器，启用用户名和密码安全认证，并创建 TLS 数字证书备用 安装 Kibana 服务器，并配置与 Elasticsearch 服务的连接 安装和配置 Filebeat 代理程序，并配置 system 和 auditd 模块 使用 Kibana 监控 Filebeat 所采集的系统日志，并监控系统的状态 为了使你也获得与我一致的安装和测试体验，请先下载并浏览相本文所使用的代码库：https://github.com/martinliu/elastic-labs
试验环境概述和启动 本文所使用相关软件以及版本。
macOS Catalina version 10.15.3 Vagrant 2.2.4 VirtalBox 6.0 操作系统镜像: bento/centos-8 (virtualbox, 202002.04.0) Elastic Stack 安装包（RPM） Elasticsearch 7.6.1 Kibana 7.6.1 Filebeat 7.6.1 使用 Vagrant 的目录共享功能，分享安装包到测试机的 /vagrant/rpm 目录下 注意事项：
你也可以使用任何一台 CentOS 8 虚拟机或者云主机，则后续的安装命令和 rpm 安装包的路径需要有所变化。 Vagrant 文件中定义的虚拟机配置为 4 GB 内存，建议你的操作系统最低为 8GB 内存，推荐 16GB 或者更高， 本文也适用于 Linux 或 Windows 操作系统的 Vagrant 测试环境，需要提前下载并且准备好 bento/centos-8 的基础操作系统镜像。 启动测试环境。</description></item><item><title>SLA、SLO 和 SLI 还是傻傻分不清么？</title><link>https://martinliu.cn/blog/sre-sla-slo-sli/</link><pubDate>Thu, 05 Mar 2020 17:37:29 +1100</pubDate><guid>https://martinliu.cn/blog/sre-sla-slo-sli/</guid><description>SLA、SLI 和 SLO 是 SRE 工程实践里非常核心的概念，但是大家在同时提到这些概念的时候，经常容易混淆。
长篇大论的文章反而容易使人更加疑惑，还不如画一张示意图说明一下，帮助大家一次性彻底梳理清楚这些不可以含糊不清的核心概念。说明一下，下图假设所讨论的 SLA 个数为 1，使用了软件工程中 ER 图的表达方式，但也有所变化。
一图讲清 SLA、SLO、SLI
本文不讲 why，只是帮助大家梳理清楚这些概念在以上人机系统中的相互关系。虽然不想做名词解释。但是为了方便起见，整理一个术语清单。
SLA = Service Level Agreement = 服务质量/水平协议 SLO = Service Level Objective = 服务质量/水平目标 SLI = Services Level Indicator = 服务质量/水平指标 下面用人、事、物的逻辑进行阐释。
人和事 用从上到下，从左到右的顺序。
客户 - 每 1 个客户在使用产品服务时，都显性或隐性的基于某 1 个 SLA，SLA 和客户之间是一种 1 对 1 的文档关系，这份协议文档就显性或者隐性的存在于系统中。客户使用 1 种，或者 n 种连接方式访问产品服务的 1 个或者 n 个应用系统。
销售 - SLA 本身是所销售产品服务的一部分，它规定了承诺给客户的产品功用和质量。基于 SLA，客户可以选择用付费或者免费的方式使用产品。1 个/份 SLA 的销售工作可以由 1 到 n 位销售完成。销售和客户都幻想着几乎完美的 SLA，这样代表企业利益的销售，以及产品的客户就都可以达到双赢的局面，皆大欢喜。</description></item><item><title>怎样使用两个DevOps研究模型？</title><link>https://martinliu.cn/blog/2019-state-devops-report-insight-2/</link><pubDate>Sun, 01 Sep 2019 17:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-report-insight-2/</guid><description>本文要覆盖的章节是《 How to use the research models》 这一章。双模型在今年的报告中首次出现了，它们是效能模型和生产力模型。为什么会存在两个模型？有什么区别？有什么相似之处？最重要的问题是，你怎么用它们来指导你的DevOps工作？
本文的阅读建议：
下载我整理的最新版的《DevOps能力成长模型》，含双模型分解图。 阅读和参考前5年的DevOps状态调查报告，了解今年这份报告的历史和发展历程。以前的文章中有下载链接/二维码。 阅读2019年的调查问卷的中文版，感谢中国DevOps社区翻译团队对英文原版问卷的翻译工作，如果你都不知道这些调查结果是通过什么问卷调查得出的，那真的是很可惜。如果你想用这套问卷工具在企业内部做调研，请使用前文中的免费调查服务申请流程。样例问卷的访问地址：https://www.wjx.cn/jq/43837840.aspx 在Google的网站上做极简版DevOps行业基础测试，它是6年行业调查结果数据库的首次对外开放。 模型是怎么诞生的？ 首先，我们需要了解一下这份持续了6年的报告是谁主导并开发的？这是一个怎样的团队？从DORA公司网站的这个页面上，可以看到团队人员介绍。https://devops-research.com/about.html 如下所示。
不做其它任何解读和评论，只想请大家关注一下分析报告的主持者的title : Dr Nicole Forsgren, CEO and Chief Scientist ; 翻译一下 Nicole Forsgren 博士，CEO和首席科学家。她是一个长期的IT行业从业人员，最早专注于DevOps的行业调研员。她持有管理信息系统的博士学位和会计硕士学位。从社交媒体上可以看出她和行业大咖Jez Humber和Gene Kim都是好朋友。
其次，如果你也回顾了所有往届的DevOps状态调查报告，我们应该能体会到这场历时6年行业调研的基本逻辑和脉络。在第一年就已经提出了四大黄金度量指标，并且以此为主线；每年反复验证状态，以及其他相关影响因素。使用了穷举的逻辑，每年根据行业的发展动态，根据和其它业内大咖的讨论，适当的加入新的调查点。当然每个调查的能力点也是需要每年反复确认和验证，调查点之间的逻辑关系也越来越明显，经过二次研究之后就形成了DevOps能力成长模型。
最后，DevOps能力成长模型诞生于《Accelerate:The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations 》这本书。 https://www.amazon.com/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339
在这本书里分模块（局部）的介绍了DevOps能力模型的影响逻辑关系，从转型型领导力一直推导出模型的最右侧：组织效能和非商业效能。这个模型应该就是历届DevOps状态调查研究背后的理论基础，当然它也应该是慢慢发展和完善出来的，起码数字转型这个话题是2018年才出现的热点。模型的数值计算算法，见近两年报告的附录部分。这个模型在本书中是从各个不同的局部关系逐渐介绍的。如下图所示：
Accelerate全书的逻辑不仅在于介绍各种DevOp实践、技术、文化、领导力等等相关因素有哪些，更重要的是揭示出这些影响因素（能力点）之间的关联关系。在书的最后展示了DevOps能力成长模型的全图，如下图所示：
Accelerate这本书也提供了这幅图的电子版下载链接：https://devops-research.com/assets/transformation_practices.pdf
这是一份非常棒的学习资料，如果你还没有买本书的话，也可以下载学习这份精华资料。这份文档的总标题是：”调研总体策划“，除了模型之外该文档还提供了一张全面复杂的表格，表格的名字：”高效能团队，管理、领导力行为和实践调查表，由Steve Bell，Karen Whitley Bell“；如果你想对自己的组织进行全面的调研的话，这也是一份优秀的调研方案。调研的矩阵如下：
纵向：文化、组织结构、直接学习和对齐价值、部署策略、通过分析提高流动性和训练有素的问题解决、工作方式节奏化&amp;amp;日常化 横向：团队实践、管理实践、领导力实践。 我很有幸2017年在北京DevOpsDays大会上参加Jez先生的培训，并获赠了Jez先生的签名版《Accelerate》纸版书，其实在这以前我已经购买了Kindle的电子版和Audible的有声书版。我反复研读了这本书的各种版本，再次强烈推荐所有DevOps相关的管理者一定要学习这本书。
以书中的模型为基础，2018年的DevOps状态报告里以又进一步做了各种扩展，如果你读过去年的报告，你可以看到如下的各种局部的扩展。
大家注意看2018年的这个局部模型图的标题”精益和敏捷实践“，这里也包含敏捷开发实践。我在反复琢磨这个模型之后，用Twitter私信问过Nicole博士。我问他为何没有专项调查过敏捷开发实践？模型上为何不给敏捷开发一个位置？她的回复是，我们之前已经调研过了，而且模型上也提到了。可能在全球的软件开发工程水平看，有可能Nicole博士团队认为敏捷开发应该是比较基础的软件开发实践，据我个人了解国外高水平公司要么都已经规范照做了，要么也有像Google这样的高水平公司确实也不显性的宣传自己是敏捷开发，甚至吐槽敏捷的。
2018年对模型的扩展力度还是很大的，提出了很多新的调查项；为了能看到方便的看到一个DevOps能力模型的全景视图，我使用OmniGraffle软件基于《Accelerate》书中的模型，扩充绘制了如下的模型图：
这幅图向我们完整的揭示了到2018年以来的所有DevOps调研点，有些点是经过多年反复验证的，有些是2018年新引入的。这幅图花了我几天时间，在这个过程中也反复的推敲了其中的逻辑关系。这幅图仅代表我个人的观点，不代表DORA和《Accelerate》书籍的任何观点；需要声明的是：我绘制的DevOps能力成长模型并非我的个人著作，引用了DORA和《Accelerate》的著作，但我力求精确无误的表达整个模型。再次声明，这个模型图非官方出品，是我的个人研究。
研究模型的研究逻辑是穷举法，是从左到右的推导和影响关系。最新发布的2019年DevOps状态调查报告显示了新的变化，这触发了对以上模型的更新。本文将提供最新版高清大图的下载。
为何两个模型？ 为何2019年会分化出两个模型，简单的讲：穷举的范围越来越大了，生产力作为一个新的全局共享目标进入了调查问卷的范围。我们之前社区的小伙伴已经将2019年的近100道调查题问题翻译成中文了，敬请参阅参考DevOps状态调研问卷。在翻译完那些题目后，我并没有意识到今年可能会新增出这样一个全局共享目标的调研对象，真的以为：这个效能模型（组织效能和非商业效能）会一条道走到最后。</description></item><item><title>如何做横向行业的DevOps表现基准测试？</title><link>https://martinliu.cn/blog/2019-state-devops-report-insight-1/</link><pubDate>Wed, 28 Aug 2019 07:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-report-insight-1/</guid><description>长期关注我的blog和微信公众号（DevOps教练）的朋友可以发现，我今年从这个调查问卷开始，陆续发布了一些列文章。如果给这些文章一个文集标题的话，那么应该是：死磕2019年加速度全球DevOps状态调查报告系列。 为了帮助大家充分利用这份优秀的行业报告，我会用一些列文章，分章节的解读这份长达80多页的报告。上一篇文章如果你已经解读了该报告的核心重要发现和看点。本文要覆盖的章节是 How do we compare 这一章。
本文的阅读建议：
先阅读和参考前5年的DevOps状态调查报告，了解今年这份报告的历史和发展历程。以前的文章中有下载链接/二维码。 阅读2019年的调查问卷的中文版，感谢中国DevOps社区翻译团队对英文原版问卷的翻译工作，如果你都不知道这些调查结果是通过什么问卷调查得出的，那真的是很可惜。如果你想用这套问卷工具在企业内部做调研，请使用前文中的免费调查服务申请流程。样例问卷的访问地址：https://www.wjx.cn/jq/43837840.aspx 在Google的网站上做极简版DevOps行业基础测试，它是6年行业调查结果数据库的首次对外开放。 WHY DEVOPS？ 这是一个可以持续反复问自己的问题，首先让我们澄清一件事情：为什么要做DevOps？
是否是为了提高研发效能？是否是为了提高生产力？是否是为了提高效率？这些答案可能都对，也可都不对。对于一个组织而言：如果IT对它的使命和目标至关重要的情况下，组织对IT会产生强依赖关系，DevOps才对该组织才有意义。历年来的DevOps状态调查告诉我们：DevOps对于那些以IT为命脉的组织而言直观重要，对所有从事软件交付的组织广泛有效。
从DevOps能力成长模型中可以看出，图中的诸多能力项都正向贡献/预测到最右侧的两个组织级别目标，他们是：组织效能和非商业效能（商业和非商业目标），它们是：
盈利能力 （商业） 生产力 市场份额 （商业） 客户数量 （商业） 产品或服务的数量 （商业） 运营效率 客户满意度 （商业） 提供的产品或服务的质量 （商业） 实现组织或使命目标 如果你的某项/某几项DevOps实践能够直接贡献到以上的商业目标，或者说能持续的创造客户价值，即商业价值；那么你的DevOps就是成功的。反之，如果你仅仅期望研发效能、生产力、效率能够就等同于创造出了很多的客户价值，那是一种幻觉；这就像是：你经过了很多预赛和体能的准备，而在冠军争夺赛中，你依然名落孙山，当你的组织的绩效远远低于预期的商业目标的时候，你的各种XXX效率都是无用的。
四大黄金度量指标 6年来的DevOps状态调查报告（我只关注DORA主导和执行的这个）已经在用量化的方式，帮助我们作出了精英表现者的画像，当然还有其它的落后者。可以明确的一点是：强者从四个维度上同时都表现强劲。（去年已经打破了常见的一个误区：过度的保守主义导致在组织四个指标之中做折中选择，常见的是牺牲吞吐量指标，确保稳定性，可是后果往往是相反的。）
先来回顾和梳理所谓的四大黄金度量指标的分类：
吞吐量&amp;ndash;部署频率：对于您工作的主要应用程序或服务，您的组织在生产环境进行代码部署或向最终用户做发布的频率。调查这个指标的问题见2019年加速度DevOps状态调查问卷中的第二部分的第二题。 吞吐量&amp;ndash;前置时间：对于您工作的主要应用程序或服务，从代码提交到在生产中成功运行的过程需要的时间。调查这个指标的问题见2019年加速度DevOps状态调查问卷中的第二部分的第一题。 稳定性&amp;ndash;服务恢复时间：对于您工作的主要应用程序或服务，当服务中断或出现影响用户Bug时（如：计划外中断、服务受损），恢复服务通常需要的时间。调查这个指标的问题见2019年加速度DevOps状态调查问卷中的第二部分的第四题。 稳定性&amp;ndash;变更失败率：对于您所工作的主要应用程序或服务，对于生产变更，或向最终用户发版的变更，百分之多少会导致服务质量下降（如：服务受损或服务中断），并需要进行后续的修复工作（需要热补丁、回滚，前向修复，打补丁修复）。调查这个指标的问题见2019年加速度DevOps状态调查问卷中的第二部分的第五题。 上面的四个指标是DevOps状态调查报告使用cluster算法做受众分类的主要依据，这个类聚分析的结果就是那张四大DevOps等级的泡泡图。
在这个泡泡图中，我们可以看到有多少比例的受访者处于精英、高效、中等和低效的阵营。复述一下今年的一个重大发现：精英表现者已经从去年的高效能表现者集团中脱颖而出，他们在指标的绝对值和总体数量上都增长迅敏，增长率高达将近3倍。【DevOps教练点评：回顾一下这份报告的标题中加入的加速度的关键字，一旦某个组织的实施方法得当，一个持续优化的组织的整体效能就可能做上火箭，加速度的飞离地球。而加速度不足的企业则处于持续跌回地面的窘境。】
这四大黄金度量指标的采集方法就是调查问卷中那些四个问题。对所有实践DevOps的组织而言，我们需要的是持续实施和优化追踪这些度量指标的方法和系统，确保能实时查看这四个指标的状态是最完美的。可是目前几乎还没有什么企业能够做到，手工分别统计上报，定期公布到全体IT部门也是非常可取的做法。总之，没有度量就不存在管理，就无从系统性的改进。
我在行业里的表现如何？ 这是我写作本文想要回答的核心问题。如果你能够度量自己的四个黄金指标了，也能够随时拿出一组确切的数据，我们就能做行业基准测试比较了。
这可能是Google收编DORA团队所买到的最有价值的一部分资产，历年来的DevOps调查问卷参与者的问卷答案数据库。Google今年将这个数据库向公众开放了，网址在 https://beta.devops-research.com/performance.html (这个网址应该不用科学上网，会出现证书错误提示，请忽略继续访问该页面)。在你回答了下面的五个问题后，就可以获得一份自己的行业基准测试报告。
最后一个问题是，从13个行业中选择出一个最合适的所在行业。
下图是你在整个所有行业里的横向对比。
下图是你在所在行业里的横向对比。
下图是四个黄金指标在四个表现级别/集团上的度量；表明你每个指标处于哪个等级。
经过以上的最简版DevOps表现状态基准测试以后，你就看到了你在所有行业中和所在行业中的横向比较。当然，我们也能预测一下自己处于那个阵营和等级。然而，这并不是你的DevOps旅程的剧终情节。
所有DevOps的实践者一旦上路以后，都是一条不归路的感觉，我们可以定期的关注我们的基准测试结果，并观察自己在动态变化的行业基线中的位置，而更重要的是：找到每个现阶段的改进空间，并且持续突破自己DevOps的能力瓶颈和极限。持续的无限制的加速度发展所有DevOps能力点才是这个DevOps旅程的终极意义。
关于服务运维效能 服务效能指标是在去年的效能报告中新引进的，而在去年和今年的调查问卷和结果报告中并没有直接的关于这项指标的采集数据和结果。
从上图中我们可以直接的理解一下，左侧的四大黄金指标都关乎于软件开发部门，而这个指标关乎于服务运维部门。去年并没有给出关于可用性指标的度量方法，今年也没有在调查问卷中做直接/显性的问题设置。只是在今年2019年的报告中做了进一步的解释，说这个可用性指标的实施方法论是SRE套路。我正在翻译SRE Workbook，这本书比起之前翻译的DevOps Handbook，更具有实操性。我们拭目以待，明年的状态调查问卷是如何对可用性设问和调查分析的。关于SRE的基础概念和实施方法，心急的朋友不妨参加中国DevOps社区今年10月在杭州举办的年度大会，我有一个关于SRE的主题分享，让我们一起讨论SRE的落地套路，让用SRE套路使我们的DevOps故事闭环。
总之我们实践DevOps的时候要全局的关注“软件交付和运维效能”，简称SDO效能（software delivery and operational performance）；有O了才完整的闭环了。
总结 本文写道这里，我认为你可以无障碍的阅读2019年加速度全球DevOps状态调查报告到第25页了。我们总结一下，你应该能理解吞吐量和稳定性的四大黄金度量指标的定义；持续度量和关注这些指标的正确方法；使用Google所提供的极简版度量工具，找到自己在行业中的定位和所处的效能级别。关注SDO效能的完整性，尝试了解和实践SRE实践，让你的DevOps体验闭环和完整起来。下一期死磕2019年加速度全球DevOps状态调查报告系列将为你呈现更新版本的DevOps能力成长模型，进一步讲解如何应用今年分化出来的两个研究模型：SDO和组织效能模型与生产力模型。</description></item><item><title>2019年加速度DevOps状态调查报告-导读</title><link>https://martinliu.cn/blog/2019-state-devops-survey-report/</link><pubDate>Thu, 22 Aug 2019 07:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-survey-report/</guid><description>凭借六年多的来自全球31,000多名专业人士的数据的研究，2019年加速发展状态报告是同类研究中规模最大、持续时间最长的研究。2019年加速度DevOps状态调查首发，首发的位置在Google Cloud网站上的Blog栏目，发布于产品新闻分类下。
文章使用的主标签 DevOps 、SRE。 文章地址：https://cloud.google.com/blog/products/devops-sre/the-2019-accelerate-state-of-devops-elite-performance-productivity-and-scaling 下文为对Google文章原文的翻译和整理。并且加入了我本人的各种判断和见解。
关于今年的DevOps状态调查报告有什么更新和变化？报告文章中给我们了一句话的概要介绍：今年会对部署工具链、云计算、灾难恢复和工作方式等主题进行深度调查。更详细的情况，详细的参过问卷调查的您自有评判。
‘DevOps之研究和评估’（DORA）是通过数据驱动的洞察力，帮助组织实现DevOps和高效能组织的先驱，而Google Cloud很高兴地宣布推出2019年加速DevOps报告 。（前期文章介绍过DORA加入Google Cloud的细节） 该报告提供了DevOps行业的全景视图，为各种规模和所有行业的组织提供可操作的指导，从而提高他们的软件交付效能，最终使之成为精英DevOps实践者。
2019年的新洞见 我们看到：有持续的证据表明了软件的速度、稳定性和可用性有助于提高组织绩效，今年我们能够发现一些关于推动DevOps高绩效表现，以及实践和功能的新洞见。 部分如下所示：
DevOps已经‘跨越了鸿沟’：各个行业的组织继续地提高着他们的DevOps专业知识，特别是在表现最高那部分人群中。 精英表现者的比例几乎提高了两倍，目前他们占所有组织的20％。 这也得到了其他行业分析师报告的证实。【教练解读：精英表现者实现了从7%到20%的增长。】 精英表现者更有可能使用云计算 ：快速自动扩缩容、成本可见性和可靠性是云计算提供的一些关键优势。更具国家标准与技术研究院（NIST）定义的云计算所具有的五项特征功能，效能最高的DevOps团队比低效能团队在这些方面执行的可能性高24倍，5大特性包括按需的自助服务、广泛的网络访问、资源池，快速弹性和可度量的服务。 【教练解读：你们家使用的云计算是假的。】
大多数云计算用户并未充分发挥其潜力 ：只有29％的使用云计算的受访者符合NIST上述的五项标准特征。 这证明了这样一个事实，即声称使用云计算的组织，未必采用了所有必要的云计算特征模式来实现精英水平的业绩，这也有可能会阻碍他们通过云计算获益。 【教练解读：你号称的优势正在阻碍你。】
首次呈现出了行业差异性 ：在今年的报告中，零售行业在速度和稳定性方面都展示出了更好的表现。然而，与前几年保持一致的是，根据持续的证据表明，DevOps更好或更差的表现，并没有其行业的差异性。这依然表明：各种类型和规模的组织，包括金融服务、政府和零售等高度监管的行业，也都是可以通过应用DevOps实践来实现高水平的绩效。【教练解读：今年零售业做的很突出，还是你们进来刷榜了？】
DevOps走进企业 - 第1部分 ：我们首次发现，根据证据显示大型企业组织（员工人数超过5,000人）的效能低于小型企业（员工人数少少于5,000人）。重量级的流程和控制措施，以及紧耦合的体系架构是导致较低速度，以及相关不稳定性的部分原因。【教练解读：大型组织的坑也更大。】
DevOps走进企业 - 第2部分 ：我们的分析显示最高能的DevOps表现者（即高级和精英表现者），专注于通过结构化的解决方案来构建DevOps社区，这些解决方案包括以下四种模式之一：社区建设者、大学、涌现和实验者（Community Builders, University, Emergent, and Experimenters）。【教练解读：需要给它山之石提供存在的土壤。】
没有“一刀切”的方法，成功有赖于一致的努力付出 ：在投资于DevOps的各项能力时，特别是在大型组织中，需要同时关注团队级别和组织级别的工作成果。在团队层面上，持续集成、自动化测试和监控等实践的一些工作投入运作良好。组织级能力包括：在多个部门和团队之间，设置系统体系结构或变更审批策略的能力。 该报告分解了这些能力并概述了应该采取的策略，因此您也可以执行相关的DevOps策略，并从中获得最大的效果。【教练解读：单纯的刷某个团队或者项目也是然并卵。】
表现较差的组织比高级和精英表现者使用的软件更多 ：维护和支持私有商业软件的成本可能过高，这促使高级和精英表现者使用开源解决方案。 这和以前报告中的结果一致。 事实上， 2018年的加速度 DevOps报告就表明，精英表现者大量使用开源组件、库和平台的可能性是其它组织的 1.</description></item><item><title>中文版：2019年DevOps状态调查问卷</title><link>https://martinliu.cn/blog/2019-state-devops-survey-chinese-version/</link><pubDate>Mon, 06 May 2019 12:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-survey-chinese-version/</guid><description>本文是中文版《2019年加速度DevOps状态调查》问卷。如果你还没有填写该问卷的话，可以在线上填写英文版，点击这个链接 https://bit.ly/2UzLMH2 ，进入问卷调查网站。本文可以作为你的帮助文档。
译者团队：刘征、张晔、刘頲、朱婷、王英伟、王虹、李建芳、沈越飞、井建宇、申屠欣欣
本文由以上翻译团队经过两周的时间，在业余时间翻译完成，如果对本文有任何改进建议请发邮件到 martin AT DevOpsCoach.org
发布本文的另外一个原因：作为历时6年，被称之为DevOps界之科学的调查研究，我们可以透过这套问卷，洞察如何用问卷的方式定量的度量DevOps的现状。对于已经实施了多年DevOps企业，本问卷可谓是一道营养丰富的大餐。
历年来的DevOps状态报告 如果你需要下载学习的话，请点击下面的链接（扫码二维码），这里还有历年来英文版报告全集和部分中文版本。
下面是2019年DevOps状态调查问卷的简体中文版译文。
第一部分 欢迎参加2019年全球DevOps全球行业调查。
我们有兴趣了解您的工作方式以及工作环境。  答案并没有对错。  如果您不知道答案，可以选择“我不知道或不适用”，您的作答将被忽略。 非常感谢您花时间帮助我们去探索那些能使技术进步的秘密！
1. 您的组织主要属于哪个行业？ 教育 能源 金融服务 政府 医疗保健和制药 工业与制造业 保险 媒体/娱乐 非盈利 零售/消费品/电子商务 技术 电信 其他。请明确说明： [____] 2. 有多少员工在您的组织里工作？ 1-4 5-9 10-19 20-99 100-499 500-1,999 2,000-4,999 5,000-9,999 10,000+ 我不知道 3. 你们的服务器上都部署了哪些操作系统？  Windows 2003 / 2003R2 Windows 2008 / 2008R2 Windows 2012 / 2012R2 Windows 其他 Linux Debian / Ubuntu变种 Linux Enterprise Linux变体（RHEL，Oracle，CentOS） Linux Fedora Linux SUSE Linux Enterprise Server Linux OpenSUSE Linux Arch Linux其他 其他的UNIX FreeBSD / NetBSD / OpenBSD系统 AIX Solaris 其他 4.</description></item><item><title>2019年DevOps状态调查问卷开放中</title><link>https://martinliu.cn/blog/2019-state-devops-survey-open/</link><pubDate>Sat, 20 Apr 2019 22:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/2019-state-devops-survey-open/</guid><description>2019年加速度DevOps状态调查首发，首发的位置在Google Cloud网站上的Blog栏目，发布于产品新闻分类下。
文章使用的主标签 DevOps 、SRE。 文章地址：https://cloud.google.com/blog/products/devops-sre/make-your-voice-heard-take-the-2019-accelerate-state-of-devops-survey 关于今年的状态调查有什么更新和变化，文章中只给出了一句话的概况：今年会对部署工具链、云计算、灾难恢复和工作方式等主题进行深度调查。更详细的情况，详细你参与完问卷调查只有自由评判。
如何参与2019年DevOps状态调查 点击这个链接 https://bit.ly/2UzLMH2 ，进入问卷调查网站。
从围观到参与是一种积极的态度。与其观望这份行业报告的产生过程，倒不如参与其中。由于今年这个问卷调查是Google发起的，可能会有更多的人会参与。
精通英文的人应该能在半个小时内完成这个调查。如果英文不好的话，最多也用不了2个小时，以上推测，基于我去年的填写经历。
我还想发起一个基于这个调查的兴趣小组，请符合以下条件之一的人进微信群交流：
正在认证填写这份问卷，想从群里获得必要的帮助，从而可以能正确的作答。 想研究这份文件的题库，大家共同分析DORA设问的目标和结构。 跟进一步的，交流关于DevOps度量方面的话题 关于2018年的DevOps状态报告 有幸去年策划和参与了这份报告的翻译工作。也算是相对其他人更深入的学习和研究了去年的结果。并对它的总结和推论都有非常深刻的印象，也受益匪浅。
2018年DevOps状态调查报告的中文版本，在2018年DevOpsDays 深圳大会上做了发布，我也在台上和张乐一起向与会者做了简短的分享。如果你需要下载学习的话，请点击下面的链接（扫码二维码），这里还有历年来英文版报告全集和部分中文版本。
在2018年里Nicole Forsgren博士发布了《Accelerate》这本书，书里算是对这场从2014年开始的，持续对年的行业专项调查研究的一个总结。书中对度量DevOps这个主题做了详解科学的解读，它是那些需要度量DevOps成果的组织的一本很好的参考书。中文版本据说在翻译的过程中，期待它的出版。等不及的话可以去国外买英文电子版，这本书我是读了不下三遍，也做了相关的分享演讲，确实有很多收获。
分享几个我观察到的小细节：
DORA在2018年结束了与Puppet公司的合作调查，因此2018年的报告标题中增加了一个单词“加速度”，即：2018 Acclerate State of DevOps Report； 以前的都叫做 xxxx年 State of DevOps Report。 Puppet公司也没有闲着，Puppet和Splunk公司携手也进行了状态调查和分析，也发布了名为《2018 State of DevOps Report》，问卷的问题肯定和以前无法延续和持续的，但是报告的命名保持下来了。我猜这也是为何DORA的报告需要加一个词的原因， 总结一下，由Nicole Forsgren博士主持进行的DevOps状态调查报告的下载站点都在 https://puppet.com/resources/whitepaper ， 在这里依然可以下载到名为 2018 State of DevOps Report 的报告，但是这一个和Nicole博士无关；所有她主持的报告下载地址在她的DORA网站上 https://devops-research.com/research.html 。 在DORA加入了Google Cloud以后，Nicole博士主持的调查问卷名为“ Accelerate State of DevOps Report” ； 相信我们所期待的最终的分析结果的标题应该是“ 2019 Accelerate State of DevOps Report” ； 而Puppet公司应该还是会持续发布名为“2019 State of DevOps Report”的报告。我相信肯定会有很多人在2018年去年就有点晕了，怎么出来两个名字相似，可是内容大相径庭的DevOps状态报告。</description></item><item><title>2019年关于DevOps的几个预测</title><link>https://martinliu.cn/blog/predictions-for-devops-in-2019/</link><pubDate>Sat, 09 Mar 2019 22:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/predictions-for-devops-in-2019/</guid><description>本文汇聚了来自3个网站的预测文章，他们分别是XebiaLabs、G20Group和Veritis。在总共22项预测中，个别预测是相同的。DevOps是一个持续进化和发展的过程，同时也受到目前各种新技术的影响。
XebiaLabs的7个预测 英文原文： https://blog.xebialabs.com/2019/01/10/7-predictions-for-devops-in-2019/
1. 持续集将成作为流水线的重要代办事项 如果企业希望提高团队用在功能开发上的可用时间，从而加速向生产环境中交付的话，那么在整个DevOps流水线中，引进持续集成CI部分将成为高优先级且重要的事项。监控CI流水线相关的数据、活动和流程的能力将变得非常重要，这样可以使发布流程中的所有人都能看到最新的流程状态，从而减少开发人员花费在无关任务上的时间。 【来自：XebiaLabs产品开发副总裁Andreas Prins】
2. 价值流映射将被广泛使用 目前，随着软件交付的速度和质量正成为大型企业的巨大竞争优势，越来越多的组织将会探索价值流映射（Value stream mapping）的使用方式，从而确保他们的软件开发是和整体业务价值保持一致的。这种转变将会减少软件发布流水线中的浪费，并创建出更强大的跨职能团队协作。【来自：Lisa Wells，XebiaLabs产品营销副总裁】
3. 实时挖掘软件交付流水线所产生的数据 在2019年，IT部门通过软件持续不断创造业务价值的压力将会越来越高。因此，组织将用各种方法挖掘在软件交付流程中大量的由机器所生成的数据，而不只是在事后才进行分析，甚至还包括DevOps的可预测性。这样才能够更好地预测软件交付流程和基础架构中所发生的问题，而这些问题可能对应用程序的质量和安全性产生负面影响，可能会使产品上市时间延期。【来自： Lisa Wells，XebiaLabs产品营销副总裁】
4. 在人和流程中培养责任共但文化 DevOps同时关乎于人、流程和工具。对于任何DevOps实施计划而言，需要将人和流程视为首要的交付价值的因素。在2019年，我们将看到企业会越来越重视培养承担责任的文化，团队在复杂的应用程序交付流水线中共同承担质量和效率的责任。各个团队需要及时了解协作和进度。关键是在项目的进展过程中，及时的与整个公司分享那些取得了成功的措施和及其成果。除了证明他们的努力能够带来重大成果之外，毕竟，也没有什么比这种方式更能激励团队的了。【来自：T.J. Randall，客户成功副总裁，XebiaLabs】
5. 自服务部署将成为主流 随着自动化部署已经成为企业的标准实践，随着组织逐渐地意识到可以将信息安全和合规性也融入到他们的交付流程中，在2019年，自助服务式部署会成为主流的工作实践。【来自：T.J. Randall，客户成功副总裁，XebiaLabs】
6. 建立自己的DevOps能力度量组合 随着DevOps的投资增加，管理层将需要更多的投资回报率证据。团队需要建立他们基于全局测量（不仅仅是单个团队或个人）和结果（具有速度和稳定性的软件交付）的组合来测量DevOps（DevOps Intelligence）的能力。【来自：Vincent Lussenburg，DevOps战略总监，XebiaLabs】
7. DevSecOps融入到DevOps流程中 对信息安全“前置（左移）”的需求将会在DevOps实践中得到更好的理解和更有效的应用。在2018年，“前置（左移）”经常被滥用，被误以为会把软件的安全性责任推给开发人员。在2019年，DevSecOps将成为DevOps的另一个自然的选择，将安全性融入到流程中的每个阶段，并且所有人都对安全性有责任。【来自：Vincent Lussenburg, Director of DevOps Strategy, XebiaLabs】
G20Group的5个预测 原文：https://www.go2group.com/blog/devops-trends-2019-our-top-five-predictions-for-the-year/
由于文章比较长，下面是核心观点的概述。
使用AI加速/优化的DevOps将开始被逐渐应用。基于AI的预测性可以被用在CI或者CD栋流水线过程中，确保交付流程的有效性。这个趋势将加速应用开发者和数据科学家之间的协作。 容器化应用不在是新鲜事物了。DevOps和多云架构加速了容器相关的技术在大型企业中国的使用。越来越巨大的软件开发和部署规模也进一步提高了容器生产环境集群的规模和复杂性。Kubernets的广泛使用也进一步加速了应用容器化的进程。 Functions-as-a-Service (FaaS) 将会崭露头角。随着越来越多的专业人士在生产环境中广泛的使用容器技术。相信FaaS也会逐渐被应用起来，它也比称之为无服务器计算。这种技术的实现包括：AWS Lambda、Google Cloud Functions, Microsoft Azure Functions, IBM 等。 DevSecOps会变得更加重要。随着企业应用DevOps的范围逐渐扩大化，将安全性和合规性无缝的集成到DevOps转型过程中也得到了广泛的接受。主流的DevOps实践者会把安全性视为代码，安全团队会在DevOps工作流中和各种团队携手打造安全性。 自动化将会依然非常重要。企业越来越意识到在软件开发周中提高响应速度、运维的可恢复性、更快的上市时间的重要性；这需要将软件开发和运维工作通过自动化更好的链接起来。组织在复杂的生态系统中扩大自动化的应用还是有些难度。 来自Veritis的10个预测 原文： https://www.veritis.com/blog/devops-trends-top-10-predictions-for-devops-in-2019/</description></item><item><title>产品管理遇上Devops</title><link>https://martinliu.cn/blog/csg-product-meet-devops/</link><pubDate>Thu, 07 Mar 2019 12:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/csg-product-meet-devops/</guid><description>DevOps企业峰会是历史悠久的DevOps主题企业级峰会，近年来在北美的拉斯维加斯和欧洲的伦敦每年各举办一次。 这个大会的官网：https://events.itrevolution.com/ 2019年的会议时间已经发布，感兴趣的可以参加。
CSG公司连续多年参加DevOps企业峰会，本分享主题是CSG在2018年美国拉斯维加斯的峰会上的主旨演讲之一。本文是对这个演讲的视频回放的整理，该视频已经上传到了腾讯视频。
CSG International公司简介 CSG是一个基于SaaS的客户支持和计费公司。CSG是美国最大的账单打印和呼叫中心公司。帮助他们的合作伙伴公司完成水电费、宽带费、通信费等相关业务的收款工作，并为最终客户提供热线电话支持。
CSG的技术堆栈范围广泛，从Mainframe主机到Linux开放系统到AWS云服务，CSG认为如果正确的运用DevOps技术的话，技术堆栈并不是阻力和限制。
CSG的DevOps旅程经历了如下几个阶段。
2012年 敏捷转型 敏捷转型历经四年，进行了组织结构调整，在这个过程中关注点和亮点如下：
应用精益思想消除了各种等待队列 应用康威定律重组重组了团队 重组团队之后形成跨职能团队，将设计团队，开发和测试团队融为一体 实施持续集成技术，落地持续部署流水线作为业务开发的基础设施 实施了测试自动化 实施了共享的遥测数据，这就是今天所热议的可观察性 将作业批量尺寸缩减为以前的一半 成立了多个独立于研发团队的共享的运维团队【注意：运维还没有和研发团队融为一体，共享运维团队管理所有IT环境并和所有产品团队协作】 敏捷转型的效果：
发布影响业务的事件数量下降（在固定的时间周期里统计由于发布导致的影响客户服务的事件数量） 变更失败率下降 2012-2015 敏捷转型和DevOps早期 在敏捷转型的持续集成的基础上，CSG实施了持续部署实践，持续部署被视为应用DevOps实践的标志性动作，将所有部署转为为可重复执行的自动化部署。
上图是运维工程师们在工作时段里进行日间部署的场景，但是平均每天进行15.1个部署，71个面向最终用户的特性发布。在部署期间，运维工程师们在信心满满的打着电动。由于每一个生产环境的部署都已经做过了大量的自动化测试，且在其它环境中至少部署过7遍了。
2016 反作用力和挣扎期 上图的情形应该很常见，CSG也经历了这个阶段。
开发团队追逐：
交付速度 更好、更快的环境 更好的服务请求工具 憎恨变更请求队列（流程） 运维团队追逐：
稳定性！ 高质量代码 更敏捷的工具 憎恨变更请求队列（流程） 开发和运维团队都厌恶的：
变更管理流程 发布管理流程 生产环境的运维部门 PMO项目经理 客户想要的是：“更快得到高质量的特性！”
2016 DevOps团队融合阶段 大家一起反思这个问题：“我们为何不站在同一条战线上，一起追逐相同的目标？”
设置共同（共享）目标：更快、更稳定和更安全！融为同一个团队，为了更好的服务客户而努力奋斗。
2016~2018 后DevOps时代 为了化解在的研发和运维之间的依然持续存的矛盾现象，在大家反思之后；进行了再次的团队组织结构调整，消除了所有共享的运维团队，将运维团队的工程师融入了各个研发团队。
CSG的DevOps转型阶段的重点：
运用了不同于双模IT的模型，即”统模IT“，在DevOps实践面前，各种类型的IT架构都一视同仁 转型后的开发团队统一负责产品的构建、测试、运行和服务质量 下放变更管理委员会（CAB）职责到各个开发团队，成立本地化的CAB（详见ITIL的术语表） 建立了群策群力的服务支持响应机制（参考精益思想的安灯拉绳），因此大幅度缩短了MTTR时间 实施了反向布兰特操作，消除大量普遍存在的布兰特（这是一个比喻，详见《凤凰项目》的人物布兰特） 建立整合的Backlog，将开发、测试和运维的工作统筹管理 实施基础设施自动化 将运维问题（目标不一致、反作用力、部门墙）视为工程实践问题：更好的工程实践，更少的苦活累活！ 【注意】如上图所示，新增了一个度量指标：Inc/Mo 每月的事件数量（ITIL的术语），这是生产环境中每月发生的事件单的数量，数量的降低说明了生产环境的稳定性的提高。</description></item><item><title>博客简介</title><link>https://martinliu.cn/about/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://martinliu.cn/about/</guid><description>http://www.martinliu.cn 是我的个人博客，开始于 2007 年。
BIO 个人简介 Elastic 公司社区布道师，中国 DevOps 社区核心组织者，《DevOps Handbook》《The Site Reliability Workbook》译者；精通 DevOps/SRE/ITSM 等理论体系和相关实践等落地实现。致力于在全国范围内通过社区来推广 DevOps 的理念、技术和实践。推动开源 Elastic Stack 技术堆栈的应用，包括运维大数据分析平台、云原生服务治理、APM 全链路监控和 AIOps 等使用场景。
关注我 B 站 - DevOps 教练 https://space.bilibili.com/477542716 DevOps Coach 网站 微信公众号 - DevOps 教练（MyDevOps） 实验室 DevOps 教练实验室 访问地址： https://devopscoach.org 简介：本实验室包含虚拟化、云计算、配置管理、CI、CD 等各种实验。 实验内容： Vagrant 实验室 Elastic Stack 实验室 Chef 实验室 Ansible 实验室 Jenkins 实验室 Pipeline 流水线实验室 Nutanix 实验室 访问地址：https://nutanix.martinliu.cn 简介：本实验室包含 Nutanix CE 的基础安装，没有 Nutanix 专用服务器的朋友，可以从这一步开始。这里的所有练习步骤都是 Nutanix 软件的基础操作，在企业版软件上也同样适用。 实验内容： Prism Central 部署和配置 Nutanix Calm 基础功能 Nutanix Calm 中级操作 《DevOps Handbook》- 《DevOps 实践指南》 翻译书籍 《DevOps Handbook》</description></item><item><title>成熟度模型已死</title><link>https://martinliu.cn/blog/maturity-is-dead/</link><pubDate>Wed, 27 Jun 2018 21:34:04 +0800</pubDate><guid>https://martinliu.cn/blog/maturity-is-dead/</guid><description>上一篇文章重要观点回顾：
应用DevOps的企业不应该使用成熟度模型度量 应用DevOps的不同企业/部门不会参考某个所谓标准 应用DevOps的不同企业/部门应该参考5大类24项的能力成长模型，来度量其发展进度，在磨练这些能力的过程中，选择符合自身业务需求的，且优先级别高能力先发展。 成熟度模型已死 这个模型在各行各业都可能存在，而且可能是最容易被人接受的模型之一。对于很多新生的领域，如法炮制的套用这个模型合适么？无论合适与否，它还是会出现在DevOps的领域中。为了避免实践者试错，我们不得来分析一下这种模型的特点。
特征1 它总是阶梯式的，而且从来都是5个等级，人们经常戏称为Golden 5。常见的5级成熟度模型有下列几种。
CMMI 能力成熟度模型集成
ITIL/ITSM的成熟度模型
IT与业务融合的成熟度 http://www.cio.com.cn/eyan/1431.html
德勤网络安全合规成熟度示意图
持续交付流程成熟度
如果你百度“成熟度模型”，还可以轻易地找到很多类似模型。客观的讲，这个模型是被广泛应用的神五级。
这个模型对于任何使用的组织来说都是统一的，不会说对于有些企业是8级的，对于另外一些企业是10级的。
这种模型的另外一个代名词是“XXX标准”，或者“XX行业标准”。
特征2 通常对于每个等级上还可以定义出3到7个不同的维度。维度的数量少则3个级别，多字7到10个维度；可以要在每一个级别的不同维度上进行评价。这些维度一旦确定下来，也通常是十年如一日的静止不变。
只是一种纵横交叉的矩阵的模式，如以上的持续交付流程成熟度、德勤网络安全合规成熟度示意图和IT与业务融合的成熟度都是这样。
维度和等级往往都是静态的，通常模型发布之后，在很长一段时间里，不会发生改变。
特征3 这些模型对于不同的组织而言，组织的目标都是一致而单纯的，即“通过/到达”某个级别。请你回忆一下以前的经历。一个软件开发组织经过一年的奋斗，他们通过了CMMI3级认证；第二年的时候，项目组一狠心，一跺脚一次性通过了5级认证。请问他们为什么一定要在第二年通过5级？在第三年里，相比以前，软件开发的质量提高了么？在第四年，有没有可能出现倒退的现象？如果你回答不了这些问题的话，可以尝试请教一个更资深一些的，工作10年以上的朋友或者同事。
成熟度模型的局限性 根据以上的三个主要特征，这种模型的局限性大概有以下几个方面：
每一个企业的自身条件、业务环境、资源约束都是不同的。让他们都对标一个统一的静态成熟度模型是不合适的。这就像是目前某些国家的教育体制一样。
IT行业每天都在发生着巨大的变化，这就是我么经常提到的乌卡时代，今年流行的技术，很快就会过时，明年也将出现新的、未知的技术领域。很多行业的特点就是，在不断反复的被颠覆。而这些成熟度模型通常是永恒不变的。
成熟度模型通常是在微观上进行考察，对很多考察点做孤立的分析和评测。这样做只能度量到技术、工具或者流程本身的一些方面。而忽视了组织通过它们所获得的总体成果产出。举个例子一个企业在通过了CMMI5级之后，发现收入/利润比以前还下降了；解释CMMI到达顶级的企业，业务收入还退步了，这本来就是一件比较尴尬的事情。
如果一个集团企业，在所有IT组织/部门中强推某种成熟度模型的话，还有可能出现停滞不前的博弈现象。某些组织可能会宁愿待在中间的某个不成熟等级，并不愿意快速的提升到最高等级。那样的话，他们将失去每年一定数量的，用于提高成熟度等级的资源和预算。从最大化局部利益的角度考虑，最高级的成熟度可能等于最低级的资源支持。
最后，无论到达了那个等级的成熟度，这种明确而清晰的满足感，滋生出了锚定效应。这其实阻碍了组织持续的探索和尝试未知领域，组织因此学习的知识就会越来越少。甚至于出现能力的下滑和倒退。
综上所述，在DevOps的领域里，成熟度模型和统一标准已经过时了，它不适合用于DevOps的度量；而且，纵观整个行业，国际上目前还没有那一个适用的DevOps成熟度模型被应用于任何组织。那么还有什么其他DevOps适用的模型？
DevOps能力成长模型 这个模型是在《Accelerate-加速器》这本书里被提出的。相信大家对Nicole博士联合Puppet Lab发起的DevOps状态调查和年度报告并不陌生。这本书分析了DevOps状态报告四年的历史数据，书里所展示的内容，其实也正好是作者Nicole Forsgren博士对DevOps现状调研的第一个迭代的阶段性成果。
这本书的目标是解密高效能组织的高明之处，以及背后的原因。从探寻影响组织绩效的因素为起点，经过了四年的不断调研，Nicole博士向我们展示了一个相对比较完整的，各种影响因素的关系网。特别说明的是：下图来自于《加速器》这本书，这个形态是经过4年演进出来的，我们无法猜测2018年Nicole博士究竟怎样地拓展了调研的范围；更无法猜测的是：在2018年的状态报告结果中，这幅图会变成什么样子？
Nicole博士总结出了DevOps能力的5大分类，包含的能力点有24项。
第一类：持续交付 对生产环境的所有工件进行版本控制 运用自动化部署流程 实施持续集成 运用基于主干的开发方法 实施测试自动化 进行测试数据管理 前置信息安全管理 实施持续交付 第二类：系统架构 应用松耦合的架构设计 授权团队进行架构重构的决策 第三类：产品和流程 收集和实施客户反馈 运用价值流模式可视化工作流 运用小批量的工作模式 培养和赋能团队进行试验 第四类：精益管理和监控 应用轻量变更审批流程 业务决策得到从应用到基础架构的全堆栈支持 前瞻性地监控系统的状况 应用WIP来进行价值流的工作管理 通过可视化来监控团队工作质量和进行沟通 第五类：企业文化 发展并支持生机型企业文化 鼓励和支持学习 支持和辅助团队间的协作 提供工作所需要的资源和工具 支持和落实领导力转型 DevOps能力成长模型的特点 首先，这个模型是基于4年以上的、科学的调查分析而来的。Nicole博士和全球最顶尖的DevOps公司，以及各种业内大咖，历经了多年的协作。其次，此模型是演变出来的，而且一定会持续更新。最后，分析一下这个模型的特点。</description></item><item><title>参与2018年DevOps状态调查报告</title><link>https://martinliu.cn/blog/2018-devops-survey/</link><pubDate>Wed, 27 Jun 2018 00:09:21 +0800</pubDate><guid>https://martinliu.cn/blog/2018-devops-survey/</guid><description>听说这里有一个15分钟就能完成的DevOps调查问卷，有25位参与者或将得到总值为3200美元的亚马逊购物券。一年也就是这一次机会。问卷调查将在10天后就关闭。
这是DevOps状态报告调查问卷的第七年。在过去的6年里，已经有两万七千多人参与了这项调查。这项调查已经获得了丰硕的成果，主要是帮助你了解在DevOps之旅上当前的进展。今年又扩展了调查的范围，再度加深了对DevOps之旅的调研。
我已经帮你把问题的套路摸清楚了，其实问题都很清晰直白，很容易和你所在企业的DevOps状态做匹配。填写问卷调查也是一个学习的过程，可以用开放的心态去了解一下，调查报告对DevOps的观察角度都有哪些？
对其中的部分问题做出了简要的说明，预祝你在参加这项全球性著名调查的过程中，有一个愉快的体验。
今年的看点 据说DevOps状态调查报告的一个最大的价值就是：在你的组织中，你可以用这些数据展示出DevOps的价值，从而取得管理层的支持，并启动DevOps项目。
在今年的调查研究工作中，新加入的，对在企业中应用和推广DevOps有深度洞察的专家包括：
Andi Mann, the chief technology advocate at Splunk and co-author of Visible Ops – Private Cloud and and The Innovative CIO. Michael Stahnke, a director of engineering at Puppet and the author of Pro OpenSSH. Alanna Brown, the director of product marketing at Puppet and creator of the first State of DevOps Report in 2013. 参加这项问卷调查将有25人会得到亚马逊购物券，价值 $100, $200 或 $500 ； 抽奖说明：</description></item><item><title>从完美风暴说开去，直到DevOpsDays社区</title><link>https://martinliu.cn/blog/perfect-storm-devops-days/</link><pubDate>Sun, 20 May 2018 10:54:51 +0800</pubDate><guid>https://martinliu.cn/blog/perfect-storm-devops-days/</guid><description>各种大会、各种喧嚣，你都看够了么？免费的，收费的，都与你有何相干？哪里是你自己的社区，哪里可以找到同类和导师？本文是我对社区的一点个人的思考，感兴趣的读一下。
本文的标题图片是中国DevOpsDays社区志愿者招募的标题图片，这是NASA的一张完美风暴的航拍图片，暂时不欣赏这幅图的完美之处。让我来先讲讲它的出处，这幅图来自于樊登读书会App，源于他最近读到的一本书《谢谢你迟到》。
我觉得书名和DevOps有些相关性，DevOps在IT行业中的兴起是最近9年的事，说来这是一段不长不短的时间。纵观最近几年的IT行业，这是一个从业人员的幸福感和优越感急剧下降的过程，是敏捷、精益、CMM和ITSM等管理等套路，在逐渐被人质疑的过程，是IT行业内的大厂纷纷走向没落的9年。DevOps并不是从无到有蹦出来的，它的姗姗来迟也并不具有任何的偶然性，相反它是各种管理实践分久必合的必然结果，它是一个各种最佳实践的聚合体，它是从敏捷社区发源，然后逐步融入了各种必要的元素，而且各种元素之间产生了化学反应后的化合物。
我对社区的认识源于很久以前在大学中对Linux的喜爱，从哪里听说了开源社区这种事物。对开源软件社区的深刻理解是在加入Red Hat公司期间形成的。Red Hat公司创造了一种神奇的开放文化（见CEO Jim出版的Open Orgnazation一书），让曾经在哪里工作过的员工可以将自己的职业生涯清晰的化为：Red Hat阶段和非Red Hat两个阶段（所有其它公司都是和Red Hat迥异的，都是雷同的）。这不是我自己总结的，是今天早晨和一个公司同事聊出来的，我们都曾经在Red Hat工作过，不过在那段时间里我们并不认识。
在Red Hat的时候，当你加入到某个开源项目的邮件讨论组的时候，你会很自豪的有一等公民的感觉。由于你发现你的同事在各种项目的讨论中频繁出现，他们的日常工作就是在开源社区中修复bug，提交feature。虽然我并不贡献代码，不过还是觉得占了“Red Hat是个活雷锋”的形象的光。Red Hat公司的工程师在开源社区中的贡献，是这种项目的助推剂和催化剂。
当然也有人觉得Red Hat是商业开源而已，少了早年开源社区的那种乌托邦式的纯粹感，并不是一种无欲无求的奉献。但是时代还是要继续，而且是不断的变迁的。开源软件社区就是这样轻易的颠覆了软件世界的格局，纷纷倒闭和没落的昔日贵族们，他们不都是巨无霸级别的闭源殿堂么？
开源软件的开放性和分享精神给了我非常大的影响，这加深了我对社区的认识。DevOpsDays社区是不同于开源软件社区的，我对他的感受和理解基于软件开源社区，但隐约感觉到它们是两种社区，应该是不同的类型，但是目前还说不清楚。
用台风眼作为DevOpsDays社区的比喻是在我听樊登讲《谢谢你迟到》时想到的。听完之后，看了一下App里的此书的图文描述，发现这的确是我所需要的寓意，下面直接转述，不做解释。
2.台风眼
在台风来袭时，位于台风中心的台风眼反而是最安全、最风平浪静的。回到社区，找到自己熟悉的中心，就像是台风中的“台风眼”。
台风眼也不是固定不动的，它能保持安稳的一大原因就是，它会应时而动。台风持续不断地移动，就像这个时代的脉搏，台风眼也随着它移动，保持自己始终处在有利的位置。
台风眼就是我们每个人最好的老师。
我现在所深度参与的是“DevOpsDays社区”，它的历史可以追溯到 #DevOps 这个词的诞生，它的全球广泛程度可以参考官网 https://DevOpsDays.org ； 这也是我喜爱这个社区的两个原因。
另外，我觉得DevOps本身对这个时代应该是很有价值的；此时此刻的深夜，我扫了一眼微信朋友圈，还是能看到“深夜、聚众、上线加夜班的团队”在上演着这不断重复的人间悲喜剧，看到他们相互的点赞、加油和鼓励；可是从DevOps的观点出发，我们其实可以冒出这样一句话：“其实还有一条更好的路”。
虽然，有时候你觉得DevOps无处不在；但是，我个人深刻的意识到，其实IT行业中还有巨大数量的人，他们并不知道DevOps的存在。还有大量的人，个人掌握了DevOps的知识和实践，但是还是无法影响和改变周遭的人。还有大量的团队在迷迷糊糊地实施着DevOps。更有大量的公司在观望着DevOps。
很显然，DevOps的推广和传播还是不够的，这是我觉得各种DevOps社区都应该意识到的一个事实。我们都有责任传播正确的理念和信息，切勿蹭着这个热点，而有不负责的传播着错误和误导的信息。所有博主、微信号和公司都应该自省。纷繁复杂的DevOps实践之间本来就已经存在着千丝万缕的联系，而它们的落地无不挑战和考验着所有的DevOps实践者们；只有在各自公司的业务场景里，运用科学系统的思维方式，经历相当长一段时间的实验阶段，才可能感知和捕捉到DevOps的好处和优势。在这个过程中，和同行的实践者坐而论道或将是一种很好的学习和提升的方式。而这也是DevOpsDays社区期望能为实践者们提供的。为此DevOpsDays社区需要做如下的工作，才能提供出以上的学习环境：
线上线下的分享会 线下的城市聚会 举办区域的大会 这些活动的发生时需要一定数量的人力、物力和财力。如果我们想在国内覆盖更大数量的群体，必然需要更多数量的志愿者。如果没有坚实的志愿者群体，没有志愿者群体的奉献，任何社区可能都是难于发展和存在的。
总结 本文其实是写给我自己的和整个国内DevOps社区的，仅仅是简单地回顾了一下我个人的社区经历而已。不是想引导任何人来加入我们所发起的这个志愿者群体的。原因很简单：不到24小时，我们收到了近百人的报名申请。这让我们核心组织者措手不及。之前是发愁没有志愿者分担我们的劳动，而现在发愁的是如何与已经报名的人联系起来，我个人也没有管理如此数量志愿者群体的经验。最后希望我们可以快速的度过这个幸福难题；使志愿者们可以自组织地运作起来，让DevOpsDays社区为这个行业传播价值，让它在人和人之间创建有意义的链接。
参与中国DevOpsDays社区的三种姿势：
关注，从中学习所需要的知识；就这样静静的看着挺好。 加入，分担一些志愿者工作，结交新朋友。 分享，为这个社区注入新鲜的知识和经验，社区需要更多这样的人，需要有更多的人可以成长为分享者，分享也是一种更高阶的学习。 中国DevOpsDays社区的官网是： http://ChinaDevOpsDays.org
.</description></item><item><title>Kops on Aws</title><link>https://martinliu.cn/blog/kops-on-aws/</link><pubDate>Mon, 02 Apr 2018 00:22:44 +0800</pubDate><guid>https://martinliu.cn/blog/kops-on-aws/</guid><description>kops这种方式是我找到的最佳的，最适合于培训课堂需要的安装方式，当然对有类似需求的人有帮助。
Route53 DNS配置 kops需要使用DNS服务，用主机名提供k8s的相关服务访问。配置的注意点：
域名还是有必要有一个的，没有的话注册一个也不贵，以后用着也方便 建议在aws的Route53里做一个二级域名，例如：k8s.devopscoach.org 这个二级域名最好是能被正常公网解析的，为了便于直接访问集群里的服务 用 dig NS k8s.devopscoach.org 可以能正常解析（Mac上是这个命令） 由于全球的域名同步会需要一些时间，因此可以先做这一步，用到的时候，可能就已经同步好了。
kops会将所有主机的域名解析都自动化的添加A记录到这里。
安装工具准备 需要安装的工具包括 kubectl, kops 和 AWS CLI 工具。kops需要调用 AWS CLI来创建所需要的资源。我觉得简单的方法是：在目标的Region里创建一台Amazon AMI的虚拟机，这样AWS CLI就不用装了，而且在云里的话，执行kops的时候，由于有一大堆资源创建更新的api调用，感觉速度比在本机快很多，而且还用担心断网。
可以启动一台t2.micro规格的Amazon AMI即可，另外需要给这个实例配置如下IAM用户权限，在启动的时候选择合适的IAM Role。
AmazonEC2FullAccess AmazonRoute53FullAccess AmazonS3FullAccess IAMFullAccess AmazonVPCFullAccess 这台虚拟机启动之后，安装kubectl和kops。
curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl sudo chmod +x kubectl sudo mv kubectl /usr/local/bin/kubectl wget https://github.com/kubernetes/kops/releases/download/1.8.0/kops-linux-amd64 sudo chmod +x kops-linux-amd64 sudo mv kops-linux-amd64 /usr/local/bin/kops 准备ssh登陆秘钥，用户ssh登录各个ec2实例
[ec2-user@ip-172-31-27-182 ~]$ ssh-keygen Generating public/private rsa key pair.</description></item><item><title>容器化应用的设计原则</title><link>https://martinliu.cn/blog/cloud-native-container-design/</link><pubDate>Sat, 24 Mar 2018 20:51:01 +0800</pubDate><guid>https://martinliu.cn/blog/cloud-native-container-design/</guid><description>本文来自于Red Hat咨询顾问Bilgin Ibryam所编写的一篇白皮书，名为《PRINCIPLES OF CONTAINER-BASED APPLICATION DESIGN》。这篇文章在作者的Blog上发表后，作者的twitter被Kubernetes官方twitter转发。白皮书在Red Hat官网的下载地址：https://www.redhat.com/en/resources/cloud-native-container-design-whitepaper 文本是对这篇文章的学习和整理。
先回顾经典的软件设计原则：
保持简单，愚蠢（KISS） 不要重复自己（DRY） 你不会需要它 （YAGNI） 关注点分离（SoC） Single responsibility, Open/closed, Liskov substitution, Interface segregation, Dependency inversion （SOLID） 然后是Red Hat的云原生容器设计原则：
唯一关注性原则（SCP） 高度可观测性原则（HOP） 生命周期一致性原则（LCP） 镜像不可变性原则（IIP） 进程可处置性原则（PDP） 自包含性原则（S-CP） 运行时约束性原则（RCP） 很多组织都理解云原生的重要性和必要性，但是并不知道从哪里开始。那么请确保：云原生平台和容器化应用能无缝的运行在一起，并且具备抵御故障的能力，甚至在底层的基础架构出现宕机的时候，也能通过过弹性扩展的方式表现出可靠性。本文描述了容器化应用时需要遵循的基本准则，实施这些原则有助于使之与云原生平台Kubernetes更加适配。
唯一关注性原则 SINGLE CONCERN PRINCIPLE（SCP） 在许多方面，唯一关注性原则与来自SOLID的SRP是类似的，它建议一个类应该只有一个责任。SRP背后的动机是每个责任是变更的一个轴心，一个类应该有，且也只有一个需要改变的理由。SCP原则中的“关注”一词强调关注是一种更高层次的抽象的责任，而且它更好地将范围描述为一个容器而不是一个类。虽然SRP的主要动机是变化原因的唯一性，而SCP的主要动机是容器镜像重用和可替换性。如果你创建一个解决单个问题的容器，并且以功能完整的方式来实现，不同应用程序中的容器镜像重用的可能性就会更高。
因此，SCP原则规定每个集容器都应该解决一个问题，并做得很好。 实现这一点，通常比在面向对象的世界中实现SRP更容易，容器通常管理的一个单一的进程，大多数情况下一个进程解决一个问题。
如果你的容器化微服务需要解决多个问题，它可以使用这样的模式，将多个容器用sidecar和init-containers的模式合并成一个部署单元（pod），这样每个容器仍然是处理单个问题。同样，您可以替换处理同样问题的容器。 例如，将Web服务器容器或队列实现容器，更新为更具可扩展性的容器。
高度可观测性原则 HIGH OBSERVABILITY PRINCIPLE（HOP） 容器提供了一种统一的方式来打包和运行应用程序，将它们视为一个黑盒子对象。 但任何旨在成为云原生公民的容器都必须提供API支持，要为运行时环境编写接口（API），以观察容器的健康状况和行为。 这是自动化容器更新和生命周期回收的基本先决条件和统一的方式，从而提高系统的弹性和用户体验。
实际上，您的容器化应用程序必须至少为其提供不同类型的健康检查的API&amp;ndash;活动和就绪等状态。更好的应用程序的行为则必须提供其他手段来观察容器化应用程序的状态。应用程序应该将重要事件记录到标准错误（STDERR）和标准输出（STDOUT）中，从而通过统一的日志聚合工具（诸如Fluentd和Logstash之类的工具）进行分析，并与跟踪和指标收集库相结合，例如OpenTracing，Prometheus等。
将您的应用程序视为黑盒子，但实施所有必要的API以帮助平台对其进行观测，并以最佳方式管理您的应用程序。
生命周期一致性原则 LIFE-CYCLE CONFORMANCE PRINCIPLE（LCP） HOP规定了你的容器提供供平台观测的API。 LCP则规定：您的应用程序有办法读取来自平台的事件。 此外，除了获得事件以外，容器还应该对这些事件相应地作出反应。这就是此原则名字由来。这几乎就像在应用程序通过一个“写入API”与平台进行交互。
来自管理平台的各种事件都是为了帮助您管理您的容器的生命周期的。决定处理哪些事件取决于您的应用程序 以及是否对这些事件做出反应。
但有些事件比其他事件更重要。例如，任何需要一个干净的关闭进程，这就需要捕获信号：终止（SIGTERM）消息，并尽可能迅速关闭。 这是为了避免通过强制关闭信号：kill（SIGKILL），之后跟随一个SIGTERM。
还有其他事件，例如PostStart和PreStop，可能对您的应用程序生命周期管理也非常重要。 例如，某些应用程序需要在服务之前进行预热请求和一些需要在关闭干净之前释放资源。</description></item><item><title>7种DevOps工程师必备技能</title><link>https://martinliu.cn/blog/7-skills-devops-engineer/</link><pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/7-skills-devops-engineer/</guid><description>使用DevOps的目的是改变和改善开发与IT运营之间的关系，倡导两个部门之间更好的沟通与协作。虽然这看起来有些简单，然后，DevOps工程师还需要做更多的工作，才能成功部署代码，并将Dev和Ops两个部分成功地绑定在一起。
从应付DevOps压力的角度出发，DevOps工程师除了需要日常技能的基础，每个工程师都必须具备多种技能。DevOps工程师除了要对脚本和编码有着强烈的热情之外，还必须具有开放的思想和协作精神，才能成功地执行该过程。
“DevOps教练”参考一些文献，已经为你设计了一个清单，列出了下面的7种必备技能，公司的DevOps工程师的招聘需求里，应该明确提出下列所有品质。
1. 灵活性 编码是一个持续的过程，不断变化，总是需要更新。要成为一个成功而有效的DevOps工程师，理想的候选人必须有能力不断地开发新的系统，并将其集成到主干代码中。DevOps工程师必须具有灵活的工作技能并适应不断变化的代码。
无论是集成、测试、发布还是部署，工程师都必须能够轻松地从一个软件构建领域迁移到另一个领域。例如，持续集成需要具备快速有效地管理变更的技术技能，并且能够在团队中协作，以保证每个人都朝着共同的目标努力。
2. 安全技能 与许多其他所熟练的领域一样，安全始终是最重要的，尤其是在编码方面。黑客进入系统的一个简单方法是利用漏洞，破坏现有的系统并获取数据。 DevOps带来了更快的代码开发和部署周期，这意味着漏洞也比以前更容易引入代码。因此，工程师必须具备编写安全代码的技能，以保护应用程序免受不期望的攻击，此外还要确保系统针对常见的网络安全漏洞建立防御机制。
DevOps工程师在受雇时必须具备安全技能，因为软件从部署一开始就内置了安全性(而不是在以后添加)是至关重要。如果从一开始就没有安全措施，那么黑客就有更多的机会通过网络注入破坏性代码。因此，在招聘下一位DevOps工程师时，确保安全性是技能列表中最重要的一项。
3. 协作 对于一个成功的DevOps工程师来说，不具备八面玲珑的和周围打成一片的能力是不行的——协作实际上是DevOps概念的核心，它将软件开发和软件运维结合在一起。DevOps工程师必须具备团队合作的能力，在DevOps流程中协作提供了更多的跨职能的联动。
4. 脚本编写技巧 尽管这一点听起来很显然，但任何开发人员都必须具备编写代码的高超技能。无论是JavaScript、Python、Perl还是Ruby，一个成功的开发工程师都必须能够编写代码。
从编写手动代码到替换手动操作流程(如分配IP地址或DNS代码)，必须团队里必须具有能够编写这些代码的人员，这是完美的候选人应该能够做到的。
5. 决策 一个优柔寡断的候选人不是你想要的业务开发工程师。一个成功DevOps工程师候选人将有能力自信而迅速地作出决定，即使是在繁忙的环境工作。
代码不断变化的特性使得必须快速决定如何修复代码中任何不连贯的元素。果断性必须是雇用DevOps工程师时要考虑的一个因素，因为快速决策允许工程师保持快速开发和部署新编码更改的能力。
6. 基础架构知识 脚本编写只是开发人员应具备的关键技能之一，仅次于云和基础架构的经验。工程师应该对基于数据中心和云基础架构的各种组件的工作方式有一定了解。这包括软件如何联网、并运行在虚拟网络上等要素。
如果没有理解基础架构的能力，要成为全栈软件开发工程师可能会有些困难。整合基础架构技能将使有效的DevOps工程师能够使用最佳的平台，有效地设计和部署应用程序。还能提出优化建议。
7. 软技能 如上所述，当一名DevOps工程师不是一个人在工作，所以在这种情况下，任何未来的员工必须具备软技能和技术。在信任的前提下，DevOps文化使所有员工能够与流程进行沟通和理解，在需要的时候作出变化。
当开发人员有效地相互沟通时，应用程序可以在比某些工作人员不在上下文中的情况里要短得多的时间内交付。以及更快的进入市场，良好的通信将导致更少的错误，从而降低成本并提高代码质量。</description></item><item><title>2018年必须认识到的6个DevOps趋势</title><link>https://martinliu.cn/blog/6-devops-trends-aware/</link><pubDate>Fri, 23 Mar 2018 17:50:25 +0800</pubDate><guid>https://martinliu.cn/blog/6-devops-trends-aware/</guid><description>DevOps已经出现了很长时间，我们中的很多人都认为它只是一个时髦词。现在我们知道这并不是一个神话。DevOps已经成为一个IT主流的焦点，并且在过去的几年里一直在重塑着软件世界。专家表示，DevOps将成为主流，2018年DevOps的人气将达到顶峰。
下面是术语“DevOps”在Google趋势里的现状，以及对2018年预计增长的假设。 谈到统计数据，从2015年到2016年，DevOps的应用企业数增加了约8%，预计2018年这一数字将大幅增长，如上所示。
你可以阅读RightScale的整个报告。甚至Forrester的报告也明确提到2018年将是DevOps的一年。
最近发表的关于DevOps的事实和统计数据的文章得到了DevOps爱好者的热烈响应，它只是表明许多技术布道者者对了解更多DevOps并在他们的组织中实施DevOps很感兴趣。
今天，我们将看到以下事实将塑造DevOps的未来。
1 将重心从CI流水线移到DevOps装配线 通过CI流水线可以显示应用程序从源代码管理到生产的完整可视化。你可以在一个统一的视图上看到一切。它不仅仅只关于CI，它更多是作为CD (连续交付)的基础；组织正在投入时间和精力来进一步了解自动化其完整的软件开发流程。2018年，第一大DevOps转变将是从单纯的CI流水线转变为DevOps的装配线链接是Shippable关于装配线的描述。
2 自动化将成为主要关注点 在DevOps中，我们经常谈论自动化。如果可能，对服务器的零接触自动化将是未来的趋势。这并不意味着你必须自动化一切，但如果你必须这样做，那么你应该能够做到。了解DevOps循环的6个C，并确保在这些阶段之间应用自动化是关键，这将是2018年的主要目标。
3 测试人员需要学会编写代码 在DevOps中，需要测试人员知道如何编写自动化脚本来测试各种情况。如果您是一名测试人员，如果在是否学习编码的问题上进退两难，那么我建议您学习编码。了解不同的DevOps工具和自动化脚本，在当今的软件开发中起着至关重要的作用，这将在2018年占据主导地位。
如果测试人员不学习自己编写自动化测试脚本，他们将会灭亡。手动测试将在2018年过时，它将占用大量时间。自动化测试不仅可以提高效率，还可以确保功能更快地交付给市场。
4 微服务体系结构应用的增加 DevOps和微服务最近正是天作之合。微服务是独立的实体，因此不会在出现问题时由于任何依赖关系而中断其他系统。微服务体系结构可帮助公司轻松进行部署和添加新功能。预计公司将转向微服务体系结构，以提高其运行时间和效率。不要因为别人采用了微服务体系结构就跟着他们走，点这个文章：了解自己并理解为什么应该采用微服务体系结构。
5 预计将有更多的公司选择企业版DevOps工具 目前有许多公司仍然处于建造还是购买的两难境地。但是，我们建议您做您最擅长的事情，并根据您的要求购买工具。这不仅有助于您专注于自己的目标，而且通过完全依赖第三方平台来提高工作效率。许多公司现在都在寻求企业版本，以获得自己的DevOps基础架构，并确保安全性尽可能掌握在最佳人员手中。
6 KUBERNETES将会大行其道 Kubernetes因其优异的功能性和易用性，从而成为增长最快的容器技术。kubernetes围绕它建立了一个伟大的开源社区。在全球范围内，许多首席信息官和技术人员都采用了Kubernetes，采用比例预计将在2018年进一步提升。
最近，在KubeCon + CloudberNativeCon北美( 2017年12月6日至8日)之前，云计算基金会进行了一项调查，并分享了容器编排环境正在发生的变化和向Kubernetes的转变。
来源:容器业务流程环境正在更改。
以上是将在2018年复现的DevOps的6个趋势。</description></item><item><title>2018值得关注的15个DevOps大会</title><link>https://martinliu.cn/blog/2018-best-devops-event/</link><pubDate>Thu, 22 Mar 2018 08:30:13 +0800</pubDate><guid>https://martinliu.cn/blog/2018-best-devops-event/</guid><description>本文向你简要介绍2018年DevOps界的15大最重要的大会活动。DevOps的一个方面就是持续&amp;hellip;&amp;hellip;.参加大会学习！全球范围内看，基本上每个月都至少有一个我们值得重点关注的大会。我们不能奢望都你有机会参加，但是作为DevOps业内人士，如果你不了解这个大会的情况，你就Out了。
这些大会中有些社偏技术的、有些是注重社交和体验；根据你的业务需求和学习目标，今年走出去参加最高端DevOps盛会的奢望可以有。不提前做功课，怎么能说服领导支持你呢？万一领导批准了呢？
1. Cloud &amp;amp; DevOps World June 12-14, London
cloud&amp;amp;DevOps World是techxl 8的一部分，是一系列各种技术会议、网络机会和博览会的一部分。cloud&amp;amp;DevOps World涵盖云创新和管理微服务、DevOps、容器、无服务器体系结构和监管实践。云与云世界的一大亮点是，您可以通过展览的其他部分(如物联网和虚拟现实会议)看到云概念和云概念在发挥作用。
与会者还可以向观众演示他们的云解决方案，并享受联网、交互式会话和讨论面板。在去年的展会上，有300多家参展商和15000多名与会者参加，使这成为业界最大的展会之一。
2. DevOps Enterprise Summit (DOES) June 25-26, London
DevOps企业峰会针对的是参与DevOps革命的主要企业的高级经理。该大会深入探讨了各种重要的主题，一方面涉及技术和架构问题，另一方面涉及领导力挑战。DevOps Enterprise Summit的主题演讲、专题小组讨论、聊天室、社交圈区和展览大厅。
伦敦活动的讲演者包括来自IBM、Puppet、微软和各行各业的资深人士。DOES是一项每年举办两次的活动，地点在美国和欧洲之间变化。上一次在旧金山举行的展览有1400多人参加。
3. O’Reilly Velocity Conference June 11-14, San Jose
Velocity会议是本列表上排名第三的活动，由O’Reilly Media欧莱利媒体公司举办，该公司是一家技术媒体公司，在各种技术领域举办了无数的展览。Velocity会议在讨论站点可靠性工程、基础架构(如代码)、混沌工程、自动化、连续交付、恢复能力和安全性时，吸引了web ops、系统工程师和开发专家。圣何塞展览(今年在不同城市实际上有三个Velocity会议)的演讲者包括来自微软、Netflix、亚马逊和谷歌的代表。
4. ChefConf May 22-25, Chicago
ChefConf面向开发、自动化和法规遵从性感兴趣的管理员和开发人员。ChefConf关注处理整个应用程序开发和管理生命周期所需的策略和技能。本次活动侧重于实践和经验，以涵盖构建云应用程序、持续法规遵从性和广泛的自动化等活动。去年的ChefConf吸引了大约1，500名与会者，来自Chef和其他重要科技公司的演讲者。
5. Continuous Lifecycle May 15-18, London
Continuous Lifecycle每年在伦敦举行，主要集中在开发、容器化、连续交付和敏捷方面。这是一个为期三天的活动，包括会议和研讨会，与会者包括开发负责人、架构师、开发人员、CTO、工程师和工具/基础架构专家。每一个行业都有代表，从高技术的最高水平到制造企业。
6. DevOps Con May 28-31, Berlin
你是德国人吗？就算你只能说有点德文，DevOps Con也是值得一游的。它可能被认为是一年中最重要的持续交付会议，在微服务、Docker、云计算和精益业务方面进行了出色的讨论。今年的演讲者包括优步、红帽和西门子的高级职员。DevOps Con演讲者使用德语和英语，让与会者忙于实际的研讨会、会议和主旨演讲。
7. DevOps Days 今年DevOpsDays在国内举办三场：北京-5月，上海-8月，深圳-11月。
如果你还不能参加一个DevOps Days会议，那你肯定是住在了月球上。从亚特兰大到苏黎世，DevOps日一年四季都在不断发生，一个月内有多达几十个大会活动，遍布全球。DevOps Days活动关注软件开发和IT基础架构运营，重点关注自动化、测试、安全性和组织文化。
每场大会的地点都不尽相同，因此如果您有特定的感兴趣区域，请确保您注册了最感兴趣的城市，以便充分利用2018年DevOps的重大活动。DevOps Days甚至鼓励专业人士在大会上组织自己的日程。</description></item><item><title>基础架构的持续集成和应用部署</title><link>https://martinliu.cn/blog/devops-infrastructure-ci-app-deployment/</link><pubDate>Sat, 17 Mar 2018 10:50:57 +0800</pubDate><guid>https://martinliu.cn/blog/devops-infrastructure-ci-app-deployment/</guid><description>持续集成通常是针对应用而言的，可是基础架构的持续集成应该怎么做？基础架构的持续集成应该属于持续交付/部署的基础。贯串本文的一个问题，或者在阅读本文时，您应该不断地问自己这个问题：我们的应用部署流程是怎样的？
在回答这个问题之前，我们先来回顾一下，目前几乎所有人正在使用的手工环境和资源交付流程。在源码被编译打包了以后，安装包文件被上传保存到了内部的某个文件服务器上。Ops团队的某个组/人被分配到工单，根据工单描述的需求，它在测试或者生产环境中开始工作：
用图形界面进行虚拟机模板的手工克隆工作，或者由于没有相应的权限或者自助服务，不得不给虚拟化管理员发任务单，然后等待回复。 获取用户名和密码手工登录服务器，有些企业还要是等待领导的审批，才能得到密码信封和所需要的访问密码。 根据工单（变更单）里的描述和自己的经验对虚拟机的操作系统进行配置，在这个过程中，Ops往往可能还需和需求方进行不止一次的沟通，确认相关参数。 手工的下载应用安装包，然后分别手工上传到目标的服务器，凭经验和工单信息部署应用，然后测试部署结果，可能是看下页面有没有正常显示，或者服务起没起. 手工测试和确认这些虚拟机的服务和状态，凭经验觉得OK了以后，回复工单，关闭工单。 以上的工作场景，可能是Ops人员很常规的一天，或者是几天内的工作，当然在这个过程中，他们还需要参与一些救火行动；他们在这个过程中也可能会有疑问，也可能会对此工作结果不确定；但是，日常的工作经验告诉他，差不多了，关闭任务单要紧，还有好多项目催活呢！就这样，配置并不精确的虚拟机环境就交给了下游的需求方。
以上工作过程的问题如下：
工作周期长，速度慢。实际上工作周期拖延的越久，工作结果的质量就越差，而并不是我们想想中的慢工出细活。 所有步骤都是纯手工操作，不仅费事费力，而且出错几率高，也几乎不可能无痛的回退。可能有人会说了，我们不需要那么快，我们也不是互联网公司；可是从精益思想的角度看，以上这些工作都属于对业务价值的交付贡献为零的工作；你可能是由于公司给你发着工资，才错误的感觉到，这项工作活动应该有它的价值。 上游传递来的信息可能不全面，不准确，因此Ops很有可能造成错误配置，因此会返工。 传递给下游的虚拟机很可能会在后续的部署过程中，由于应用需求的变化，而需要下游的人员对其重新配置，产生重复的劳动。 手工部署的时间和代价 = 应的数量 X 应用版本数量 X 环境数量
对以上工作系统进行优化的原则：如果某一项活动的重复频率越高，那么对它进行优化，所产生的回报也会越明显；这里还要参考限制理论，优化的顺序要正确。
我们从这个角度出发，就可以来设定基础架构持续集成和应用部署流程的改进目标了：
减少总体人工工作时间和代价 提高交付的速度、可靠性和频率 能进行应用部署，能进行数据库Schema的更新 能够实现部署流程的自服务，让任何需要部署应用的人能一键式部署任何版本 到了这里我们就必须将上述手工劳动，变为自动化的过程。因此，基础架构即代码IaC （Infrastructure as code）和相关的配置管理工具就会用到。
上图是一个典型的持续交付流水线模型，在此我们对它的关注点如下：
代码的变更被Jenkins自动化的构建（CI是基础），打包后的安装包被存储在Artifactory里，Artifactory里面还可以存储应用包的其它相关元数据，如测试结果，能否可以用于下一步部署的标签等等。 Jenkins自动化的搭建所需要的环境，调用虚拟化或者公有云资源池的API，制备虚拟机资源，然后调用Chef完成对虚拟机的配置，完成应用包部署所需要的所有层次的配置。 环境配置完成后，应用正常运行了，在相关的测试工具对部署后的环境做验收测试，Chef具有支持测试驱动的相关工具。 基础架构的持续集成 为了实现完整的基础架构持续集成流程，以上持续交付流水线必须具备的能力和概念包括：分层的系统管理、基础架构即代码IaC、配置管理、Chef工具等。下面详细对它们进行描述。
分层的系统管理 系统管理的层次涉及到OS相关的三个层次。下面自下而上地简单描述一下。
制备管理：涉及到虚拟化层，这一层是资源表达层，目前所有主流的虚拟化都支持标准的Rest API，包括VMWare、EC2和Nuanix等。大多数主流配置管理工具都具备用于虚拟机生命周期管理（从生成、到开机、到删除等）的API功能，能按需的获得任何数量、规模、网络和操作系统类型的部署环境。 配置管理：在任何类型的操作系统里自动化的安装和配置软件包，将所有配置参数配置好以后，持续保持这些配置点的状态。对于简单应用，来说按配置参数启动服务即任务完成。 应用编排管理：对于复杂的分布式系统，由于各个自服务之间存在着依赖关系，所有自服务之前需要互通一些配置参数才能实现，应用程序整体的正常运行，配置应用服务器的odbc数据库连接，配置web前端的ldap认证服务器等等。目前微服务所涉及的服务发现和路由，是应用编排必备的配套设施。 不同的DevOps配置管理工具也都力求能覆盖以上三个层次，但是他们所追求的方向，或者想解决的主要问题并不相同。因此各个工具之间功能上有重叠。
因此在运用这些工具的时候，不仅要追求其卓越的功能，还要能意识到，并有意的在不同层面上做取舍。
基础架构即代码 IaC这个概念最早是被Chef这类工具提出并实现，它的基本想法就是让Ops人员象开发人员一样的，工作在基础架构的代码上，而不是面对着数十个图形和文字终端界面。使用类似于开发应用程序的方式，开发和管理基础架构环境，因此基础架构能通过API访问和操控是基础，目前所有主流的虚拟化/云计算平台都具备很好的API接口；可惜的是在传统的企业环境中，这些资源池的API功能几乎没有被用到。
像开发应用代码一样的管理IT基础架构，基础架构的开发和管理也需要遵循与应用开发类似的原则，这些原则包括：
一切从源代码开始:并对其进行严格的版本管理，要对基础架构变更，就需要对相应的代码进行变更和测试，最后发布这些代码。从而力求做到服务器的无人登录运维。 模块化设计:不同应用底层所使用的基础架构有着大量的相似之处，模块化的设计不仅意味着标准化，也意味着更少的重复代码。我所用过的Terraform、Chef和Puppet这三种工具，都具有高度的模块化特性。 抽象能力：能够使用不同的模块和参数对任何特征的应用进行建模，用IaC代码进行表达，基础架构的代码开发也就是借助这种抽象能力，将所有管理对象（配置管理项）具体化地描述为应用服务模型。编写出来的基础架构代码，不仅包含了所有对应用配置描述性的语义，而且还是能够被执行的代码，在IaC代码执行之后，你就得到了所期望的虚拟机、应用配置和应用服务。 可测试性：这是一个经常忽略的能力，而在了解之后，你会发现IaC也是编程语言，就是对基础架构进行高级的编程，而且IaC代码本身和它的运行结果都是可以测试的。在执行前对其语义语法测试，在运行以后对其运行结果测试。Chef在这方面表现的尤为突出。 配置管理 我可能是最早的一批进行ITIL配置管理实践，CMDB建设的这批人；我以前和甲方客户有着大量的关于配置管理和CMDB的对话，所经历过的项目也非常煎熬。而在DevOps场景下，感觉以前的经历也是很有意思的，只是我现在说到的CI，在没有特指的情况下，是持续集成的概念，还不是配置项了。
Process for establishing and maintaining consistency of a product’s performance, functional and physical attributes with its requirements, design and operational information throughout its life。</description></item><item><title>DevOps on Nutanix[Beta]</title><link>https://martinliu.cn/blog/devops-on-nutanix/</link><pubDate>Mon, 26 Feb 2018 11:08:53 +0800</pubDate><guid>https://martinliu.cn/blog/devops-on-nutanix/</guid><description>Nutanix是什么？中文名字是路坦力，是我目前所在的公司；我负责运营商行业以及与云服务商的合作业务，解决客户在售前、架构和DevOps等方面的问题，我是Nutanix Calm产品的专家。
之前也发过一些介绍Nutanix和超融合技术的文章，本文会是一篇持续更新的文章，我会把在Nutanix上开展超融合的方法，持续的更新在这里。
本文上属于Beta版本，会持续更新，欢迎各种类型的反馈信息，发邮件到： martin.liu@nutanix.com
变更日志：
2018-2-26，发表了相关概况介绍性内容 什么是DevOps？ 我的定义：DevOps是为了将软件开发、运维和质量保证等部门紧密地协作和集成在一起，而运用的一组成熟的、相互融合在一起的最佳实践。它使人们能准时/及时地生产软件产品或服务，从而满足企业的某个业务目标，开发与运维工作将在一个统一的目标之下协同工作，它是对IT组织内部各个角色之间的相互依存关系的一种新的理解。这个实践集合主要包含了四种最佳实践，如下图所示：
注意：上图里Nutanix的定位在持续交付，超融合平台能高速平滑的交付IT服务。
来自网络的其它定义还有如下。
定义2：You cannot buy DevOps and install it. DevOps is not just automation or infrastructure as code. DevOps is people following a process enabled by products to deliver value to end users. &amp;ndash; Donovan Brown, Microsoft DevOps Program Manager
以上出自：Donovan&amp;rsquo;s blog post on &amp;ldquo;What is DevOps&amp;rdquo;.
定义3：DevOps（Development和Operations的组合词）是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。
以上出自：维基百科 Wikipedia - DevOps
什么是HCI-超融合基础架构 我对超融合的定义：将计算、存储和网络这三种资源的至少两种融合在一起的技术就可以称之为超融合技术。Nutanix是将计算和存储融合在了一个系统只能，这里说的系统可以理解一个物理的机箱，并且在这个机箱里搭载了目前业内最通用的KVM虚拟化功能。Nutanix的超融合系统是开箱即用的IaaS平台，可以无节点数限制的水平扩展，能够支持服务器虚拟化、VDI、Oracle RAC等关键性数据库、企业核心业务系统、大数据和私有云等工作负载。在性能和功能上是专门为HCI而打造的。HCI技术正在颠覆着传统的三层架构技术堆栈（指的是：服务器-存储网络-集中存储）。</description></item><item><title>Devops Handbook《DevOps实践指南》简介</title><link>https://martinliu.cn/blog/devops-handbook/</link><pubDate>Sun, 25 Feb 2018 22:27:16 +0800</pubDate><guid>https://martinliu.cn/blog/devops-handbook/</guid><description>企业如何通过DevOps实践提高盈利能力，改善工作文化，实现卓越的生产力目标。如今这些高绩效管理技术比以往的任何时候都要更加重要，由于这对于企业的商业竞争力而言是至关重的，数十年以来，技术组织的领导者们始终在努力地维持这IT系统的敏捷性、可靠性和安全性。然后惨痛的案例依然比比皆是&amp;ndash;不论是healthcare.gov的崩溃，持卡人数据的泄露；还是在云计算环境中大数据的丢失。
然而，那些运用DevOps原则的高绩效企业（例如Google，Amazon，Facebook，Etsy和Netflix）则每天都可以在生产环境中成百上千次频繁地部署代码。那么DevOps理论、原则和实践到底是何等的殊胜呢？相信所有人在看了本书之后一定会得到答案。
通过数字看这本书 基础数据 原作者4人 Jene Kim是这本书的主要作者，他在出版了《凤凰项目》之后，开始与其他三位作者编写本书的。Jez Humble是《持续交付》的作者，是持续交付实践和概念的重要发起人。Patrick Debios是DevOpsDays大会的发起人，是他最早在Twiter是用 #DevOps 这个短标签的，是DevOps运动和社区的重要人物。John Willis是DevOps社区早期的推动者之一，曾任Docker公司生态系统发展总监。
译者4人 在我和人民邮电出版社联系并进行试译之后，组织了翻译小组。王磊和马博文是我这几年结识的DevOps圈内的技术大拿；曾朝京是IT管理领域的资深专家，是我的前同事。王磊的著作有《微服务架构与实践》；马博文翻译的书籍有《DevOps 实践》
刘征，Nutanix路坦力资深架构师。Exin首批国内DevOps Master和DevOps Professional认证讲师。持有红帽RHCA认证和AWS高级架构师认证。谙熟企业数据中心的IT服务管理。目前致力于推广DevOps相关的理念和实践，在DevOps社区中积极地参与培训和研讨会等活动，DevOpsDays大会活动在中国的核心组织者。
王磊，前ThoughtWorks首席咨询师，EXIN首批国内DevOps Master认证教练。较早倡导和实践微服务的先行者，著有国内首本微服务架构相关书籍《微服务架构与实践》一书。超过10年以上的软件行业经验，对服务化架构、持续交付以及DevOps转型等有丰富的实践经验，同时他也是西安DevOpsMeetup联合发起人，西安GDCR组织者，并译有《Ruby Gems开发实战》一书。
马博文, 前ThoughtWorks 高级咨询师，AWS助理架构师。曾从事多年web开发和DevOps，熟悉持续交付，微服务。参与翻译《Scala编程实战》、《DevOps实践》等书，是西安DevOps Meetup活动的发起人。
曾朝京，Micro Focus资深解决方案顾问，参加Exin首批国内Devops Master讲师认证培训。长期从事IT运维管理领域咨询工作，曾为能源、金融、航空运输、政府行业中的多个大型企业提供 IT 运维管理规划。目前致力于探索Devops理念在企业IT部门的实践。
翻译小组完成翻译，并提交给出版社的日期是2017年12月8日。
目录提前曝光 本书目前（本文的发布日期）正处于出版社编辑阶段。预计在五月份左右正式出版。下面是本书的目录。
序言 前言 导言：展望DevOps新世界 第一部分 三步工作法 第1章 敏捷、持续交付和三步法 第2章 第一步，流动原则 第3章 第二步，反馈原则 第4章 第三步，持续学习与实验原则 第二部分 从何处开始 第5章 选择合适的价值流作为切入点 第6章 理解、可视化和运用价值流 第7章 参考康威定律设计组织结构 第8章 将运维融入日常开发工作 第三部分 第一步：流的技术实践 第9章 为部署流水线奠定基础 第10章 实现快速可靠的自动化测试 第11章 应用和实践持续集成 第12章 自动化和低风险发布 第13章 降低发布风险的架构 第四部分 第二步：反馈的技术实践 第14章 建立能发现并解决问题的遥测系统 第15章 分析遥测数据以更好地预测故障和实现目标 第16章 应用反馈实现安全部署 第17章 将假设驱动的开发和A/B测试融入日常工作 第18章 建立评审和协作流程以提升当前工作的质量 第五部分 第三步：持续学习与实验的技术实践 第19章 将学习融入每天的工作中 第20章 将局部经验转化为全局改进 第21章 预留组织学习和改进的时间 第六部分 集成信息安全、变更管理和合规性的技术实践 第22章 将信息安全融入每个人的日常工作 第23章 保护部署流水线 行动起来 - DevOps手册总结 附录 附加资源 以上目录标题有可能在出版社的编辑过程中会有所调整。不过已经可以看出其主要内容。</description></item><item><title>DevOps工作三步法：第一步流动原则</title><link>https://martinliu.cn/blog/devops-first-way-flow/</link><pubDate>Wed, 21 Feb 2018 23:10:01 +0800</pubDate><guid>https://martinliu.cn/blog/devops-first-way-flow/</guid><description>本文内容主要来源于《DevOps Handbook》-DevOps实践指南，本文概述的原则是DevOps工作三步法的第一步，它的目标是先建立最底层的基础，即：DevOps技术实践和合理的应用架构；只有这样才能使工作快速而稳定地从开发端流动到运维端；与此同时还能保证不会给生产环境带来混乱，不会中断客户的服务。这就意味着需要降低在生产环境中部署和发布变更的风险。可以通过 持续交付 的技术实践来实现这个目标。
持续交付基于稳定的自动化部署流水线，团队能够使用自动化测试持续验证代码，确保代码始终处于可部署的状态，开发人员要保证每天都向主干提交代码，以及设计和实现有利于实施低发布风险的环境和软件架构。
在流动原则的指导下，需要开展的重要的工作内容如下：
奠定部署流水线的基础 实现快速、可靠的自动化测试 实现并实践持续集成和持续测试 通过自动化、架构解耦等方式实现低风险发布 以上技术实践能够有效地缩短创建类生产环境的前置时间。同时，持续测试可以为所有团队成员提供快速的反馈，使小型团队能够安全、独立地开发、测试和向生产环境部署代码，从而将生产环境的部署和发布作为日常工作的一部分。
此外，通过将QA人员和运维人员的任务集成到DevOps实施团队的日常工作中，能够减少救火、困境以及繁琐的重复劳动的发生，使团队成员的工作高效且充满乐趣。这不仅能提升团队的工作质量，还能提高组织的竞争力。
流动原则相关的详细技术实践请参考请《DevOps实践指南》一书的第三部分，这部分包含第10章到第13章，一共描述了5个技术实践。
在流动原则里我们强调的而是全局的目标而不是局部的目标，局部目标的例子如下所示：
特性开发完成率 测试发现/修复缺陷的比例 运维的可用性指标 我们需要减少价值流中的工作交接的次数，由于当交接次数多到一定程度时，所有人就会彻底的迷失，无法回答工作的上下文联系是什么？也不清楚我们要解决的是什么问题？或者组织的全局目标是什么？
价值流的应用实例 如果我们选择做DevOps转型的项目是棕地项目，我们就需要对当前的工作，进行细致的值流研讨和分析；需要画出当前的状态。如下图的示例所示（注：这是一个示例，你的棕地项目分析完之后并非如此）。
为了在实施DevOps的过程中持续的度量和改进，我们需要分析出当前价值流的核心定量指标：
总计前置时间 = 求和价值流中每个工作步骤里的LT 【这个指标是DevOps项目的北极星】 总计增值时间 = 求和值流中每个工作步骤里的VA 完成且精确百分比 = 连乘值流中每个工作步骤的%C/A 如果是绿地项目，我们在第一个工作周里，价值流图是没有这些数值的。我们需要每天都在CI/CD流水线工具中采集相关数据，在每个人的日常工作中关注和记录相关数据，在第二周和后续的每一周里度量和分析以上指标，最好用仪表板展示工具，将这些数据实时地显示在所有项目组成员都可以轻松看到的位置。
对这个价值流进行持续的优化，使它更高效的工作，并不断的进化和改进。如果是棕地项目，那么在分析完以上的机制流之后，可以定制新的进化版的价值流图，并按照新版本的价值流图重新开始项目的执行。如下图的示例所示（注：这是一个示例，你的棕地项目改进优化完之后并非如此）。
优化和改进日常工作 Goldratt博士的约束理论(TOC) 在实践运用流动原则的技术实践时，可以使用Goldratt博士给出的方法，随时识别并解决价值流中的约束点，这个五步法如下：
识别系统的约束点。 决定如何利用这个系统约束点。 基于上述决定，考虑全局工作。 改善系统的约束点。 如果约束点已经突破了，请回到第一步，但要杜绝惯性导致的系统约束。 以上五步法是DevOps实施项目组日常工作的必备流程优化工具。
常见的4个约束点 传统企业或者团队里最容易发生的约束点有一定的共性，一般可能会按照以下顺序逐个攻克和优化：
环境搭建 代码部署 测试的准备和执行 紧密耦合的架构 可以清楚的看到大多数约束点比较偏Ops这一侧，而攻克所有这些约束点需要Dev和Ops一起协作完成。
常见的9中浪费 在DevOps工作团队里需要尽快能地避免以下浪费现象的发生：
半成品 额外/多余工序 额外/多余功能 任务切换 等待 移动 缺陷 非标准或手工操作 填坑侠 以上浪费现象最早是从制造行业的精益管理中总结出来的，这些也是完全可以应用到技术价值流中，IT相关的工作能对每一条有很多痛点清晰的解读，你可以尝试在自己的工作环境中寻找以上所有浪费现象。</description></item><item><title>DevOps登山指南</title><link>https://martinliu.cn/blog/devops-climbing-guide/</link><pubDate>Tue, 20 Feb 2018 00:34:09 +0800</pubDate><guid>https://martinliu.cn/blog/devops-climbing-guide/</guid><description>全美互惠保险公司(Nationwide)美国公司。在2017年6月7日，《财富》2017年美国500强排行榜发布，全美互惠保险公司排名第68位。营业收入40074.1百万美元。
这家公司是DevOps Handbook（DevOps实践指南）书中的案例研究之一。这是一家DevOps水平较高的企业，是DevOpsDays大会上分享嘉宾的常客，也是各个DevOps工具厂商（New Relic）经常邀请的案例分享嘉宾。他们也经常参加DevOps企业峰会，曾多次做过自己的DevOps应用状况案例分享。
本文分析和整理了他们在2017年11月旧金山站DevOps企业峰会上他们的演讲，主题为《DevOps Handbook Experiments in Accelerating Delivery - Nationwide》（翻译：使用DevOps Handbook在加速开发交付的过程中的实验）
本文根据这个演讲的YouTube视频整理而成。视频已经上传到腾讯视频，点这里观看该视频。
DevOps登山指南手册 我在翻译DevOps Handbook的过程中，感觉书中所描述的这家公司的案例研究，并不像本演讲里所说的这样的精彩。
而时光已经很快的流转到了将近2018年，他们的DevOps也经过了几年的发展，本文案例向我们展示了一个金融行业（我们往往认为不太容易实施DevOps的行业）企业，在很大的企业规模了，所取得的令人敬佩的成就。
下面这张图是本文的精华，先给各位呈现出来。他们使用攀登珠穆朗玛峰做为比喻，对DevOps的实施做了生动的诠释。
本图在Nationwide公司内部的使用场景如下：
本图将DevOps实施核心团对指导产品开发团队（也可以说是业务团队、服务团队、这样的团队他们有200多个）取得的经验总结在一张纸上，供其它有实施DevOps想法的团队参考。 该登山指南简化了对其它非DevOps团队的教育和指引。 他们将DevOps的实施分成三个阶段，分别用大本营、北坡营地和顶峰作比喻。 这三个阶段里的技术实践都来自于DevOps Handbook，通过他们的筛选和整理，并根据自己的经验做了分阶段的规划。 为了知其所以然，我们将继续向下发掘，详细了解这个案例分享所讲的主要内容。下面的内容也包含了我对他们的分析和评论，欲了解原始资料，请请参看我上传到腾讯的视频。
主题：DevOps Handbook-在加速交付中的各种实验 分享者介绍。
这个演讲距2018年2月也就是三个月，还算是很新鲜的一个案例。Cindy是DevOps团队中的核心人员之一，她的头衔是Director，角色是夏尔巴人（后面会详细解释这个比喻的含义），为业务产品组提供内部的DevOps咨询和辅导。Jim属于业务条线/BU的Dev这一侧，他是业务部门的解决方案架构师。
Nationwide的核心价值：保护对你最有价值的 公司简介和状况。
在很多险种上Nationwide都在业内排名第一名，包括：宠物保险、农场保险、公司寿险等等。 这是一家有90年历史的老店 汽车保险也行业排名第八（后面就是用这个业务为例，来佐证DevOps实施的效果） 不光在财富500强企业排名68，还是财富所评选的前100个最佳的工作企业。 Nationwide IT的规模很大 IT组织的特点和相关数据。
IT组织庞大，结构复杂，业务条线众多 在选择应用某个DevOps实践的时候，总是要考虑到规模因素，需要评估该实践是否能在200多个业务开发团队的规模上全面地推广和实施 IT人员总数超过5100人，其中程序员和测试人员的数量超过2600人；在电脑世界的IT最佳工作地点的排行帮上位居第51名 该公司有用200多个产品开发团队，他们服务于23个业务部门BU Nationwide IT的组织结构 典型、复杂和庞大的组织结构
I&amp;amp;O是基础架构和操作运维团队，该组织不仅运维了所有的IT服务，还服务于所有的业务开发团队。 多个共享服务团队提供企业级的共享服务，包括Scrum测试等传统开发服务，同时也为企业内部的DevOps实践提供技术咨询，他们支持所有类型的企业应用堆栈 业务部门如前所述有23个，有200多个开发团队，Jim服务于金融业务BU 该公司的架构模型近似于典型的Dev、QA和Ops架构；他们的Ops组织也是集中式的；如此复杂的架构带来了DevOps流水线的复杂度方面的挑战，为某个业务BU实施的持续交付流水线会横跨多个BU，有时候甚至需要三个BU的CIO级别领导一起来参与决策，这里也会出现项目投资方和项目决策方不统一的难题。 从哪里开始 应用DevOps的企业环境背景和定位。
IT组织十年以来追求的战略目标：构建具有全球竞争力的内包式软件开发能力；为此而采用了不同的管理框架和实践，应用和开始的时间点也不同 Agile：敏捷软件开发是10年前就开始的，定位和目标是通过敏捷软件开发交付高质量的软件 DevOps：今年加入了DevOps实践，定位是如何实现速度、效率和降低风险。 Lean IT：定位是确保将IT管理的各种实践（包括以上的敏捷和DevOps）提升和推广到企业级规模。（他们认为在团队级别上任何敏捷和DevOps相关的实践都是很容易实现的，而企业级规模的推广是更高等级的管理，是不容易达到的） CMMI：使用行业规范的软件开发成熟度标准评价和考量自身的软件开发能力，为自身的不断提高提供标准参考。 该公司DevOps实践是最晚开始应用的，其它的三个方面使用的历史比较长了，为了达成一个战略目标，需要4个战术层面实践的支持，这些战术的采用时期和定位不同；4个战术从不同的侧面支持了战略目标的实现。该企业也在Lean IT的论坛上分享和演讲过。 从哪里开始（续） 应用DevOps的时间轨迹和历程，各个时期的关键词。</description></item><item><title>2017年底的回顾和展望</title><link>https://martinliu.cn/blog/post-of-year-2017/</link><pubDate>Mon, 12 Feb 2018 13:04:30 +0800</pubDate><guid>https://martinliu.cn/blog/post-of-year-2017/</guid><description>农历年才是中国人意识里的年，狗年不到来，鸡年绝对还没有过完。在这几天里总有一些想要总结和展望的。一年的时间过的犹如白骥过隙一般，愈来愈加明显的感觉到各种岁月的痕迹。此刻所想到的一切只有缓慢和宁静，能否让这个世界缓慢和宁静下来。
盘点 想想去年这一年都做了什么事？都去过哪些地方？有哪些值得回忆的经历？
旅行 回顾一下才发现这一年去过不少地方，很多地方是第一次去。
1-日本（春节） 去年的第一个旅行是在过年期间去日本的东京大阪之旅。首次去日本的总体感觉还是不错的，住的是Airbnb的家庭房间，位置和环境都非常好。游玩了福建狐狸大社、在奈良的东大寺喂小鹿、游玩了大阪的迪士尼，日本好玩好逛的地方真多。
不过印象最深的还是两件事：1）京都的鸭川河边跑步十公里；2）在大阪的烧肉店和朋友一起和热清酒。
2-吉隆坡（三月） 这次是出差，公司在吉隆坡开会，顺便带了小孩一起去玩，赶在上小学之前能玩的机会不能放过。在这一周的行程里，不仅游览了市区主要的地方，还去珍拉丁湾的CloudMed故地重游了一下。
3-普吉岛的泼水节（四月） 去普吉岛开会期间，碰巧赶上了泼水节。除了一头一尾的两天休闲时光之外，其它的三天会议时间，非常消耗精力和体力；完全是三天的黑客马拉松式的比赛式培训。代表中国团队上台做了项目汇报演讲，虽然有些超时，虽然没有拿到第一名，不过整个竞赛的体验还是很不错的。
4-拉斯维加斯和大峡谷之旅（八月） 这是出差去美国参加公司的年度启动大会。这是一次极致的旅行，在拉斯维加斯的几天会议过程中，和同事一起各种的购物和游览，给我的赌场之旅画上了圆满的句号。而精彩的部分在开完会之后，和同事们一起去大峡谷的游览。
我们住在大峡谷南缘的威廉姆斯小镇上，来过的人应该都知道这个小镇，对大峡谷南缘的主要景区进行了两进两出的深度游览。希望下次来的时候，可以从东部的羚羊峡谷北上，再次访问我的第一个美国旅行目的地：盐湖城（2006年）。
5-台北深度一周游（8月） 从美帝回来之后，接着去台北参加了DevOpsDays台北站的大会。趁着开会之余的时间和随行的朋友们一起游览了台北市和附近的不少地方。第一次去宝岛台湾，第一次在国外的城市参加DevOpsDays大会；参加这次大会有两项任务：1）作为国内专家团的邀请人，邀请了多位业内的DevOps大拿同去台北演讲；2）我的专题演讲是在第二天；真是圆满的一次旅行。台北的101大厦、故宫和诚品书店给我留下了深刻的印象。
DevOps 这一年中除了工作之外，我主要的研究方向是在DevOps上。参加了两次DevOpsDays大会，完成了DevOps Handbook的翻译。
1-DevOpsDays北京 大会在三月十八日召开，这是在我拿到Exin DevOps Master自由讲师资质以后，所参加的最重要的一个DevOps大会。我也是很积极的参与在这次大会活动里，主持了OpenSpack开放空间环节。这个大会是DevOps社区比较正宗和原生的社区大会，我也是第一次见到了DevOps之父Patric先生。
在这两天的大会活动中，我们都可以感觉到DevOps社区的火热，由于是DevOpsDays大会的首次来华；它的象征性更大于其它的任何意义。
通过这次参与首届DevOpsDays大会活动，我感觉找到从技术和社区这两个方面而言，找到了和我匹配最佳的社区。我的工作经历是ITIL相关的IT管理背景的，技术方面接从事最多的是IT管理工具和云计算；而我也是开源技术社区的超级粉丝。
2-翻译 DevOps Handbook 这是2017年内我投入巨大的一项工作，从来没有想到工作量是如此的惊人，即使是和其它三个朋友一起做；最后回顾一下，觉得工作量还是远远超出了我的想想。
出版社的线上书稿编辑系统里，有大部分工作时间的统计，经过了不计其数的起早贪黑以后，我的线上系统内工作时间定格在了：278小时44分钟；这份工作让我记忆犹新的是：周末送孩子去上课以后，我在星巴克度过的n多个上午；在交稿前的最后几次令人抓狂的集中修订。出版社审稿通过，编辑开始编辑审稿之后，看着三审作完之后的结果还是觉得分外激动的。
这本书的中文书名为《DevOps实践指南》，为这本书我建立了一个独立的推广站点：https://handbook.martinliu.cn/，站点里的术语表非常欢迎大家的引用和协作修订。
3-DevOps培训课 由于这一年中我几乎所有的业余时间和精力都花在Handbook的翻译上，因此接的课很少，甚至于还推掉了不少的课；在翻译完成之后，应该有时间在周末做这方面的培训了。
培训课对我而言是我进行社区分享的一种形式，觉得很多知识和经验的体会，如果不通过什么渠道分享出来的话，始终会就觉得不尽兴，觉得白学了这些知识。也有可能是开源社区 开放和分享 的毒中的太深了，哈哈！
展望 虽然在感觉上2017年一晃就过去了，但是盘点之后发现，过得还是极度的充实和饱满的。觉得我的付出和辛苦还是很值得。
在元旦之后我就确定了今年的总基调：停止开始，开始完成，继往开来，全面开挂。
我在DevOps方面的经验完全能够利用到公司的产品和工作中，这一点实在是可遇而不可求的。随着公司对Nutanix Calm的重视，基于蓝图的应用全生命周期自动化运维，正渐渐的成为很多项目的需求。为此我也建了一个文档分享站点：https://nutanix.martinliu.cn/；希望在新的一年里继续丰富和优化这些文档。在客户项目和合作伙伴培训的过程中能和更多人碰出DevOps火花。
在旅行方面，18年可能会去欧洲，还没具体的计划。
在新领域探索方面，18年已经开始了对区块链的了解和参与。
在18年里作为中国DevOpsDays大会的核心组织者，希望在5月北京站的大会上，和Handbook的作者一起发布中文版Handbook图书，并在DevOps社区里做更多的分享和贡献。</description></item><item><title>Container Orchestration Wars</title><link>https://martinliu.cn/blog/2018-1-container-orchestration-wars/</link><pubDate>Fri, 12 Jan 2018 23:33:32 +0800</pubDate><guid>https://martinliu.cn/blog/2018-1-container-orchestration-wars/</guid><description>容器编排器之战 K8s在2017年底为这场速战速决的站点话上了句号，结果是所有竞争对手都选择了增加对K8s的支持。在各自的编排器框架里内置了K8s。本文是根据Mesosphere公司的大拿Karl KARL ISENBERG在各种大会上分享过多次的一份演讲稿改版的。
KARL ISENBERG 是谁？ 所在公司?
Mesosphere（当前） Pivotal 做过的产品?
DC/OS opensource CloudFoundry BOSH 联络信息：
github.com/karlkfi twitter.com/karlkfi linkedin.com/in/karlkfi karl.isenberg.us 基础架构的进化 传统的应用架构在逐渐向下面两种架构演变。
可扩展的单体应用架构 关键词：
Online 基于互联网 Latency Routed 用户访问基于延迟路由 Multi-Region 多区部署 Load Balanced 负载均衡接入 Multi-Zone 多个Zone Replicated 应用实例多副本 Auto-Scaled 容量自动化收缩 Data Replication 区内数据多副本 Data Synchronization 跨区数据同步 可扩展的微服务架构 上图出处：Wheel of Doom ，来自A Journey into Microservices by Hailo
应用+裸金属服务器 APPLICATION PROVISIONING ON BARE METAL</description></item><item><title>Host a Hugo Server on Labtop</title><link>https://martinliu.cn/blog/2018-1-host-hugo-server-on-labtop/</link><pubDate>Thu, 04 Jan 2018 07:33:32 +0800</pubDate><guid>https://martinliu.cn/blog/2018-1-host-hugo-server-on-labtop/</guid><description>将笔记本上的Hugo站点分享给局域网里的其他人 我的笔记本上有好几个Hugo做的静态的站点，有自己的个人Blog，有公司产品的培训文档；其中的有些站点内容，有可能是不方便发布到Internet上，有可能是你的观众并没有条件访问Internet，但是使大家同在一个局域网里是一个很现实很方便的做法。那么怎样以最小的代价实现这个需求呢？
选择Hugo服务器启动参数 为了满足以上需求，在启动Hugo服务器的时候需要增加两个参数，如下所示：
martin@bogon:source/martinliu-hugo ‹master*›$ hugo server --bind 192.168.1.107 --baseURL http://192.168.1.107/ Started building sites ... Built site for language en: 0 draft content 0 future content 0 expired content 387 regular pages created 1100 other pages created 0 non-page files copied 668 paginator pages created 509 tags created 37 categories created total in 922 ms Watching for changes in /Users/martin/source/martinliu-hugo/{content,static,themes} Serving pages from memory Web Server is available at http://192.</description></item><item><title>Kubecon 2017演讲稿和视频下载</title><link>https://martinliu.cn/blog/2018-1-kubecon17/</link><pubDate>Wed, 03 Jan 2018 00:00:00 +0800</pubDate><guid>https://martinliu.cn/blog/2018-1-kubecon17/</guid><description>KubeCon 2017演讲稿和视频下载 Kubernetes无疑当下最火热的技术之一，Google公司围绕着它下了更大的一盘棋CNCF。这是在国际寡头IT软件公司的统治局面渐渐退去之后，各种新鲜技术百花齐放了一段时间以后，再通过CNCF的形式又逐渐集中化起来的趋势。KubeCon的人气很旺，演讲分享的人很多。
最近一次的KubeCon，2017年在奥斯汀站的演讲稿和视频下载的清单已经发布出来了：
https://github.com/cloudyuga/kubecon17
我在YouTube里听了一部分视频，感觉确实有很多新鲜的工程实践经验的分享。下面分享一个觉得不错的实战案例分享。
Box公司分享持续交付实战经验 关于这个分享的看点：
Box公司全面实施Kubernetes的案例，涵盖了所有的环境：Dev、Staging和Prod 遇到的挑战和问题共性强 Jenkins流水线+金丝雀部署+持续交付的组合 解决问题的模式值得借鉴 工具集里开发出来的核心组件已经开业分享在Github上 分享者经典语录：
我们是软件工程师，我们不是坐在那按按钮的猴子！
以上分享的持续交付方案里kube-applier的源代码分享：
https://github.com/box/kube-applier
PS：非常敬佩这种开放和分享的工程式文化。很符合开源的精神，爱分享的人，不把东西分享出来的话可能会不爽。
延伸阅读：
https://blog.box.com/blog/introducing-kube-applier-declarative-configuration-for-kubernetes/ https://blog.box.com/blog/kubernetes-box-microservices-maximum-velocity/ 观看以上演讲视频</description></item><item><title>用跑步的方式启动2018年</title><link>https://martinliu.cn/blog/2018-1-kickoff/</link><pubDate>Tue, 02 Jan 2018 15:57:54 +0800</pubDate><guid>https://martinliu.cn/blog/2018-1-kickoff/</guid><description>用跑步的方式启动2018年 元旦这天早晨送女儿去中国儿童艺术剧院看剧，这正好是我跑步的大好时机。正好是一个大晴天，这样的蓝天岂能辜负。环绕故宫的路线是一根长了很久的草，今天总算可以拔除了。于是我从东华门开始往北，沿着逆时针方向开始跑。下面是这次的跑步路线图。
跑步路线评价 东华门一侧向北的路上，直到故宫西北角的角楼；刚开始游客和行人还不是很多，但是到了故宫博物院的北门，哪里的游客非常多，需要躲开行人往前跑；在10点以后的时间里，保证你想跑也跑不快，人确实是比较多的，而且正好赶上了元旦这一天。听说有9万人在天安门广场观看了升旗仪式。
故宫的西侧南长街这条路是很窄的人行道，由于也是有不少游客，我后半程是机动车上和机动车流逆行了一段跑的，虽然有点危险，不过机动车开得都不快，也在明显的躲让这行人，跑后还是感觉还是不建议这么跑。
到了长安街以后，我想从天安门广场门口跑过，也就是从天安门的西边跑到东边，结果发现其实西边和东边以及广场周边都是设置了安检，如果没有带身份证的话根本就走不过去。在天安门站西的安检门口排了5分钟队以后放弃了。接着过马路到路西想往东跑，结果也比警察截住赶走了。无奈只能继续往南跑，从人民大会堂西路，途径前门大街和正义路，又回到了长安街。还不死心，企图混过东侧的安检抵达天安门城楼下，未果。然后继续沿着南池子大街跑到了起点。
如果没有带身份证，根本无法接近天安门城楼下和进入天安门广场以内 如果在节假日里，安检排队的等候时间应该是是10到30分钟以上，根本不适合在跑步的过程中有安检的环节，不是么？ 整个一圈下来，觉得道路上主要是游客居多，如果是跑步圈地，圈名胜地标的想法，还可以跑，不是的话，还是去其它的跑步地点吧 最后 在东华门终点附近，排了两张故宫外侧的图片。
2018年必须是一个不平凡的一年，我将这一年的基调定义为：停止开始，开始结束，全面开挂！</description></item><item><title>2017DevOps企业峰会旧金山站</title><link>https://martinliu.cn/blog/2017-does-sfo/</link><pubDate>Thu, 28 Dec 2017 00:00:00 +0800</pubDate><guid>https://martinliu.cn/blog/2017-does-sfo/</guid><description>DevOps Enterprise Summit由美国的Gene Kim发起并举办的，他是两本流行书籍的作者：《凤凰项目》和《DevOps Handbook》（中文书名《DevOps实践指南》预计于2018年春季出版）。
大会简介 下面是来自这个大会官网的简单介绍：
DevOps Enterprise Summit is a conference for the leaders of large, complex organizations implementing DevOps principles and practices. The event programming emphasizes both evolving technical and architectural practices and the methods needed to lead widespread change efforts in large organizations. The goal is to give leaders the tools and practices they need to develop and deploy software faster and to win in the marketplace.</description></item><item><title>为Docker Swarm群集配置Nutanix持久存储</title><link>https://martinliu.cn/blog/nutanix-dvp/</link><pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/nutanix-dvp/</guid><description>本文介绍如何用Docker卷插件的方式，给Docker Swarm的群集挂载Nutanix存储。Nutanix Container Volume Plug-in 简称DVP，可以给容器提供数据持久化的功能。
本文使用ownCloud网盘应用做功能测试。测试的过程如下，安装部署Docker Datacenter，配置好群集，在UCP的界面里调用DVP插件建持久的数据卷，建立ownCloud服务，部署和测试该服务。
Nutanix DVP (Docker Volume Plug-in)安装和配置 这一部分描述DVP的安装部署过程，需要连接互联网；安装调试完毕之后，作虚拟机的镜像模板使用。这样Docker Swarm的其它节点也都不需要重复这个步骤了。
本文使用的是Docker社区文档稳定版 17.03.1-ce ；本文使用的OS是CentOS 7.3。所Docker安装的版本如下：
[root@centos7-temp]# docker version Client: Version: 17.03.1-ce API version: 1.27 Go version: go1.7.5 Git commit: c6d412e Built: Mon Mar 27 17:05:44 2017 OS/Arch: linux/amd64 Server: Version: 17.03.1-ce API version: 1.27 (minimum version 1.12) Go version: go1.7.5 Git commit: c6d412e Built: Mon Mar 27 17:05:44 2017 OS/Arch: linux/amd64 Experimental: false [root@centos7-temp]# rpm -qa|grep docker docker-ce-17.</description></item><item><title>Tips for Docker on Mac</title><link>https://martinliu.cn/blog/tips-for-docker-on-mac/</link><pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/tips-for-docker-on-mac/</guid><description>Tips for Docker on Mac 在macOS上使用Docker很长时间了，本文总结一些我不想忘记的tips，方便自己反复使用的同时，也顺便总结分享一下，留下本文作为长期更新的备忘录。
搭建私有镜像库 运行一个本地镜像库
$ docker run -d -p 5000:5000 --restart=always --name registry registry:2 这条命令会从docker hub 下载 registry:2 镜像，在本机运行一个镜像库服务。
下载一个测试用的镜像。
$ docker pull ubuntu:16.04 给这个镜像打上私有镜像库的标签
$ docker tag ubuntu:16.04 localhost:5000/ubuntu:16.04 push这个测试镜像到本地的镜像库
$ docker push localhost:5000/ubuntu:16.04 这时候你会发现我的本地这样岂不是有了两份相同的镜像了，有这个必要么？是不是多余了？下面几个场景中会用到：
当你用docker-machine在本机启动1个vm的时候，你运行任何docker run或者docker-compose up的时候你可能需要一个之前在本地就有的image，这是一种分享本机image给docker-machine vm的一种方式。
当你用docker-machine在本机启动多个个vm的时候，你可能会把它们作出docker Swarm群集，当你在这个群集上启动一个服务的时候，docker compose文件中的镜像地址可以引用这个本地地址，引用地址类似这样 image: 192.168.99.1:5000/influxdb
当你用 minikube start启动了一个minikube的vm的时候，你可能也需要本机的docker镜像，尤其是在你做demo的时候，这是最快的下载途径。 需要注意的是，以上三种情况都需要指定一下&amp;ndash;engine-insecure-registry 192.168.99.1:5000 这个参数。
自动化创建Docker Swarm群集 在我的文件目录中存放着这个脚本
cat create-swarm.sh docker-machine create manager --engine-insecure-registry 192.168.99.1:5000 docker-machine create agent1 --engine-insecure-registry 192.168.99.1:5000 docker-machine create agent2 --engine-insecure-registry 192.</description></item><item><title>关于DevOps 的那些事</title><link>https://martinliu.cn/blog/something-you-must-know-about-devops/</link><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/something-you-must-know-about-devops/</guid><description>DevOps是孕育于敏捷社区，又反哺给整个IT技术行业的，是一次彻底而全面的技术和文化运动。本文从它的出处谈起，一直描述到当前国内的现状。最后总结了相关的核心技术和主要实践。
DevOps简史 在2008年多伦多举办的敏捷大会（Velocity Conf 2008 ）上，Patrick DeBois 和AndrewClay Shafer 先生首次提议讨论“敏捷基础架构”这个话题。在第二年的敏捷大会上有一个具有里程碑的意义技术分享，来自Flickr公司《每天部署10次》的分享，它激发了随后Patrick DeBios在同年十月，在比利时的根特市举办的首届DevOpsDays活动，这个活动是两天的日程，为了大家方便在twitter上的传播，人们把DevOpsDays这个词简写为 “#DevOps” 。 此后，“DevOps”一词问世了，这个词所包含的理念和实践一时在越来越广大的人群中产生了共鸣，随后成为全球IT界在各种大会和论坛里热议和讨论的焦点话题，很多大型IT论坛也都开设出了DevOps专题讨论。这就是DevOps这个词的由来。DevOpsDays活动随后在Patrick DeBios等相关核心发起人的推动下，在全球范围内蓬勃发展了起来。2010年在美国山景城(Mountain View) 举办的DevOpsDays 活动中，Damon Edwards先生使用“CAMS”这个缩写，高度概括和诠释了DevOps，即文化（Culture）、自动化（Automation）、度量（Measurement or Metrics）和分享（Sharing）。随后Jez Humble先生将“L”精益 (Lean) 原则也加入其中，最终变成了CALMS。
Culture（文化）- 是指拥抱变革，促进协作和沟通 Automation（自动化）- 是指将人为干预的环节从价值链中消除 Lean（精益）- 是指通过使用精益原则促使高频率循环周期 Metrics（指标）- 是指衡量每一个环节，并通过数据来改进循环周期 Sharing（分享）- 是指与他人开放分享成功与失败的经验，并在错误中不断学习改进 “CALMS”完全吻合Patrick DeBois先生所一向倡导的“DevOps is a human problem” (DevOps 是关于人的问题) 的理念 。
DevOpsDays活动的现状 从DevOps概念的产生，到如今它在全球范围内的蔓延和认同，已经经历了9个年头的时间。它的火爆推广也伴随着IT行业的迅速变迁和发展，现在已经到了移动互联网时代的后半场，国内的信息化建设已经完成了很多年；如今各行各业的企业也都亟待完成全方位的数字化转型。IT信息技术的先进程度标志着一个企业的核心能力，任何一个成功的企业，敏捷高效的软件开发创新实力和IT管理综合能力不只是门面而已，而是实实在在的市场竞争能力。DevOps倡导打敏捷、持续交付和ITIL三种实践的组合拳，同时应用精益生产理念为基础的管理思想，这正在逐渐地被广泛的接受和认可。
在过去的几年中，国内的各种IT大会也蓬勃发展，其中DevOps相关的专题和分会场也颇受人们的关注。各种云计算、运维等IT技术的社交媒体也都非常重视DevOps这个话题的分享。一个专属于DevOps社群的、国际性的、有影响力的DevOps大会正呼之欲出。在这样的时代背景下DevOpsDays大会北京站在2017年的3月18日来到中国，在同年的8月18日上海，还要举办DevOpsDays Shanghai站的大会。
下面列举一些DevOpsDays大会的相关数据，数据来源于DevOpsDays.org 网站。从2009年到2016年，已经在全球的61个城市/国家成功地举办了117场。
下图是在过去九年中DevOpsDays大会在各个城市/国家的分布和举办次数。
今年也就是2017年预计举办30场，其中已经有18场确定了举办城市和日期；还有12个城市的召开日期待定；这不包括年内还可能会提出申办的城市。以上数据的统计时间在2017年三月。
DevOps在国内的现状 随着国内BAT等互联网巨头的崛起，互联网公司的开发运维经验也越来越多的在国内的各种技术大会上传播。从最近这两年（2016年和2017年）的技术活动日程中可以看出，国内互联网从业人员也不约而同的用DevOps来定位和分享自己的优势和经验。他们是传播和分享运维侧DevOps实践的先头部队。
出了技术论坛的分享之外，很多线上线下的大会、论坛和讨论组也都越来越热议DevOps这一专题。国内其它相关流派的人群，例如敏捷和精益等，也对DevOps的蓬勃发展表示比较惊讶，DevOps与老牌的敏捷和精益等阵营也产生过一些争论。但这一切的发生也都增加了人们对于DevOps的更深入的兴趣。
在培训认证这方面，Exin DevOps Master是一个国际认证的培训；其它公司和组织也正在举办关于DevOps工具链的培训，这些培训则注重于技术实操，关注在构建端到端的流水线的搭建方面。从DevOps的职位招聘方面，可以看到DevOps工程师相关的职位越来越多了，在职位需求中DevOps这个技能成了加分项，DevOps相关工具的技能也或将成为简历的亮点。在IT行业内不管是开发还是运维团队的人，都开始了学习和接受的过程。
据我观察DevOps方面的厂商在最近3年呈现爆炸式的发展。我把他们分为三类：
搭顺风车型：主要是指所有CaaS容器云平台厂商 。Docker是它是在DevOps的时代背景下产生的，是DevOps技术工具集里不可缺少的一员。国内这些厂商目前的数量在20左右，数目趋于稳定。由于今年（2017）Docker公司商业化版本和开源版本正式的划分开来，这些公司的发展可能或多或少受到一些影响。 直奔主题型：这类厂商专注于开发端到端的、用户体验良好的DevOps流水线平台，这些公司的创始人团队多是来自于BAT公司，因此具有很好的DevOps实战经验，他们开发的产品在持续交付和流水线功能上恰好填补了当前企业在这个方面的工具和技术实践的缺位。目前这类公司的数量还不多，数量呈上升趋势。 BATH型：BAT大家都知道，这里的H指的是华为，这些企业在DevOps平台方面都表现出积极的技术输出的态势。BAT是基于过去的互联网运维的经验做DevOps的产品化。华为是成了独立的研发部门，招募业内这方面的精英前来助阵，打造出一方面可以自用，同时也可以商品化的DevOps产品。 目前国内大部分企业慢慢地开始关注了DevOps，大型传统企业也开始逐渐地从各个角度做试点和尝试。试点的角度和方向各不相同，有的从底层基础架构的容器化开始，有的从交付部署流水线的自动化开始；总的来说还处于初级的尝试阶段，还没有大规模成体系的推广。
综上所述，目前国内DevOps发展的阶段还属于起步阶段。就像是ITIL/ITSM在2003年左右的状态。由于DevOps是去中心化的，所以没有唯一、权威的上游厂商的存在，各种理论实践的争执和PK都将终止与解决问题和提高效率的话题上，因此它具有百花齐放百家争鸣的发展条件。个人认为DevOps的实施和落地也不会完全依赖于传统的大型咨询厂商的咨询工作，由于它应该是在企业的内部，在内驱的作用下，自生长出来的；它必须是服务于企业的业务价值流的优化，加速业务价值产出的；而与之相关的工作和责任的担当，外部力量是很难以等量替换和承担的。
核心技术和工具 在谈这个话题前先看一下DevOps相关工具集的全貌，如下图所示：</description></item><item><title>切换到Ghost+七牛</title><link>https://martinliu.cn/blog/welcome-to-ghost/</link><pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/welcome-to-ghost/</guid><description>在经历了一个很长的周期之后，我的blog又回到了最原始的状态。很早以前学习网页开发的时候，用写字板编写html代码，后来是Asp，工作以后是用Blogspot，之后是WordPress，然后是Jekyll+github，现在是Ghost+七牛。
4个拐点
我的blog经历了四个转折点，下面稍微说下，为啥选择了某个平台，为啥后来又放弃了。
免费博客平台：最初我试用了几个国内外免费的服务，最后发现Blogspot的体验要优于其他所有平台，而且具备一定的定制能力，还没有广告。然后就一直用到了Blogspot被墙的时候，那时候我还没有买域名。记得MSN的Space也用过，如果你没有用过MSN的话，当我没说这句话。总之免费blog空间的弊端就是，你码的字和图片是给别人的，不属于你自己，没有延续性。 WordPress：是我用的时间最长的平台，它的好处是可以host在任何php虚拟空间和云主机上；优势就是功能强。曾经浪花费了大量的时间，在测试和感受各种插件和皮肤上。而且WP的搬家工作也容易，因此换了很多个空间，一共有多少个主机空间现在已经都忘了。放弃WP的原因：维护LAMP堆栈的工作量还是有的，即使在PHP的虚拟空间里，这个系统的优化工作还是持续不断的要做的，否则网站速度会很慢，而且时快时慢，网站的访问性能其实无法保证。因此在这个过程中必须使用CDN服务，七牛的wp插件是我用的最长时间的，因此我早期的blog的图片都在七牛上，它给我了一个备份和加速图片的福利。性能不稳定，页面打开速度慢是放弃它的主要原因。 Jekyll+GitHub：选择这个组合，开始于我重度使用Github的时候。而且macOS上安装Jekyll这种静态blog程序很方便，捣鼓起来之后，就感觉比WP方便简单直接多了。发现这个方式非常轻量和简洁。而且Github.io的免费静态网站host服务还支持自定义域名。因此，我做了把之前所有WP的文章导出为MD格式文档的数据迁移工作。由于之前WP文章里的图，已近都存放在七牛里了，因此这次我做了一个出乎意料敏捷轻松的转身。使用过程中，逐渐发现了Jekyll的各种不足，界面和格式的定制工作还是有的，即使用几十刀买的皮肤都会让你用到难以忍受，毕竟不是想developer那样天天写代码，也逐渐感到Jekyll的简洁变成了简陋。代码定制的工作量和难度大是放弃它的主要原因。 Ghost+七牛：其实早就瞄上Ghost了，可是一种没有下决心换。直到最近我开始把Ghost安装在Mac OS的笔记本电脑上，发现在本机编辑和维护文章资料，速度飞快，和以前WP在线编辑简直是天壤之别。如果Ghost应用跑在自己的笔记本电脑上的话，既可以离线工作，像之前用Jekyll+Github组合一样，也更可以不需要购买任何虚拟主机和空间了，在本机离线工作的速度和效率好，而且稳定太多了。 buster这个程序是这次切换到Ghost的催化剂，它可以把Ghost网站的全站导出成静态文件，线上就只需要一个CDN空间了。七牛的qshell工具可以方便地把本地的静态网站文件夹，同步到CDN的buckte存储中。切换到这个方案的原因是：网站变为纯静态网页，全站html/css和图片全面上CDN，配置全球加速网站域名，享用七牛的免费套餐。 下面花一点篇幅介绍一下目前的blog环境细节。简单地说：目前是在笔记本上跑Ghost服务器，这样就省去了云主机和虚拟主机空间的需求，把ghost的站点导出为静态网页和图片，然后增量地上传到七牛的CDN上去。 Ghost本地安装
我的操作系统是MacOS，用的是2017款MBP。
先安装node.js，进入https://nodejs.org/en/ 在网站的首页上就可以下载到安装包，下载安装即可。也可以用 brew 安装。安装完了以后就获得了 npm 包管理程序。
之后参考https://docs.ghost.org/v1.0.0/docs/install#pre-requisites 的文档安装 ghost-cli ； 然后用ghost的命令行来实现ghost程序的安装和升级。
用ghost-cli安装ghost服务器的时候，要选择local的方式，它会使用sqllite作为数据库，这样做管理和维护Ghost应用栈的工作就都在本地了。
ghost服务器的初始化 ghost install local 这个命令会问你几个问题，全都用默认即可。安装完之后就可以看到服务器运行的状态了。
martin@mbp ghost status Process manager 'systemd' will not run on this system, defaulting to 'local' │ Name │ Location │ Version │ Status │ URL │ Port │ Process Manager │ │ localhost │ ~/source/ghost │ 1.</description></item><item><title>用Minikube体验单节点K8S</title><link>https://martinliu.cn/blog/install-minikube-k8s/</link><pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/install-minikube-k8s/</guid><description>Minikube为各种操作系统的开发者，提供了运行K8S最简洁的方式。它最小化了安装k8s的需求和工作量。而且在各种操作系统上可以实现相同的体验。本文用精简的语言，描述了从安装minikube到运行容器化应用的过程。主要命令和输出来自macOS。
安装Hypervisor 需要在任何笔记本或者工作上安装一个Hypervisor，因此首先你需要坚持电脑的CPU是否开启了虚拟化的支持，检查BIOS的VT-X或者AMD-v的配置。
OS X，安装 xhyve driver, VirtualBox 或 VMware Fusion Linux， 安装 VirtualBox 或 KVM Windows， 安装 VirtualBox or Hyper-V Minikube会生成一个虚拟机，用于运行一个安装和部署好的k8s单节点系统。
安装kubectl kubectl是k8s系统的管理工具，是一个命令行工具，它用于和master交互，完成群集和服务的管理等工作。
kubectl的安装文档： https://kubernetes.io/docs/tasks/tools/install-kubectl/
在macOS上最简单的安装方法是下面这条命令：
brew install kubectl brew的好处是后续可以帮忙持续的升级。
其它非brew安装方法，见以上安装文档的 Install kubectl binary via curl 部分。
安装 minikube 在macOS上使用的默认的Hypervisor是VirtualBox，如果想要用xhyve需要在启动的时候加上参数 --vm-driver=xhyve
安装最新版本的 minikube 需要参考这个网页 https://github.com/kubernetes/minikube/releases
minikube 是一个命令行工具，它的命令行参数如下：
Minikube is a CLI tool that provisions and manages single-node Kubernetes clusters optimized for development workflows. Usage: minikube [command]</description></item><item><title>奔跑在西安的城墙上</title><link>https://martinliu.cn/blog/running-on-xian-city-wall/</link><pubDate>Tue, 12 Sep 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/running-on-xian-city-wall/</guid><description>来西安出差很多次了，每次都想绕城墙跑一圈，后来也不止一次看到其他朋友，要么绕城跑，要么在城墙上跑过；因此这根草也就越长越高，这次跑步的动力主要是拔草。
从上图可以看出，绕城一周的距离是13.49公里，西安的城墙东西方向长，所以是一个比较扁的长方形。我是下午7点钟开始跑的，如果稍微晚几分钟到西门的话，售票处就会关门，我就错过了此次城墙上奔跑的机会，门票是45元，可一天中多次上下城墙使用。幸亏我从酒店（城西的老喜来登酒店）骑着摩拜及时赶到。
城墙上的地砖较硬度比较大，建议穿缓冲好的鞋。7点半以后，天就彻底黑了，城墙上没有路灯，我有四分之三的距离感觉是摸黑跑，虽然路面是清晰可见的，不过在路过上下斜坡和台阶的时候，还是要加倍小心，毕竟安全第一。
上图除了中间一张城墙砖的图片以外，其余的8张都是我用手机拍的。我想留下真实的时空的记忆。从左中的西门开始，我的路线是顺时针跑的，跑到北门，也就是上中的那张图，天就黑彻底了，完全失去了自然光。我在东南西北的城门都拍照了。在四个角楼也拍了。
下图是在南门城墙上，往北拍的鼓楼，这个方向的路是西安城的中轴线，这个距离是城墙上离鼓楼最短的距离。也就是800左右的距离。
总结 这次跑步并非是纯粹的拔草之旅，城墙给我们的历史感和沧桑感是非常强烈的。在这个城墙上跑一圈，你大概能够回想起秦黄汉武的盛世，能够想到玄奘西天取经等经典历史片段。感觉朝拜华夏文明历史的意义大于跑步健身。不过也要感谢跑步的习惯，否则没有这么强烈的仪式感，自己的身体和精神也就不会有这么强烈的冲击。这样的文化之旅，的确值得强烈推荐给所有跑友。</description></item><item><title>台大校园游览跑</title><link>https://martinliu.cn/blog/ntu-running/</link><pubDate>Sat, 09 Sep 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/ntu-running/</guid><description>趁着参加DevOpsDays Taipei的机会晨跑台大校园。在台北的这几天总体感觉是非常好的，和很多大陆来的好朋友一起，愉快地玩耍了几天。只跑了这一次，算是前往台大打卡留念吧！
下图算是台大的东门，校门并不是很大，可是进去之后，看到了纵贯南北的校内大路的时候，才会有豁然开朗的感觉。
下图就是中午的校园大道，两边高大的棕榈树凸显了亚热带海洋性气候的感觉。 下图是清晨的校园大道，时间大概是7点半左右，可以看到太阳已经很高了。 下图是这条大道的尽头，也就是台北国立大学的主教学楼。 下图是一栋比较新的教学楼，路两边依然是这种热带的树种 下图是这次的跑步地图，从Garmin网站上导出的数据文件，用过Google Earth查看截屏得到的图。 从上图中可以看出我几乎走遍了这个学校的所有主干道，有些地方是教职工宿舍区，有些地方是施工封闭的路段，还由于太阳太晒了，所以并没有凑够10公里整数。 总结 台大校园是台湾的最高学府之一，地位堪比国内的北大、清华和复旦，是台湾学术和科技交流活跃的地点，校内的免费wifi，无墙，而且下载速度在10m左右，网速比大陆快n倍。校园里路面平整，软硬适中，很适合跑步。校内的风景独特而优美，值得来游走一番。如果是北方的人，而且向我一样不是很耐热的，建议早点来，温度和日照强度都低一些。我跑的虽然不远，可是一路上一直是汗流浃背，建议带瓶水。本次跑步是我在台湾的首次跑步，台大校园路线已经进入了我的个人路线集。</description></item><item><title>Game of Cloud 对比三大主流公有云厂商</title><link>https://martinliu.cn/blog/aws-vs-azure-vs-gcp/</link><pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/aws-vs-azure-vs-gcp/</guid><description>在全球范围内，公有云发展的正如火如荼，对IT行业技术的发展产生了很大的影响，从私有云到公有云，到混合云，再到云原生应用和DevOps。这一连串的连锁，也反映出了最近10年来IT行业发展的主流趋势。
各种味道的云计算 参考来源：Battle of the clouds: Amazon Web Services vs. Microsoft Azure vs. Google Cloud Platform 作者 Brandon Butler, Senior Editor, Network World ，FEB 22, 2017 12:42 PM PT Which flavor of IaaS public cloud has what you need?
对于行业观察者而言Amazon AWS是IaaS公有云市场里，不容争辩的领导者。而Azure正在逐渐缩小与AWS之间的差距，后来者GCP正大踏步的走来。
根据Gartner对云厂商的深度评估，它分析了云厂商对企业工作负载的满足情况，AWS在最近的三年里，在234项功能对比中，保持着92%的满足度，Azure从75%上升到了88%。GCP也进入到了70%的程度。如下图所示：
Gartner对IaaS厂商的评估 重点看Required这一列的百分比。这些企业级功能被分类为三个级别：
Required 必须具备的； Preferred 最好能具备的； Optional：推荐具备的。 Amazon Web Services AWS是IaaS公有云市场的缔造者，它在2006年发布了第一项云服务Simple Storage Service - S3；Gartner认为它是最成熟的公有云服务提供商，它的功能从广度和深度上，都能最广泛的，能覆盖各种使用场景。它的优缺点如下图所示：
AWS的优缺点 优点 缺点 最大和最成熟的公有云IaaS厂商，具有最强大和多样性的功能集合，被Garter称为：最广泛使用场景里的”安全之选“ 尽管AWS的入门和上手是容易的，它还是需要专业人士的管理和驾驭。由于它的功能性的宽广，这会让用老用于也难于面对多种的实施方案，需要第三方的专业顾问帮忙。 市场里的思想领袖和创新者，不断推出各种IaaS的新特性，例如Lambda无服务计算平台 对于用户的时间和实施能力而言，AWS有时候创新速度太快了，用户的知识很快就会过时，需要他们持续地更新AWS功能和平台的知识。 AWS的云市场具有最广泛的第三方工具的选择。而且它的顾问和专家的人数也是最多的，他们可以帮助到AWS的用户。 AWS一直以来都不是追求高价格。用户在每次购买服务的时候都有不同折扣，有时候需要使用第三方的工具帮忙管理成本。</description></item><item><title>不一样的台北，不一样的感受</title><link>https://martinliu.cn/blog/taipei/</link><pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/taipei/</guid><description>这是一次偶然的旅行，在最近的两年里，我很荣幸的认识了很多新朋友；偶然间受到了台湾朋友的邀请；这也是一次必然的旅行，由于我锁定了DevOps这个方向，参加更多的DevOpsDays活动也就成了必然。
台湾旅行提示 前往台湾所需要的手续是相对的麻烦一些。如果从北京出发的话，最简单的方式还是使用【 往来台湾通行证 + 个人旅游签注 ，有大陆的出入境管理大厅办理，在北京的各个区都有，外地户口的需要网上预约，提交资料，等待数个工作日之后，能够拿到这张二合一的IC卡片】和 【中华民国台湾地区入出境许可证 这个由旅行社可以办理个人旅游类型的】。
我这次是参加itHome主办的DevOpsDays台北站，由于是参加商务演讲，所以中华民国台湾地区入出境许可证需要是商务型的，这样就需要台湾的大会举办方提供本次活动的资料，然后我在去北京市的台湾事务办公室申请立项，在批准之后才能拿到大陆发出的商务签注。由于来不及办理这个流程；因此不得不绕道香港转机前往。
如果是经过香港转机前往台湾的话，在北京机场办理乘机手续的时候，必须使用港澳通行证（要带有有效签注的）和护照（台湾的大会举办方用护照帮我买的机票）。办理完登机手续后使用港澳通行证在北京机场出境，现在的港澳通行证也是二合一的IC卡片，所以可以用来进入自助入关通道，刷卡门开了就过去。
乘坐飞机抵达香港机场之后，按照指示去往转机的安检通道即可，经过一次安全检查之后，你就进入了楼上的出港候机大厅，去往下一个飞台北的登机口即可。
在抵达了台北的桃园机场之后，在入境台湾之前，要填写一张入境表格，拿着护照和中华民国台湾地区入出境许可证即可通过海关，海关会在这张必须是彩色打印的纸上盖下入境的时间戳；由于我的行程是固定的7天的行程，所以理论上讲，我必须是2号入境7号离境的行程；如果时间上有推迟和延后，是可能会有一定的麻烦的。
我现在座在回程台北飞往香港的飞机上，在出海关的时候需要用到护照和中华民国台湾地区入出境许可证，海关会在中华民国台湾地区入出境许可证这张纸上盖第二个场景的时间戳。我从香港回北京，通过北京海关入境的时候，应该使用港澳通行证即可。
如果我中华民国台湾地区入出境许可证的目的是旅游型的，我就可以从北京直飞台北桃园机场了，就不用再香港转机了。我这次行程比较特殊，用到的证件如下：
中华民国台湾地区入出境许可证 - 商务，彩色打印，出入台湾海关用，需要遵守出入境行程时间 港澳通行证/带有签注 - 办理离境登机牌，出入中国海关使用 护照 - 出入台湾海关用 我从机场到酒店座的是巴士，走到机场到达大厅的最底层，花145块买票，巴士其实是很方便的一种方式，我在远东香格里拉酒店下车之后，在走路大约10多分钟就到了我的酒店。
回程的时候，我选择了做出租车，在酒店门口随手叫了一辆，打表到桃园机场的价格是1300台币，我记得是40公里左右，走了将近40是多分钟，七点多路上并没有明显的堵车的现象。
野柳地质公园 我是9月2日周六下午到的台北，第二天和其它朋友商量后，觉得去野柳地质公园；这个公园在台北市的正北面。我们选择做公交去，公交站就在酒店附近，在车站大约等了30分钟左右上车，车走了大概40多分钟后就到了公园大门附近。
可能是我们那天的天气原因，公园关闭了一半，走到中间的那个区域，就不能继续往前一直走到头了。下面是来自马蜂窝网站的简介
野柳地质公园为大屯山余脉伸出海中的岬角，长约1700 公尺，野柳奇岩是这里的主要看点，它是世界奇观之一。 波浪侵蚀、岩石风化及海陆相对运动、地壳运动等地质作用的影响乃生成罕见的地形、地质景观，极具观赏、研究价值。 除了奇特的地质和石头以外，种类繁多、在海边栖息的海鸟也是不可错过的观赏目标。 我觉得如果是天气晴朗就更好了，那样岩石、大海和环境的色彩才会更加的漂亮。整个公园不是很大，景色变化不大；由于没有看到公园的另外一半，感觉还是有些缺憾。
国立故宫博物院 到目前为止，我看过的博物馆也不少了，这个博物馆也有点超预期的感觉。从外表上看，这个坐落在士林公馆附件山上的博物馆不是很宏伟的建筑。看起来比较小巧。
博物馆里的展品的数量是非常多的，每一个展厅里的每个展位，感觉都拜访的满满当当的，一定要租一个语音导游，语音讲解内容制作的也是很精良。这么琳琅满目的展品，从数量上说就是非常让人大饱眼福的。
展品的展览和分类的水平还是很高的，让我比较印象深刻的有两块展板，一块是青铜器按年代的分类展示板，一块是类似的瓷器的展板；横轴是器物的分类（按用途和功能），纵轴是历史年代。这种逻辑让人在看完展品之后，我们还能大概的看出青铜器和瓷器的发展史。
国立台湾大学 这里才是本次出游的目的地，我帮忙DevOpsDays台北组委会联络并组织了本次的大陆讲师团；在我的建议下，还引进了“凤凰项目”沙盘。我的分享在最后一天的下午，前几天基本是呼朋唤友的游玩的时光。
当然唯有跑步是不能辜负的，台大校园是一个不能错过的跑步地点，很多建筑物在日本统治时期就有了。校区的风景和规划仅仅有条。从南门进入之后，就是一条校内最宽的大路，两边种着整齐的椰子树，和并不高大的红色教学楼群，形成了鲜明而特别的风格。
9月6日早晨在校园里跑了6公里多，7点多在校园里，感觉阳光非常强烈，很热，不一会就挥汗如雨了。校园内的树木其实是很多的，也都很高大，经常可以在树荫下面跑，这极大地缓解了强烈的日照。校内有些部分在维修和施工中，因此并没有完全地踏遍整个校园，不过这所校园的特点和美丽已经尽收眼底。
这几天的大会也是在校内办的，六七百人的大会，办的细致周达，有声有色，这边的技术社区对DevOps也是比较刚兴趣的。大会的很多细节做的都很好。
总结 其它的景点还是游玩了不少的，国父纪念馆、101大厦楼顶、还去过几个夜市。诚品书店给我了深刻的印象，强烈推荐信义店，这是台北最大的一家书店。我去了两次，忍不住买了几本书，还买了一只LAMY Studio的钢笔。把玩钢笔也是一个挺大的坑，有可能我已入坑。
台北是一个很特别的城市，如果不是亲自来感受一下的话，你是在很难想象出，在海峡的这一边，还有着这样的一座神奇的宝岛。美中不足的是，这几天都在台北转悠了。由于台北市是最繁华的大都市，城市的嘈杂和喧闹还是难免的。等下次有机会在来感受休闲和静谧的台湾。</description></item><item><title>Las Vegas流水账-大峡谷篇</title><link>https://martinliu.cn/blog/las-vegas-p2/</link><pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/las-vegas-p2/</guid><description>Las Vegas到大峡谷（Grand Canyon National Park）的距离并不遥远，但是离最佳风景观看点南峡（South RIM）还有大半天的路程。很值得去，绝对不会后悔。 行程
我们走的路线和预先计划的稍微有些差异，主要是受了同时Danny的影响，他曾经自驾车在大峡谷玩过。根据他的建议，我们设计了大峡谷南峡的两日游。路线如下：
从拉斯维加斯出发–93号公路–40号公里–住在威廉斯小镇–64号公路–大峡谷国家公园（南峡）。本来计划先去游玩胡夫大坝、西峡（Eagle Point和Guano Point），之后晚上住在威廉斯小镇，第二天再去南峡一日游。西峡被Danny果断的否定了，他建议我们要在南峡的主景点多花时间；现在看来这个决定是对的。
我们在10号早晨4点起床，出发前往大峡谷。在出门的第一个小时，里别导航搞得几乎是崩溃的。出现了几个状况：
用iPad上的Google Map下载了三个州的离线地图是不好用的，甚至让iPad链接上国内手机热点的型号后，GPS定位还是不正常工作的（不知道是否是我的iPad的问题待查）。 用国内iPhone手机做以上相同的操作，问题是一样的。 用iPhone手机自带的苹果地图，能工作，可是由于没有离线地图，使用的时候略感延迟，也害怕使用过多的流量，因此还是放弃了。 大家各自用手机导航，有人的路线是南峡方向，有人是走北峡方向。在经过路口时大家意见不统一了，才意识到问题，大家都有中枪的感觉。 最后发现用国内手机，在来之前，在家下载好的三个州的Google Map离线地图是唯一好使的方案，在使用过程中可以完全不需要开数据网络，可以用飞行模式。 从拉斯维加斯市区到威廉斯小镇的酒店的路程大约是350公里，整个行程差不多花了5个小时左右（第一个小时忽略不计呵呵）。
在酒店放下行李，checkin了以后，我们就奔向了大峡谷南峡的南门（东门才是正门），大约从酒店出发，又走了一个小时多才进入公园，车停在了Bright Angle附近的停车场。接着开始了一天的大峡谷之旅。 大峡谷-Day1
我们按照Danny的建议先乘坐西线（橙色）的Bus，到达了西峡的最远端（Herimt Point），在哪里稍微观赏了一下后，正好是午餐实践，在哪里的零食店一人买了一个三明治吃。然后回程的Bus在第一个停靠点下车，开始了徒步5.9公里的观赏，也就是从第一个停车点走到第二个停车点，回程总共三个停车点。
这一段路在大峡谷当中，景色算不上是最好的，可是这段路包括了Green Road这一段路。这一段路里包括了大峡谷里的所有主要种类的树木和植物。大量的信息展示牌上介绍着各种动植物的信息，在途中前后碰到了三只鹿，可以算是给徒步者的一个奖励，这几只鹿貌似并不把人类放在眼里，它们各自闲散地吃着树叶，只有在人特别靠近的时候，才不耐烦的走开。
在路上碰见了不少骑自行车的人，他们很多是以家庭为单位了，三五成群的前后照应着向前行驶而去，有些人的车是自己带的，有些人是在公园里面租车骑行的。
我们的徒步的路段是：Pima Point到Mojave Point。在Mojave Point看到了著名的、教科书般的、明显的6层、分层地质峡壁和讲解的展板。
在我们正要回去的时候，我们眼睁睁的错过了一辆Bus。在等下一辆Bus到来的时候遭遇到突如其来的阵雨的袭击。这里的天气很多变，雨滴打在身上特别凉。不一会就把我的上身都打湿了，我只穿了短袖和短裤，所以很快就迫使我我不得不躲到了树下。第二辆Bus在20多分钟之后，终于来了，上车之后，在回程的路上，阵雨下的更大了，能挤上车，顿时感觉自己很幸运。
在回到了Right Angel Lodge的停车场之后，想着Gary应该在温暖的车里等着我们呢！可是没想到车里没有人，此时从车站冒雨跑过来的三个人鞋子都湿透了，冷风嗖嗖的刮着。大家躲在一个酒店房间的屋檐下，打着哆嗦的等了几分钟，后来觉得这样不行，就各自四处寻找拿着车钥匙的Gary去了。
我在Lookout Studio附近和Bright Angle Lodge的商店里面寻找Gary的同时，倒也算是另外一番游览；找了30分钟以后，觉得应该回车子看下了，回去后发现Gary已经和曾旭在车里了，赶紧上车喝水休息。等了一会吴东也回来了。这时候雨还在下，时间大约是下午3点多，我们大家一致觉得回酒店休息了，结束了第一天新的游玩。 晚餐
回到了酒店之后，我们进了房间，我赶紧脱下深山湿漉漉的衣服和鞋子，洗了个热水澡，换上干净温暖的衣服，直接钻进了被窝，昏昏沉沉的休息了大约一个多小时，也正好到了饭点了，外面的雨星星点点的没有停。我们就开车去往镇上吃饭了。
我们先走进了一家美式当地的餐厅，发现菜单基本看不懂，就走人了。然后打算去吃一家意大利餐厅，发现等座位的人还是很多。后来我建议来这家 Cafe 66 Bar and Grill。这家是一家很地道的美式烧烤餐厅。
我点的是上图的烤牛肉，其它人主要点的是下图的烤猪排。肉都烤的很嫩很香，几乎都吃不完就吃到顶了，大家饱餐一顿之后，回去妥妥的休息了。
大峡谷-Day2
第二天早晨起来大约是7点多，我睡的还行。大家去吃早餐，我泡了碗麦片牛奶、烤了两片土司、烤了一个圈圈面包、乘了一些炒鸡蛋和小香肠、倒了一杯橙汁，吃完了这些后吃了两个苹果。在这温暖的小店里，在一个没有任何赶路压力的行程上，我在这一周的行程当中，在此刻才算是真真的满血复活了。
早餐后，我们就继续上路了。
我们先把车停在了Visitor Center的停车场，然后从Mather Point走到了Yavapai Point and Geology Museum。一路上才发现好多大峡谷的明信片照片都是从这里取景拍摄的，这一段是大峡谷游览的必经之旅。
然后我们驱车前往大峡谷南峡的最东头，也就是Desert View观景点，其实这个景点并不是东边的最后一个景点。我们在哪里看完之后，想一直往东开，看看到底还有什么景点。其实看到了不少的观景台，甚至于在密林中的头角硕大的鹿。最后走出了公园的东门，在往外开，才来到了公园的标识牌设立处。在往外开了几英里之后，就返回了。其实大家想起了再继续往北走180多公里就是著名的羚羊峡谷，Windows7桌面图片中出现过这个景点。可是行程来回要大约4个小时（370公里以上），在我的建议下大家还是忍痛放弃了这个景点。否则今天早晨应该还需要4点出发，回程晚上11点的飞机，想想当天还要赶飞机回家，其实压力还是有的。
我们从公园外又兜了一圈回来之后，我们中途停在了Tusyan小镇上吃了午餐麦当劳，休息片刻之后继续上路了。路上我们加满油一下跑到了胡佛水坝，到了才知道最后一个游览是5点钟，虽然我已经尽力开快车赶路了，可是还是错过了。稍微浏览一下之后，接着回机场还车。然后座免费bus去机场了。晚上饭是吴东请客。大家在机场踏实的等了2个多小时就登机了。 小节
这次出行美中不足的是：没有把徒步的装备带好，包括防晒、防雨措施；各种长短方便更换的速干衣裤，帽子等。还很重要的户外徒步的鞋子。
在开车方面，三个司机的好处非常明显，这样大家分担着开非常有乐趣和安全。
有可能的话大峡谷南峡的游览方向可以调整为，从东北方向南下过来，也就是羚羊峡谷的方向过来。这样的好处是，从公园东门进来之后，其实在Desert view之前有很多不错的路边的观景点，而且停车特别方便和顺手，这样的方式可以更充分的利用汽车的便利程度，多看了景点，还不累。
Hoover Dam错过了，我还是觉得有些小小的遗憾的。因为这个地方就在路上，时间安排的合理的话，能够参加上他们的水坝游览，里里外外都看一遍，应该还是很不错的。毕竟很多影视剧都到此取过景。
总之这次拉斯维加斯之旅还是很棒的，除了去打枪射击的这一项没有Checked之外，其它的都算是完美收官了。这次入手了美国国家公园的Passport，用它来记录和收集所到过的国家公园的印章，以后可以统计一下，一共可以去几个了。</description></item><item><title>Las Vegas流水账-进城篇</title><link>https://martinliu.cn/blog/las-vegas-p1/</link><pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/las-vegas-p1/</guid><description>Las Vegas-拉斯维加斯，国人简称拉丝，美国人简称Vegas/威嘎斯。来过很多次美国，可是这个城市还是第一次造访，写个流水账记录一下。 航班
这次来回都是韩国航空。从北京飞首尔转机直飞美国。这也是第一次乘坐韩国航空公司的飞机，第一次入境韩国。
中午从北京出发的飞机晚点了30分钟后起飞了，在3点左右达到首尔机场，沿着指示标记，走向国际转机通道，经过安检后就进入了下图的首尔国际机场航站楼。
这个航站楼还是很大的，里面有各种免税商店，包括化妆品、烟酒、食品和各种奢侈品。为了到此一游我也买了一副墨镜（Rudy意大利产），在此留个纪念；价格上比美亚可能要便宜20刀左右，而且还免税。基本上觉得还是划算的。
与其它城市的几位同事及其家属碰头以后，我们四处转了转，由于转机的时间比较长，大家相谈甚欢，还是相当的休闲和愉快的。在那一刻也非常同情另外一波从北京出发的同事们，他们的飞机出现了机械故障。
大约七点多大家想找个地方吃点饭，结果由于机场的人超级多，想找个吃饭的地方，居然不能找到一个能让我们四五个人一起坐下的饭馆，随即放弃吃饭的想法，买了杯星巴克了事。在夕阳的余晖下，大家津津有味地听宇宙同学普及各种会员身份使用攻略和褥羊毛秘籍，不知不觉也到了登机时间了。登机后吃了两顿饭，看了一部电影，快到的时候睡了大约2小时，然后就准时的在当地时间周日下午5点到达了。然后大家商量之后，果断的打了一辆Uber，直奔拉丝的北奥特莱斯去也。 进城
汽车载着我们穿过市区的主街道，往北走直奔奥特莱斯。 这个奥特莱斯还是蛮大的，在8点下班前，我不紧不慢的买了两双鞋和一件T恤，之后和同事们一起打出租车会到酒店。 到 Aria酒店 Checkin了之后，进房间放下行李箱，同事们一起去酒店的Pool Bar吃晚饭，具体说是一个欢迎酒会。其实也吃不上什么正式的晚餐。当天晚上还是有时差的感觉，到晚上3点才昏昏睡去，睡了4个小时。早晨起来感觉还行，起床后完成了会议登记，接着去吃早餐，早餐是我吃过的所有会务餐中最差的，不提了略过。接着进入开会的节奏。 大会开始
开场主持人是加拿大的一个Sales，他的气势和技巧还是很专业的，据说粗口的风格是与HR和公司的VP们请示过的，不过的确达到了逗乐和暖场的目的。随着“镜子”舞团的暖场舞，视频上播放了公司大佬们录制的视频，hipop风格的逗乐视频。由于印度裔大佬们较多，我看下来有点宝莱坞的感觉，哈哈！ 公司的大佬们悉数登场，各尽其职的讲述自己的部分。讲解了公司的市场前进和进入4B公司的计划。下午的各种session完了之后，晚餐也还是社交为主的，去了一个高尔夫训练场，大家基本也以聊天为主，至于晚餐么，我忽略不写了。 Night walk 晚餐之后和同事们一起来夜游Vegas的主大街夜景。从美高梅酒店走路到埃菲尔铁塔酒店，最后回房间休息。 横穿美高梅酒店赌场，感觉MGM的人气确实很旺，比其它酒店生意好。 经过自由女神像的纽约酒店赌场。 走到埃菲尔铁塔附近 看完百樂宮酒店（Bellagio）的音乐喷泉后，走路回到酒店。
考虑到最后两天去大峡谷的路程比较远，希望能早走，我取消了之前的租车订单后，又下单订车，提前了一天取车，而且取车的地方就选择了酒店楼下。这样时间就不紧张，而且取车更方便了。
这就是此次拉斯维加斯之行的第一部分，航班安全顺利到达，进城后参加了一天平淡无奇的公司大会。大概领略了一下这个极致的城市。</description></item><item><title>互联网规模的超融合平台</title><link>https://martinliu.cn/blog/nu-school-converged-platform/</link><pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/nu-school-converged-platform/</guid><description>nu.shool 牛学院系列以视频加文字的形式，向您展示Nutanix云平台的技术特性和细节。
本期视频是由《Nutanix圣经》的作者Steven Poitras，向您介绍Nutanix超融合系统架构。
《Nutanix圣经》章节推荐。</description></item><item><title>2017DevOps采用和趋势现状-信息图</title><link>https://martinliu.cn/blog/state-devops-adoption-trends-2017/</link><pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/state-devops-adoption-trends-2017/</guid><description>在过去的一两年里DevOps持续升温，逐渐成为一场IT行业内的谁不可回避的运动。
DevOps 定义 我个人是一直以来反对给DevOps做一个名词解释样式的定义的。不过这种需求实在强大，摘抄几条供大家参考，上图是一种定义。
定义2：You cannot buy DevOps and install it. DevOps is not just automation or infrastructure as code. DevOps is people following a process enabled by products to deliver value to end users. &amp;ndash; Donovan Brown, Microsoft DevOps Program Manager
以上出自：Donovan&amp;rsquo;s blog post on &amp;ldquo;What is DevOps&amp;rdquo;.
定义3：DevOps（Development和Operations的组合词）是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。
以上出自：维基百科 Wikipedia - DevOps
兴趣和搜索量 以上结果来自Google趋势，上图是从2004年到现在，一共13年的趋势图。下面再看一下最近五年的趋势详情。
最近5年的搜索趋势 国际关注度 相关话题和查询 关注者年龄和性别 上图年龄分布情况。
上图是性别分布情况。
DevOps应用状态 正在应用的:从66%上升到74% 没有应用的:从19%下降到16% 不知道的：从15%下降到6% DevOps Checklist 不管你做不做DevOps？不管你知不知道你是不是DevOps？不管你从哪个角度入手DevOps？看看这个清单中有几项和您相关，就知道你和DevOps的关系是否密切。 检查清单如下：</description></item><item><title>Nutanix AHV（KVM）Windows虚拟机安装全攻略</title><link>https://martinliu.cn/blog/install-vms-on-nutanix/</link><pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/install-vms-on-nutanix/</guid><description>Windows 虚拟机安装 Nutanix的AHV虚拟机是基于KVM的。本文件假设您使用和安装的是Nutanix社区版本的群集。在上面安装Windows虚拟机的步骤如下：
下载操作系统安装光盘 上传操作系统安装光盘到Nutanix群集 （安装Windows虚拟机需要 Fedora virtio 驱动） 新建和配置虚拟机 安装OS 安装Nutanix Guest Tools （NGT） 下面用安装Windows 10举例，说明详细的安装步骤。
第一步：下载操作系统 ISO 如果你需要下载 Ubuntu Desktop 点这里。
从微软的TechNet Evaluation Center下载 Microsoft ISO 注意，评估的服务器版只能使用180天，桌面版能使用90天。
第二步：上传ISO文件到Nutanix群集 Nutanix群集上提供了镜像服务，可以存储几种格式的镜像：ISO格式的操作系统安装镜像，虚拟机的磁盘(如KVM格式等)。这些镜像文件可以被虚拟机通过挂载CD-ROM设备使用，或者直接克隆出虚拟机的磁盘。操作步骤如下。
点击右上角的齿轮图标，选择image configuration 点击 upload image按钮
界面字段解释：
Name: 镜像文件的名字（用ISO来与磁盘镜像区分一下） Image Type: 选择 ISO Container: 选择用来存储ISO文件的容器 Image Source: 选择上传文件作为镜像来源 Save: 点击Save按钮可以看到上传的进度条。 在上传成功之后，镜像清单中显示刚才的镜像为 Active 状态。
由于Nutanix的hypervisor是基于Linux KVM技术，它需要附加的Windows驱动，需要下载 Fedora Windows virtio 驱动。 下载地址如下：
https://fedoraproject.org/wiki/Windows_Virtio_Drivers
点击第三条 Direct download
点击 “Stable virtio-win iso” 下载最新的驱动 ISO 文件。</description></item><item><title>日本旅行-第一部分京都休闲游</title><link>https://martinliu.cn/blog/kyoto/</link><pubDate>Fri, 27 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/kyoto/</guid><description>这次并不是刻意安排来日本，为了和同学凑行程，意外来日本国一游。行程稍微有点周折，从北京&amp;ndash;威海&amp;ndash;大板西关&amp;ndash;京都&amp;ndash;大板&amp;ndash;大板西关&amp;ndash;北京。这个行程的缺点在于选择了同一个城市进出日本。本文讲讲京都的几天。
新京极 在京都期间都住在了锦市场北边的一个市场附近的一家Airbnb。其实从锦市场到新京极的几个街区中间是京都市中心附近。从住所往北一站就是京都市的市政厅。往北一站就是鸭川，这是一条从北到南穿过京都市区的河流，冬季河水特别浅。
住所在市场旁边吃喝玩逛都非常方便。属于在居民楼中的一个商住楼。
由于这个区域靠近商业中心，因此楼下临街商业也很发达，大街小巷遍布着各种饭馆和小店，买什么的都有。各种类型的各式各样的小店。
伏见稻荷 这里是一座山伏见稻荷山所在，山上的这个神庙以它的狐狸大神最为有名。从下图可以看出，这座香火旺盛的主庙的屋脊还是有唐朝的感觉。即使是工作日也有很多人专门来这里朝拜。
除了在正门的主殿有人朝拜，还有山上的其它地方，凡是有人供奉的地方的石台上，都是有人书有供奉者的名字，或者是毛笔写的或者是石刻的。
From wiki
伏见稻荷大社位于稻荷山的山麓，在传统上整个稻荷山的范围都被视为是神域（圣地）的范围。伏见稻荷大社主要是祀奉以宇迦之御魂大神为首的诸位稻荷神，自古以来就是农业与商业的神明，除此之外也配祀包括佐田彦大神、大宫能卖大神、田中大神与四大神等其他的神明。由于每年都有大量的香客前来神社祭拜求取农作丰收、生意兴隆、交通安全，使得该神社成为京都地区香火最盛的神社之一。另外，起源于江户时代的习俗，前来此地许愿的人们往往会捐款在神社境内竖立一座鸟居来表达对神明的敬意，使得伏见稻荷大社的范围内竖有数量惊人的大小鸟居，而以“千本鸟居”之名闻名日本全国乃至于海外。捐款竖立鸟居的单位包含个人、公司行号乃至于各地的商会组织，目前现存的鸟居，最早可以追溯到明治年间。 在神社的
从右侧上山，到山顶后从左侧下山，如果走的快的话，两个小时左右可以玩完。这里可以看到日本所信奉的神的多样性。各种植物、动物和农业相关的东西比较多。
我们走到半山腰的一个桔园时，有些迷路的感觉，觉得找不到路了。有一个出租车司机回家，把车停到了路边换鞋回家；看到我们似乎找不到路了，他回家后拿来一张地图给我们指路。由于日本的英语真的不通，他所以回家那地图来，大约至少用了他四十分钟的时间，拿着地图来告诉我们继续向前走就可以到山顶了。他说的所有话里面，就两个词可以听懂“Top”和“thirty minutes”；很感谢这个指路人。
上顶上有一个能够俯瞰市区景色的地方，几排长椅上，人们一边看风景，一遍晒太阳，还是很休闲的。
奈良 奈良到京都不远。来这里大部分时间都放在了，带孩子喂鹿上了，基本没有怎么逛著名的东大寺。
我们在路上换车的时候，做错了车，做了一辆特急的快车，结果需要补票花了1千多。
出了地铁站不远，就可以看到奈良公园的小鹿，一波一波的喂鹿，孩子总是能想出各种奇思妙想的喂法，基本一天没干别的。
From Wiki
东大寺（日语：東大寺），位于日本奈良县奈良市杂司町，是华严宗大本山，南都七大寺之一，距今约有一千二百余年的历史。1998年作为“古都奈良的文化财”的一部分被列为世界文化遗产。 佛寺是728年由信奉佛教的圣武天皇建立的。东大寺是全国68所国分寺的总寺院。因为建在首都平城京以东，所以被称作东大寺。另外有西大寺。
最后到寺院里面转了一圈依然下班了。发现日本的景点都是在寺庙附近的；和各种大寺相关的公园非常多，有寺庙，就有公园，就有风景。
二条城 这个城是一个将军府，距离天皇住所不远。麻雀虽小五脏俱全，它内城和外城，有两层的护城河，城墙是很低的。
From wiki
二条城是一座位于日本京都府京都市中京区二条城町的城堡，建设于江户时代初期（1603年）。曾经是德川家康的寓所。位于京都市街的一座平城。1994年，被联合国教育科学文化组织列入世界遗产中的古都京都的文化财之一。狭义上，二条城，就是江户时代筑起的城池，但是在广义上，是指第十三代室町幕府将军足利义辉的居城、织田信长为十五代将军足利义昭建造的城池，1573年织田信长举兵将足利义昭放逐河内，此城便被焚毁，在其它地方另筑二条御所，之后献给皇太子。但是一般所提及的二条城，是德川家康筑城的二条城（朝廷则称之为二条亭）。1867年（庆应3年）第十五代将军德川庆喜，在二条城举行“大政奉还”仪式，将政权归还给了天皇，二条城因而闻名。1871年（明治4年） 二之丸御殿作为京都府厅舍。1873年（明治6年）除二之丸外归陆军省。1885年（明治18年）京都府的新厅舍完成移转新址后，二之丸御殿开始修理直到1892年（明治25年）。1893年（明治26年）到1894年（明治27年）将桂宫邸本丸移筑，始有本丸御殿。1915年（大正4年）大正天皇即位仪式大典于二之丸御殿举行，并开始增建南门二之丸御殿的附属建物。1939年，天皇又将之赐给宫内省，并于隔年更名为“元离宫二条城”，正式对外开放参观。
这是一个比较小规模的景点，出了地铁站，东门正在维修，绕到北门，顺序参观完了外城、内层和各种建筑。这座建筑也是重建的，大约有80多年的历史，曾经被焚毁；最近一次好像是被雷击失火。
鸭川 我下图的跑步路线大约就是鸭川的主要部分。其中三条到5条的河岸左侧就是京都旧市井的所在，感觉像是北京的南锣鼓巷，不过原貌保护的更好一些。 炸猪排饭 日餐里面的食物和中餐是非常相似的，随便进一个店，都不用为吃啥发愁；有些饭馆是有日文、英语和中文菜单的。下图是一家专门做炸猪排饭的饭馆。这家饭馆主要做三总餐：炸猪排饭、红烧猪排饭和炸大虾饭。套餐的价格在900日元左右，量还是比较多的。我点了一杯扎啤配炸猪排饭味道非常好。
这家餐厅吃了两次，感觉非常好，年长的老人在店里带领几个非常年轻的孩子们，把这家店搭理的井井有条。看着食物制作的每一个工序，感觉还是不错的。</description></item><item><title>Nutanix AHV 虚拟机模板制作</title><link>https://martinliu.cn/blog/clone-ahv-vm-template/</link><pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/clone-ahv-vm-template/</guid><description>本文描述了AHV虚拟化的虚拟机模板的制作过程。首先使用ssh登录cvm，进入acropolis命令行。
找出模板对应的虚拟机 使用 vm.disk_get 命令，按多次tab，显示虚拟机清单，复制模板机名称
&amp;lt;acropolis&amp;gt; vm.disk_get vm-fedora25 ide.0 { addr { bus: &amp;quot;ide&amp;quot; index: 0 } cdrom: True empty: True } scsi.0 { addr { bus: &amp;quot;scsi&amp;quot; index: 0 } container_id: 4427 container_uuid: &amp;quot;9279ba2c-8e8d-4aea-b00f-410df5a18a23&amp;quot; vmdisk_size: 10737418240 vmdisk_uuid: &amp;quot;7476458e-7917-4df8-b830-a0df5a95dae9&amp;quot; } 创建模板镜像 使用从虚拟机磁盘克隆出镜像的命令。
&amp;lt;acropolis&amp;gt; image.create fedora25-Template clone_from_vmdisk=7476458e-7917-4df8-b830-a0df5a95dae9 image_type=kDiskImage annotation='Fedora 25 Server Template' fedora25-Template: complete 模板测试 登录Prism界面，点击镜像服务，确认清单中刚才创建的虚拟机模板镜像；进入vm页面，创建虚拟机，使用 fedora25-Template 镜像做磁盘</description></item><item><title>DevOps术语表</title><link>https://martinliu.cn/2017/01/07/devops-glossary/</link><pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2017/01/07/devops-glossary/</guid><description>简介 这份术语表的旨在为DevOps实践者提供参考，在重要的专业术语上保持一致。最初的来源是《DevOps Handbook》英文版。译者在翻译的过程中，梳理和总结了一部分。Exin的DOP认证考试基于此书，考试样题也影响和参考了本术语表。本术语表是开放的，欢迎各界业内人士对其修订和增补。目标是形成一份较为完整和准确的参考资料。参与修订的方式见页脚。欢迎但不限于以下方面的专家参与评审和修订：
敏捷开发 精益/精益UX/精益创业 丰田生产系统 ITIL 互联网公司 传统企业 这个页面的另外一个存在：https://handbook.martinliu.cn/glossary/
变更日志 2017年1月7日，在Martin‘s Blog和Github上发布了第一个版本。有几个人在Github上参与了修订（请参与者通过邮件或者其他方式告诉我，这里希望再次申明致谢。） 2017年12月27日，参与修订的人包括卢梦纯（Exin）、刘征、张乐、Wang Jun和许峰。 本网页当前接受繁体中文的增补，所有参与者名单 术语表 英文 中文 A/B Testing A/B测试 Acceptance Stage 验收阶段 Acceptance Test-Driven Development (Atdd) 验收测试驱动开发 Acceptance Tests 验收测试 Accident 事故 Affinity 亲和 Agile 敏捷 Andon Cord 安灯拉绳 Anomaly Detection Techniques 异常探测技术 Antifragility 抗脆弱性 Application Deployment 应用部署 Artifact Management 构件制品库管理 Artifacts 制品 Automated Tests 自动化测试 Automation 自动化 Backlog 待办事项列表 Bad Apple Theory 坏苹果理论 Bad Paths 失败路径 Batch Sizes 批次尺寸、批量大小 Blame 责备 Blameless Post Mortem 免责事后分析 Blamelessness 免责 Blue-Green Deployment 蓝绿部署 Blue-Green Deployment Pattern 蓝绿部署模式 Branching Strategy 分支策略 Brownfield 棕地 Build 构建 Business Value 业务价值 Canary Release 金丝雀发布 Canary Release Pattern 金丝雀发布模式 Card 卡片 Change Categories 变更类别 Change Schedules 变更计划 Cloud Computing 云计算 Cloud Configuration Files 云配置文件 Cluster Immune System Release Pattern 集群免疫系统发布模式 Code Branch 代码分支 Code Review Forms 代码审查表 Codified Nfr 成文的非功能需求 Collaboration 协作 Commit Stage 提交阶段 Commit Code 提交代码 Compliance Requirement 合规性要求 Compliance Checking 合规性检查 Compliancy Officer 合规检测官 Configuration Management 配置管理 Container(S) 容器 Continuous Deployment 持续部署 Continuous Integration 持续集成(CI) Continuous Delivery 持续交付(CD) Conways Law 康威定律 Cycle Time 周期时间 Defect Tracking 缺陷跟踪 Definition Of Done (Dod) 完成的定义 Dev Rituals 开发仪式 Developer 开发人员 Development 开发 Devops Transformation DevOps转型 Downstream/Upstream 下游/上游 Downwards Spiral 恶性循环 E-Mail Pass-Around 电子邮件轮查 Expand/Contract Pattern 扩张/收缩模式 Exploratory Test 探索性测试 Fast Feedback 快速反馈 Feature 特性 Feature Flag 特性标志 Feature Toggles 特性开关 Feedback/Feedback Loop 反馈/反馈回路 Feedforward/Feedforward Loop 前馈/前馈回路 Flow 流 Gated Commit 门控提交 Gaussian Distribution 高斯分布 Green Build 绿色构建 Greenfield 绿地 Handoff 交接 Hand-Off Readiness Review 交接就绪评审 Happy Paths 快乐路径 Hypothesis-Driven Development 假设驱动开发 Incident 事件 Information Radiators 信息辐射器 Infosec 信息安全 Infrastructure Automation 基础架构自动化 Infrastructure As Code 基础设施即代码 Integration Tests 集成测试 I-Shaped, T-Shaped, E-Shaped I型，T型，E型 Iteration 迭代 Itsm (It Service Management) IT服务管理 Ji-Kotei-Kanketsu (Jkk) 质量检查（JKK） Just Culture 公正文化 Just-In-Time (Jit) 准时制 Kaizen (In Lean) 持续改善 Kaizen Blitz (Or Improvement Blitz) 持续改善闪电战 Kanban 看板 Kata Kata Large Batch Size Merge 大批量合并 Latent Defects 潜在缺陷 Lauching Guidance 发布指导 Launch Readiness Review 投产就绪评审 Lead Time 前置时间 Lean 精益 Learning Culture 学习文化 Logging Levels 日志级别 Loosely Coupled Architecture 松耦合架构 Micro-Services 微服务 Minimum Viable Product 最小化可行产品 Monitoring Framework 监控框架 Monolithic Applications 单体应用 Monolytics 单体应用 Mttr 平均恢复时间 Non-Functional Requirement (Nfr) 非功能性需求 Non-Functional Requirement (Nfr) Testing 非功能需求测试 (Non) Ideal Testing Pyramid （非）理想测试金字塔模型 One-Piece-Flow 单件流 Operations 运维 Operations Story 运维故事 Ops Liaison 运维联络人 Organisational Typology Model 组织结构模型 Organization Archetypes 组织原型 Organizational Learning 组织级学习 Over-The-Shoulder 观察者评审 Packages 包 Pair Programming 结对编程 Peer Review 同行评审 Pilot 试点 Pipeline 流水线 Plan-Do-Check-Act Cycle (Pdca Cycle) 计划-实施-检查-改进 （戴明环） Post Mortems 事后回顾 Post-Mortem 事后剖析 Process Time 处理时间 Product Owner 产品负责人 Pull Request Process 拉动请求流程 Qa 质量保证 Reduce Batch Size 降低批次尺寸 Reduce Number Of Handoffs 减少交接次数 Regression Test 回归测试 Release Branch 发布分支 Release Managers 发布经理 Release Patterns 发布模式 Retrospective 回顾 Rhythm 节奏 Roll-Back 回滚 Sad Path 悲伤路径 Safety Culture 安全文化 Safety Conditions 安全条件 Scaling 规模化 Scrum Scrum Scrum Master Scrum Master Security Testing 安全测试 Self Service Capability 自服务能力 Service Deployment 服务部署 Service Level Agreement (Sla) 服务级别协议(SLA) Shared Goals 共享目标 Shared Operations Team (Sot) 共享运维团队 Shared Version Control 共享版本控制 Single Repository 单一存储库 Smoke Testing 冒烟测试 Sprint 冲刺 Staging Staging Staging Environments, Sit 准生产环境 Stakeholder 利益干系人 Standard Deviation 标准差 Standard Operations 标准运维 Static Code Analysis 静态代码分析 Swarm 聚集、聚焦、会诊、围观（动词） Swarming 聚集 System Of Engagement (Soe) 交互系统 System Of Records (Sor) 记录系统 Technical Debt 技术债务 Technology Adaption Curve 技术适应曲线 Technology Executives 技术主管 Telemetry 遥测 Test Coverage Analysis 测试覆盖率分析 Test Story 测试故事 Test-Driven Development 测试驱动开发 The Downward Spiral - Tds 下行螺旋 The Agile Manifesto 敏捷宣言 The Lean Movement 精益运动 The Simian Army: Chaos Gorilla, Chaos Kong, Conformity Monkey, Doctor Monkey, Janitor,Monkey, Latency Monkey, Security Monkey 猿猴军团（可靠性监控服务），Chaos Gorilla（混沌大猩猩）， Chaos Kong（混沌金刚）, Conformity Monkey（一致性猴子）, Doctor Monkey（医生猴子）, Janitor Monkey（看门猴子）, Latency Monkey（延迟猴子）, Security Monkey（安全猴子） The Three Ways 三步工作法 Theory Of Constraints 约束理论 Ticketing System 工单系统 Tightly-Coupled 紧耦合 Tool-Assisted Review 工具辅助评审 Tools 工具 Toyota Production System (Tps) 丰田生产系统 Toyoto Kata 丰田套路 Transformation Team 转型团队 Trunk 主干 User Story 用户故事 Value Stream Mapping 价值流映射 Value Stream 价值流 Velocity 速率 Version Control 版本控制 Virtualized Environment 虚拟化环境 Visible 可视的 Visualisation 可视化 Waste 浪费 Waste Reduction 减少浪费 Waterfall 瀑布式 Wip (Work In Progress / Process) 在制品 Wip Limit 在制品限制 Work Center 工作中心 参与修订说明 请帮忙改进本术语表，请直接Fork本代码库，然后提交PR；或者发邮件到：liuzh66@gmail.</description></item><item><title>Nutanix资源站点清单</title><link>https://martinliu.cn/2017/01/07/nutanix-resource-sites/</link><pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2017/01/07/nutanix-resource-sites/</guid><description>做Nutanix的那些不可不知道的资源网站，这里列出了常用的官方和非官方网站。
Nutanix 官方站点 http://portal.nutanix.com/ http://portal.nutanix.com/
在线文档 在线技术支持，case查看和操作 产品和补丁下载 https://next.nutanix.com/ https://next.nutanix.com/
产品网上论坛和社区 社区版论坛 博客， Nutanix Connect Blog 技术达人网站和博客 myvirtualcloud.net by Andre Leibovici http://myvirtualcloud.net/nutanix/
Virtual life style by Joep Piscaer https://www.virtuallifestyle.nl/
The Nutanix Bible by Steven Poitras http://nutanixbible.com/
Mark&amp;rsquo;s Blog by Mark Lavi http://mlavi.github.io/
Jeremy Sallee - Nutanix UI/Frontend 设计师 http://salleedesign.com/stuff/sdwip/home/
想知道Prism是怎么设计出来的：点这里
Virtual Dennis by Dennis Laube http://www.virtualdennis.com/category/nutanix/
如何ova格式的虚拟机导入Nutanix AHV 镜像服务能够支持Web界面上传导入的格式包括：raw, vhd, vmdk, vdi, iso 和 qcow2 磁盘，导入为Disk后，即可用做模板 如何在Nutanix中制作AHV虚拟机模板 使用acli命令：vm.</description></item><item><title>云计算时代的终结</title><link>https://martinliu.cn/2017/01/05/The-End-of-Cloud-Computing/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2017/01/05/The-End-of-Cloud-Computing/</guid><description>天下事分久必合，合久必分，移动互联网代表了现在的云计算时代，很多企业还正在朝这个方向发展呢！革命还没有成功，怎么这个时代就要结束了。来听听XenSource前CEO怎么给你解读边缘计算时代的到来。
“I’m going to take you out to the edge to show you what the future looks like.” So begins a16z partner Peter Levine as he takes us on a “crazy” tour of the history and future of cloud computing — from the constant turns between centralized to distributed computing, and even to his “Forrest Gump rule” of investing in these shifts.
But… how can we say cloud computing is coming to an “end” when it hasn’t even really started yet?</description></item><item><title>Nutanix AOS 5.0 新版本新特性</title><link>https://martinliu.cn/2017/01/04/Nutanix-AOS-5.0/</link><pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2017/01/04/Nutanix-AOS-5.0/</guid><description>Nutanix AOS 5.0 是一个很重要的功能更新大版本，它一气儿带来了46项之多的新功能；在您安装或者测试这个版本&amp;gt; 之前，先通过本文快速了解一下这些更新，可能是更加节省时间的方法。
主要功能清单 myvirtualcloud.net网站用了4个blog，讲了下面的36项新特性：
Cisco UCS B-Series Blade Servers Support Acropolis Affinity and Anti-affinity Acropolis Dynamic Scheduling (DRS++) REST API 2.0 and 3.0 Support for XenServer TechPreview Network Visualization What-if analysis for New workloads and Allocation-based forecasting Native Self-Service Portal Snapshots – Self Service Restore UI Network Partner Integration Framework Metro Availability Witness VM Flash Mode Improvements Acropolis File Services GA (ESXi and AHV) Acropolis Block Services (CHAP authentication) Oracle VM and Oracle Linux Certified for AHV SAP Netweaver stack Certified for AHV Prism Search Improvements (support for Boolean expressions) I/O Metrics Visualization 1-Click Licensing LCM – Lifecycle Manager Additional Prism Improvements AHV Scale Improvements AHV CPU and Memory Hot Add (Tech Preview) Advanced Compression for Cold Data Acropolis Change Block Tracking (CBT) for Backup Vendors Predictable Performance with Autonomic QoS NCC 3.</description></item><item><title>DevOps书单</title><link>https://martinliu.cn/2017/01/03/devops-booklist/</link><pubDate>Tue, 03 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2017/01/03/devops-booklist/</guid><description>学习DevOps应该会使用到的书籍清单。
我在豆瓣建立了一个书单，欢迎在豆瓣给我留言，评论和建议。豆瓣书单点这里。
本清单来自于《DevOps Handbook》书中提到的书，更新到第五本；《看板方法》、《精益思想》、《Implementing Lean Software Development: From Concept to Cash》、《第五项修炼:学习型组织的艺术与实践》、《探索吧!深入理解探索式软件测试》
《看板方法-科技企業漸進變革成功之道》 转自：Rubbyblog.wordpress.com/images/
今天要介紹看板方法的由來， 上面這本書是由看板方法之父 David J. Anderson 於: 2010年 4月所著。簡字版是 2014 年2月出版。這篇文章在我上 TechDays 課程時就想登出來了，想把好書介紹給大家。但由於台灣的書商都沒有進口，所以一直等到我拿到第一批書後，肯定大家可以在坊間買到書時才把他登出來。原文書名: Kanban: Successful Evolutionary Change for Your Technology Business.
看板方法：它是敏捷陣營中實施起來阻力最小，生產力又能大幅提升、前置時間大幅下降，而可預測性又絕佳的敏捷解決方案之一。好神奇喔 … 哈哈! 確實如此，所以我才會這麼急切的推薦給大家。另一個原因是Kanban Method 現在在美國正熱烈風行中，而我們現在開始追正是時候。為此放下了許多手上正在做的工作(包括一本 Scrum的教本)，努力開始推廣希望大家能受用。首先說明: 為何他推廣起來阻力最小?
※ 實施起來阻力最小:
因為David J. Anderson 本身是一個微軟的 PM出身，他跟大家一樣知道變革會讓許多人害怕，人們會認為自己的技術是否落伍了，開始擔心害怕變革會對自己的工作事業帶來不利，這種恐懼常常會帶來一種莫名的對立，因此在還沒開始變革之前就已經採取抵制的態度了。所以他創始的看板方法選擇從哪裡開始實施呢? 就從現在既有的流程開始。由工作者本身最熟悉的地方開始。起步的秘訣是甚麼呢? 是精實精神中從豐田系統中學來的原則，先從不浪費開始，作法: 在識別浪費後消除浪費。
※ 如何能讓生產力大幅提升?
由審視既有流程，依據 Little’s law的最大產出方法，接著找出阻礙最大產能的瓶頸所在，然後正視這個造成瓶頸的問題，把它顯現在看板上面，讓大家一起站在看板前面討論如何解決它，解決之後再持續進行改善的作業。
※ 前置時間大幅下降
過去我們都以為唯有透過良好的規劃及配合才能夠讓前置作業時間下降，但豐田企業的及時(Just In Time)備料讓庫存降至最低，讓半成品減至最少改變了工作流程的前置時間(Lead time)，因此得到大幅下降。
看板還是看板方法 (Kanban or Kanban Method) 英文叫 Kanban，上網去搜尋會得到一大堆有關製造業的看板資料。所以請使用 Kanban Method去搜尋，因此中文就該叫做「看板方法」。簡體版的作者有用心在翻譯因此翻對了，值得買來閱讀。全書分成四部分:</description></item><item><title>HPE 分兵两路进军超融合市场</title><link>https://martinliu.cn/2017/01/03/HPE%20%E5%88%86%E5%85%B5%E4%B8%A4%E8%B7%AF%E8%BF%9B%E5%86%9B%E8%B6%85%E8%9E%8D%E5%90%88%E5%B8%82%E5%9C%BA/</link><pubDate>Tue, 03 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2017/01/03/HPE%20%E5%88%86%E5%85%B5%E4%B8%A4%E8%B7%AF%E8%BF%9B%E5%86%9B%E8%B6%85%E8%9E%8D%E5%90%88%E5%B8%82%E5%9C%BA/</guid><description>关于HP超融合产品家族的变迁简史和相关评论，本文转自 HC 250? HC 380? What are they actually for?。
转帖：《HC 250? HC 380? What are they actually for?》 http://www.theregister.co.uk/2016/12/05/the_state_of_hpes_hyperconverged_play/
HP/HPE 超融合产品线发展如下图所示 +Comment The positioning of these two hyper-converged systems is confusing. We observe that the physically larger and vSphere-only HC 380, with its brand number larger than the HC 250, is for use by operators requiring operational simplicity, whereas the physically smaller and denser HC 250 is for more complicated operations in both vSphere and Hyper-V environments, yet it covers ROBO needs where customers don&amp;rsquo;t have skilled IT staff.</description></item><item><title>Nutanix CE All In One</title><link>https://martinliu.cn/2017/01/02/Nutanix-CE-all-in-one/</link><pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2017/01/02/Nutanix-CE-all-in-one/</guid><description>Nutanix CE是Nutanix社区版软件的简称，它是Nutanix企业版产品的功能精简集合，是体验和测试Nutanix技术的很方便的途径。
Nutanix Community Edition 社区版简介 这个产品目前的位置在 https://www.nutanix.com/products/community-edition/；目前这个页面还没有中文化，下面简单介绍以下。
Feature Rich Software 它是一个功能丰富的软件 Broad Hardware Support &amp;amp; Available On-demand 很丰富的硬件支持，在网上可以按需体验 Zero Cost 零成本 用Nutanix CE社区版体验，体验超融合技术的三个步骤。
注册 ： 这次Nutanix社区，下载安装镜像 部署 ： 在你的服务器上部署，或者在Ravello上在线开启体验；官方安装部署视频点这里 玩耍 ： 安装完之后就可以开心地玩耍了，有问题请移步 社区版论坛 用物理机安装和体验的几点注意事项如下：
物理机安装支持1，3，4个节点的部署；推荐内存在32GB以上；由于版本CE 2016.12.22的CVM的内存需求是24GB，由于加入了自服务门户功能；建议使用SSD硬盘，最好能混搭一些普通硬盘。 安装后的首次启动需要系统能链接互联网，否则CVM会启动不了，首次启动成功之后就不用再联网了 用虚拟机安装，请注意本机的内存，和给虚拟机分配的内存，网上也有修改对内存和CPU限制修改的脚本 产品在社区里的文档页面： 点这里
参考配置 Intel NUC 最新版一台，i7处理器，两条16GB内存，两条512GB硬盘。它的好处是便携；然而内存还是有限，不能跑多少个虚拟机。
相关文档 在VMware Workstation上安装Nutanix CE Nutanix Community Edition安装在vSphere环境中 浅尝超融合之Nutanix(上)介绍篇 浅尝超融合之Nutanix(下)安装篇 Nutanix超”容”合之ACS Acropolis Container Service(下)实战篇01 Nutanix超”容”合之ACS Docker Volume Plugin的使用和数据持久化测试 http://nutanix.club/ Nutanix圣经</description></item><item><title>美国西岸旧金山之行</title><link>https://martinliu.cn/2016/12/31/west-coast-SFO/</link><pubDate>Sat, 31 Dec 2016 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2016/12/31/west-coast-SFO/</guid><description>这次旅行的目的地是硅谷腹地圣何塞，工作了一周之后，周末在旧金山简单游玩了一下。
交通 从北京到硅谷（圣何塞）有了海航直飞的飞机还是很方便的，在淡季的时候票价也不错。如果你的目的地就在圣何塞市附近的话，乘坐这个航班无疑是最佳的选择。
我是星期天从北京出发的，飞机经过了11个多小时的飞行后，抵达圣何塞的时间是：同一天的上午。由于机场离我住的酒店太近了，我就经历了人生第一次，从机场走路去酒店入住。
我在圣何塞待了大约5天，公司和酒店离的非常近，而且公司每天的餐食足够让人忘记去找饭馆吃饭这回事，这也是我首次出差这么不计较吃饭这回事。
值得一提的是，一天和一位华人同事聊天，得知他家附近有OUTLETS，当时就说您那天下班回家，求顺道带去。第二天我如约坐上了这位同事的宝马和他一同经历了一次，硅谷人的下班。没想到的不到五点，在从圣何塞去往东湾的路上就非常的堵了，正常情况下40分钟的路程走了快两个小时。不过好在我近半年多创业公司的经理起了大用处，有很多谈资，对于这位硅谷的资深前辈来说也非常有兴趣。
乘坐Uber替代租车是我本次出行最明智的选择，Uber选择拼车，如果和您同程的话，交通费用会非常的便宜。我的几次必要的打车经历都是用Uber解决的。只是最后一天回家的时候，到时出了状况，由于前一天晚上Uber升级，导致需要密码登录，而我的那个备用手机又没有带，最后只能请房东打了一辆正常的Yellow CAB出租车。
乘坐Uber从圣何塞到旧金山市区的那一趟，让我在周五的下午再次领略了硅谷的堵车，足足走了3个多小时。从此我再也不觉得帝都是世界上唯一的堵车严重的城市了。
我在旧金山期间的交通是乘坐公交电车，价格便宜又方便；不过也部分依靠了这个红色旅游巴士，两天45刀的价格倒也不便宜；买票的原因主要是，当我暴走至金门大桥的北岸的时候，觉得好像再也不能走回头路，而且附近并没有方便的公共交通工具。因此就上车了，不过对于第一天的市区游也是增色不少，一下子就让我对三藩市的整个情况摸了个七七八八，对第二天的行程非常有帮助。
上图就是三藩市有名的叮当单车，其实就是有轨电车，由于保留了怀旧的车厢，因此一下子就成为了一个游客必选的项目。如果不是我买了CITY TOUR的票，我肯定也会去体验一把。
公司 Nutanix是我工作十几年来所加入的一家最年轻的公司，这家公司在16年9月刚刚IPO，公司只有六七年的时间，超融合架构这块独特的市场空间可以说是他们创造的。
公司目前还在一栋很平常的办公楼中，由于人员扩张的比较快，左侧的那栋楼也几层入住了。公司的文化还保留了比较浓的创业公司的气质，这么说是由于，公司的中高层大部分已经被来自于：VMWare、EMC、NetApp、Dell、HP等大公司的职业经理人们占据了，公司的执行层面上是不折不扣的职业经理人负责的路线，几天的培训下来，感觉所有的人都赶紧十足，大家对市场和机遇的感受和我们之前经历的所有公司都是不同的。很多本次一起来的同事中，有的是已经有一两年的Nutanix产品经验的，有的已经入职了半年左右的；相比之下我是第二周上班的新丁，在几天的培训过程中，我也是只有沉默的份。
两个大冰箱，左边其实还有一个冰箱一个冰柜，里面都是各种饮料和食品。 这些小货架上是零食和水果。这间屋子有人搭理，会及时补充缺少了的食品。这几天的培训管两餐，在加上这些零食和补给，基本上晚餐不吃也行了。到下班的时候，可以看见有人在这些货架和冰箱里自然地往背包里装东西，后来的两天里面我晚餐基本没有出去，和很快学会这种行为也很有关，晚餐不吃的另外一个原因是时差。这次我经理了前所未有的严重的时差，几乎每天下午6点左右就困得快要昏倒，到凌晨3点左右肯定是清醒的。当然这些食品肯定比不上一线的互联网公司，可是也基本上赶超了我之前所经理过的所有的传统公司的情况。工作相关的内容就此打住。
游玩 我住在了教会区的一个非常安静的民宅里面，是租的Airbnb的房间。房间的外形如下所示。
家里也非常整洁、宽敞和温馨。这家附近有公交车，30分钟可以到达渔人码头所在的北滩。我第一天的路线基本上是从渔人码头沿着海边不行到进门桥下，上桥，从桥上不行到桥的北岸，最CITY TOUR红色双层BUS，回城区，然后横穿过金门公园内部的一部分，在回到联合广场。之后我有步行到了三藩市的China Town吃饭。一天的暴走下来，其实对这个城市的感觉还是非常不错的。有几个可圈可点之处：
特色景点比较多，这里不一一枚举，都是大家耳熟能详的 城市地形高低起伏，建筑物各具特色，错落有致，绝无前篇一律的感觉。 城市的色彩丰富，特别是那些个精彩的墙壁彩绘 金门大桥 随拍的几张图片如下。
慕名上桥走一圈的游客还是蛮多的。距离对于我这样的暴走一组来说，也没啥强度。可以感谢的是苍天有眼，让我在这抑郁、寒冷的冬季，让我待了一周已经对天气绝望的心境再次激活。后来要走的几天里，天天是艳阳高照万里无云。
其他景点 渔老人码头比我想象中的小，而且由于并非捕鱼的季节，有赶上是寒冷的冬天，真的也就是觉得是到此一游，没有看到什么特殊的地方。 China Town的墙壁彩绘，不像是人随手为之，而这样质量的墙壁彩绘在三藩市还有很多很多。
金门公园是我这个跑步爱好者的毕竟之地，由于本次身体状态不佳，没有跑在这个公园里面；而是从东门到西门的暴走了一趟。公园的面积其实和纽约的中央公园差不多，也就是从东到西大约5公里左右。
公园里面被分成了很多不同的区域，正值周末各种狗友、航模、跑步、飞碟、航模等等的爱好者聚集在自己的区域里面消遣着周末时光。
走到了三藩市西侧的海边，面朝大海的位置离注明的悬崖屋餐厅不远，我可以清晰的看到那个餐厅的建筑物。
斯坦福 对于我来说各个著名的大学有很深的吸引力，想想这所大学和硅谷的IT行业是有多麽重要和紧密的联系。
上图是校园里著名的教堂，是一座美丽而古典的建筑，是校园的心脏。来这里游览应该从南边的正面进入，直接走到这个教堂，然后在看其他的部分。
美食 酸面包算是渔人码头景点的美食之一，性价比很高。 面包产自下面这家店。 最后的一次正餐，选择了北滩海景叫做Dinner的餐厅，主要吃个海景；餐食炸鱼陪薯条。 压轴的是这个早餐，点名叫“8 AM”；三藩市早餐分类在点评网站上排第五。吐司三吃。</description></item><item><title>EXIN DevOps Master 认证考试</title><link>https://martinliu.cn/2016/11/07/exin-devops-master-e8aea4e8af81e88083e8af95/</link><pubDate>Mon, 07 Nov 2016 15:19:08 +0000</pubDate><guid>https://martinliu.cn/2016/11/07/exin-devops-master-e8aea4e8af81e88083e8af95/</guid><description>DevOps这个词在去年参加红帽全球用户大会的时候就深深吸引了我，实际上哪个会上Docker容器的概念要比DevOps还火爆。Docker／openshift相关的session都尝尝是爆满的。从那里开始我逐渐感觉到了开源容器技术的强大和吸引力。
从红帽开始OpenShift的考试就是我在完成RHCA红帽认证架构师之后的一个心结，至今也没有完成。不过这根草我早晚是要拔掉的。主要是由于OpenShift是Docker ＋ kubernetes 的组合；是如今企业级PaaS容器平台的主要技术路线。总之离开红帽是如此的仓促，说实话这也是我职业生涯中的一个不小的遗憾。当时确实觉得 kubernetes 的命令行操作不是很方便，而且在OpenShift并没有降低这个门槛，也即是说在OpenShift里面还是要有一定的工作量和技能的要求在编写kubernetes的yml文件上。在这一点上，及时我熟练掌握了Rancher之后，同样发现编写compose file也是难以逃避的。在推广一步，大部分Docker PaaS平台也都是这样，很多产品也是在界面上提供一个文本输入框，让人输入容器服务定义文件的内容。
在最近的半年中，我的所有技术研究都集中在Docker和其服务编排技术上。与很多用户做过技术交流，PoC测试，有些单子也落地。总结后，有些结果让我感叹。国内的所有企业不区分规模和行业，其实他们对国内原生的创业公司是欢迎的，由于这些公司提供的是国产软件和技术服务。在Docker这个火热的领域中，已经有20多家国内创业公司，我想所有的公司也都已经接受到了这一点的福利了。外国软件通常给人的感觉是：不是国产软件（不要小看国内公司对国产软件的诉求），纯英文操作界面和文档，可能的水土不服，高昂的软件价格和服务费，如果技术太新的化很可能厂商也不具备足够的技术实力和服务力量。
经过了一些Docker容器项目之后，可以断言的是容器市场的火爆和它的技术优势是直接相关的。容器化之后的应用可以通过服务编排工具快速地部署／更新、弹性地伸缩和使用资源，优化其传统应用运维的若干缺陷。容器的轻量和just enough的隔离技术让资源池的管理更加简单，利用率大幅度提升，这对研发部门的环境管理是不小的提升，使CI的过程更加高效和经济。Docker对微服务的支持也深深地诱惑了所有开发者，做系统微服务实施开发者能想到的实施技术大多数会是容器。
以上容器的优势和特性使得国内的这些项目落地和实施的可能性进一步提高，甚至很多项目的速度远远超预期；按照我多年的经验看，一个软件技术型的项目，用户纠结半年到一年以上是很正常的。可能也跟国内企业包容本土化软件公司，追捧新潮技术直接相关；我观察到的一些项目，在2～4个月内落单的屡见不鲜。有些试点的DevOps咨询项目也落地很快。
这些项目都殊途同归地指向了DevOps这个关键词，这让我不得不从去年开始就关注和学习这个最佳实践。当然，我对DevOps的前途非常看好，因此当我听说业内出现了相关认证考试之后，我毫不犹豫地报名参加了。经过2个多月的缜密的准备，我终于幸运地一次通过了这个考试。考试获得了两个证书。
DevOps Master
DevOps Master 认证自由讲师
我参加的是讲师认证培训TTT，很高兴能成为Exin在国内的首批5个认证人员之一。在准备这个考试的过程中我学习了一些书籍，现在还在深度学习的书有两本。
我完成了这本黑皮书的读书笔记，很遗憾的是，我发现它的最新版，把封面改成了白底的了，我不能在叫它黑皮书／黑宝书了。这本书我起码看了两遍；目前正在调试它的书中的代码，代码中的营养还是很高的，计划尽快把所有代码调试通过；从而完成我许下多次的线上分享本书的诺言。
这本书被我称为CD红皮书／红宝书。本书早在10年就出版了，也就是说比Docker早好多年。他给我最大的印象就是，作者每一页上似乎都在介绍这做事情的原则和规矩是什么？我一点也不夸张，他对CD的介绍，就是通过讲解一系列在项目上的经验总结。对作者这种级别的经验，和写书的房子只能用一个词总结“服”。这本书太干，我至今还没有消化完。他让我看到了解决发布和变更风险的终极解决方案，没有一次性解决问题的部署／配置／发布工具，有的是历练和打磨了千万次的持续部署流水线；隐约地觉得没用入手的企业都会慢慢跟上的。
以上是我对DevOps的阶段性总结，跨度有半年之久。这半年中我逐渐看清了我的主要兴趣点，抛除所有其他主题，目前剩下的就是：云计算和DevOps。一方面觉得年纪不饶人，不能可能在和年轻人拼精力、体力和创意；我的背景和经验都让我感觉，在这两个话题上，我还是有很多年的经验和技术积累和总结的。云计算是（公有云＋私有云）未来企业IT基础架构的走向；DevOps是目前看比较正确的运作实践。一个便技术，一个便管理，正好完整覆盖了我的经验；在其对应的开源技术这个分支里，我想它们都还有这很多的为探索和研究的项目。</description></item><item><title>DevOps 的起点-入手微型数据中心</title><link>https://martinliu.cn/2016/07/01/devops-in-a-box/</link><pubDate>Fri, 01 Jul 2016 03:11:10 +0000</pubDate><guid>https://martinliu.cn/2016/07/01/devops-in-a-box/</guid><description>测试环境说明 我的笔记本电脑的环境描述如下。
OS MacBook Pro 2011 版， 2.3 GHz Intel Core i5， 8GB DDR3， 256 GB SSD。 OS X EI Capitan version 10.11.5
Docker Docker for Mac Version 1.12.0-rc2-beta17 (build: 9779)
$ docker version Client: Version: 1.12.0-rc2 API version: 1.24 Go version: go1.6.2 Git commit: 906eacd Built: Fri Jun 17 20:35:33 2016 OS/Arch: darwin/amd64 Experimental: true Server: Version: 1.12.0-rc2 API version: 1.24 Go version: go1.6.2 Git commit: a7119de Built: Wed Jun 29 10:03:33 2016 OS/Arch: linux/amd64 Experimental: true $ docker-machine version docker-machine version 0.</description></item><item><title>用 Docker 构建 Serverless 应用</title><link>https://martinliu.cn/2016/06/22/building-serverless-apps-docker/</link><pubDate>Wed, 22 Jun 2016 16:22:51 +0000</pubDate><guid>https://martinliu.cn/2016/06/22/building-serverless-apps-docker/</guid><description>Martin解读Serverless Serverless 不意味着没有服务器，而是从应用可以在一个抽象层上忽略它的存在，而只关注在功能实现上和自身的请求处理上；每一个功能实现在不是单纯的业务逻辑处理的代码，相反每个功能调用具有了 server 的特质，进化成为了一个具有自省、自知和自治的工作负载单元；他们更像是能够衍生出其它新功能单元的生物体。这样整个 Serverless 应用架构之内，每个生命可以衍生下去，子子孙孙无穷匮也。
本文编译了：https://blog.docker.com/2016/06/building-serverless-apps-with-docker/ 一下是正文内容。
处在这技术日新月异的时代里，新的技术浪潮经常对当前的技术产生着威胁和颠覆。在编写应用的时候我们目前经常谈论到“Serverless”技术。它的核心思想是把应用作为一系列的功能/function来部署，这些功能在需要的时候被按需部署。服务器管理应该是不需要去操心的事情，所有功能被按需调用，被运行在群集之上。
但是 Serverless 里不意味着没有 Docker，事实上 ”Docker 就是 Serverless”。你可以用 Docker 来容器化这些功能，然后按需地运行在 Swarm 群集上。Serverless 是一种构建分布式计算的应用的方法，而 Docker 是完美的构建和运行他们的平台。
从Server 到 Serverless 那么我们如何来编写 Serverless 的应用？让我们先看下这个例子：“一个有5个子服务组成的投票应用”：
它的结构如下：
两个 web 前端 一个后台的处理投票的 worker 服务 一个处理投票的消息队列  一个数据库 那个后台处理投票的进程是非常容易成为转换为 Serverless 架构的目标。在投票应用内，我们可以运行一点类似于下面的代码，来执行后台任务：
import dockerrun client = dockerrun.from_env() client.run(&amp;quot;bfirsh/serverless-record-vote-task&amp;quot;, [voter_id, vote], detach=True) Worker 和消息队列能用按需在 Swarm 上运行的容器来替换，并自动地按需扩容。
我们甚至可以消除掉 web 前端。我们可以这么做：用 Docker 容器来相应每一个HTTP 请求，每个 HTTP 请求都用一个自生长的跑着轻量 HTTP 服务器的容器来处理。之前使用的是长时间持续运行的 HTTP 服务器，现在变成了具有 HTTP 相应和处理能力的按需跑起来的容器，而且他们能自动地扩容来支持所有访问请求。</description></item><item><title>DockerCon 2016 D2 超萌码头酷黑客 大会圆满闭幕</title><link>https://martinliu.cn/2016/06/22/closing-general-session-moby-docks-cool-hacks/</link><pubDate>Wed, 22 Jun 2016 02:35:39 +0000</pubDate><guid>https://martinliu.cn/2016/06/22/closing-general-session-moby-docks-cool-hacks/</guid><description>Closing General Session 的主题是 Moby Dock‘s Cool Hacks ； 从字面意思上看，这个主题的意思是“超萌码头酷黑客”的意思。我已经看到了关于最后一天开幕主题演讲的评论，说是“剑指商业”什么的；而我认为 Docker 从开始的第一天，无论它是否开源，它都是为了商业利益而已。话在说回到开源，Docker 只是完美的应用了开源软件这种实践而已；而且docker 把开源这种模式应用的如此成功，并在商业上也如此让人眼红和侧目，这也算是开源软件商业化登峰造极的一种极端性个案。个人认为开源无疑是在软件行业中做出爆款技术当之无愧的首选的实践方式。我在红帽碰到很多参与开源十几二十年的老黑客，他们不乏会表达关于开源纯洁性沦丧的抱怨；我对此也非常理解和认同。而我更认同开源可以对软件技术带来无比活力的这个积极的方面。
言归正传，小编我还是“模拟现场”播报一下大会闭幕主题演讲的盛况。这是大会的结束的 session，现场的人数明显的少于第一天开幕式的人。在十几分钟内，人们稀稀拉拉的进入了会场。会场中的座位大约还有一部分空位。美女Mano 和 黑客Kristie 作为主要演讲人上台。美女上台后先用手机自拍了几下。两个人开始宣布，Docker 大会之后举行为期一个月的黑客大赛，这是我们的传统，Docker 大会虽然今天会结束，而docer 黑客大赛将从今天开始。我们来请大家欣赏三个非常酷的黑客项目演示。
本次大会的录音点这里 http://www.ximalaya.com/32280565/sound/17388272
黑客演示1：微服务自毁平台 Jeff 登场。Jeff 开始讲述微服务的故事，我们都在试图让基础架构做到冗余，容所有的服务都冗余，让群集能够自愈；但是故障，断网，宕机还是会发生。我们所做的这些真的能够保证业务不宕机么，服务不终端么？你怎么能确认这一点？因此回归到故障的发生上吧？如果服务要出故障，请让它有规律的发生。请程序猿和 ops 都投入到故障处理的战斗中，以此为契机来优化和改造应用，让应用变的更加强壮。我们都听说过混乱猴子，而 Jeff 团队正式帮人们构建一堆这样的工具的人。
有一个思路是：如何让我的系统的服务出故障，如何主动的在系统中注入故障。我们需要一种特殊的编排工具来在系统中模拟和触发故障的发生。我用容器做工具平台来触发故障注入的动作。当然这个故障是在容器架构的微服务系统中触发这个动作。
Jeff 开始做这个 Demo。说：如果你的”网络没有故障，天下太平。“其实这很无聊的说，有木有？有木有？我现在开始用工具来注入 网络延迟的网络故障吧！ 。用一个基于策略的工具。配置一个网络故障模拟的策略，故障什么时间发生，发生多久。这里设计一个每10秒钟注入一次网络延迟故障提高到600ms 的故障。然后配置故障影响的范围，这里使用 Docker 的 lable 来做故障发生节点的选择的条件。符合标签的系统将受到这次故障影响。我们的这个故障模拟编排系统，帮您提前体验故障的发生。现在你看故障发生了，从这些容器里面 ping google 的网络延迟比之前大多了， 目前延迟到了600ms。希望你们能开始体验和使用这个而工具。
黑客演示2：Serverless 架构的应用不是梦 Ben 是大家在 Docker 大会喜闻乐见的一个黑客，他经常给做 demo 和 session。他绝对符合超萌的标准。
Ben 开讲，Serverless 是如何做的？ben 认为 Serverless 是一种全新的应用编程的思路，而 docer 可以很好的支持这种思路，并实现和执行这种思路。docer 群集可以让Serverless引用按需执行，并让该应用的底层变得资源冗余并路由可达。ben 开始演示 他的几张 slides， 说 Sererless == docker这个概念。本开始讲解：如何用Serverless架构来实现投票应用的改造。如何把这个5个服务模块的纯粹容器微服务系统转换为 serverless 架构的应用。开始修改源代码，把发入队列的票，变成一个处理投票的容，把 http 服务器变成一个 CGIHander（）服务；但是 nodejs 不支持 CGIhander，肿么办？我用 perl 重写了这部分，为毛用 perl，被忘了它乃是古董级的黑客神器的好不好，呵呵！改造完之后的系统架构如下。架构是把处理 postgresql 意外的模块都重写了。数据库保留在最下层。这种Serverless重构实践遵从的原则如下。</description></item><item><title>DockerCon 2016 D1 Keynote</title><link>https://martinliu.cn/2016/06/20/dockercon-2016-d1-keynote/</link><pubDate>Mon, 20 Jun 2016 19:30:33 +0000</pubDate><guid>https://martinliu.cn/2016/06/20/dockercon-2016-d1-keynote/</guid><description>看点：开场乌龟引起了喵星人大战，首次有吉祥物开启的科技盛会。 和往常一样 CEO 和 CTO 挑大梁将首日 keynote。 所罗门提出了 Docker 技术发展的三个核心方向和着眼点，并在每个方向上做了新技术发布。 1. 开发者体验提升， 正式发布 Docker for Mac/Windws 2. 编排能力的提升，正式发布 Docker 1.12 ，其中有四项能力提升；这是要废掉所有其他编排器的节奏啊~ 3. 运维体验提升，正式发布 beta.docker.com ；这是和公有云深度结合的产品，分为 AWS 和 Azure 两个模块。 一共有三个实景演示，都没有出现问题，演示很成功。
现场录音 点上面的播放键，播放整场录音。请注意中间的数秒钟乃至数十秒的中断是正常，请快进收听。
开场 屏幕上出现了乌龟开始做 demo，运行了一个容器。 猫咪大战，混乱了，猫星人入侵了。猫叫~~乱作一团··· 发生了什么？ dockercon16 吹起了号角。 乌龟再次出现在电脑上，运行了另外一个容器惊喜，这次是美妙的音乐。 调皮的乌龟折腾完了之后，主题曲想起来。4000多人的场子，大家很期待。
CEO Ben Golub 演讲 Ben Golub CEO 出场。 Today we are all docker blue. 欢迎所有人。 我们和前两年的不同，我们发布了1.0 等等。 谈了很多 Docker 取得的成就。 感谢和表扬了社区。 感谢2900+贡献者。 社区的状态动态，每周超过300 PR，三分之二来自 Docker 公司之外。 docker meetup 的状况， 250+城市举行，125K 人参加聚会。 内容构建方面，docker hub 上有 460K 个应用，到目前为止有4.</description></item><item><title>下一代应用为中心的平台 OpenShift</title><link>https://martinliu.cn/2016/01/12/e4b88be4b880e4bba3e5ba94e794a8e4b8bae4b8ade5bf83e79a84e5b9b3e58fb0-openshift/</link><pubDate>Tue, 12 Jan 2016 04:05:46 +0000</pubDate><guid>https://martinliu.cn/2016/01/12/e4b88be4b880e4bba3e5ba94e794a8e4b8bae4b8ade5bf83e79a84e5b9b3e58fb0-openshift/</guid><description>Amadeus uses next-generation containerized application platform with OpenShift from Martin on Vimeo.
以上视频来源于：https://blog.openshift.com/openshift-3-amadeus-red-hat-summit-session-recording-recap/</description></item><item><title>用 Jekyll + Github 建立静态站点</title><link>https://martinliu.cn/2016/01/10/e794a8-jekyll-github-e5bbbae7ab8be99d99e68081e7ab99e782b9/</link><pubDate>Sun, 10 Jan 2016 01:01:25 +0000</pubDate><guid>https://martinliu.cn/2016/01/10/e794a8-jekyll-github-e5bbbae7ab8be99d99e68081e7ab99e782b9/</guid><description>新建库 建立一个用户名开头的库，如我的github用户名是 martinliu， 新建的库的名字为 martinliu.github.io ; 这个库将是存放web页面的。包括该域名下的站点的所有相关页码代码文件和相关css,图片等文件。
更新并上传新库 参考的命令如下：
[bash] git clone https://github.com/martinliu/martinliu.github.io cd martinliu.github.io echo &amp;ldquo;Martin Liu&amp;rsquo;s Github Homepage&amp;rdquo; &amp;gt; index.html git add &amp;ndash;all git commit -m &amp;ldquo;Initial commit&amp;rdquo; git push -u origin master [/bash]
打开浏览器测试你的网站，访问网址： http://martinliu.github.io ， 你已经可以看到你的初始化页码了。
Jekyll博客系统 Github网站上推荐使用Jekyll创建和管理这个博客系统。它是支持Markdown语法，不需要使用数据库，纯文本的静态网站和博客系统。使用它可以建立和管理一个风格美观，容易管理的网站，生成的网页可以上传到以上生成的网站库中。
安装Jekyll系统 我的测试系统：Fedora 23。操作步骤如下。 安装依赖的包和ruby环境
[bash] dnf install ruby ruby-devel gem gcc libffi redhat-rpm-config [/bash]
更用国内的rubygem源 [bash] gem source -r https://rubygems.org/ gem source -a http://mirrors.aliyun.com/rubygems/ gem update &amp;ndash;system
gem install jekyll [/bash]</description></item><item><title>My Arduino Project status</title><link>https://martinliu.cn/2016/01/04/my-arduino-project-status/</link><pubDate>Mon, 04 Jan 2016 16:00:59 +0000</pubDate><guid>https://martinliu.cn/2016/01/04/my-arduino-project-status/</guid><description>Source code on github https://github.com/martinliu/ArduinoProjects
Project 2 SOS led S.O.S LED device from Martin on Vimeo.
Project 2 blink led Arduino Project 1 blink LED from Martin on Vimeo.</description></item><item><title>vimeo video sharing vs youku.com</title><link>https://martinliu.cn/2016/01/01/vimeo-video-sharing-vs-youku-com/</link><pubDate>Fri, 01 Jan 2016 14:21:11 +0000</pubDate><guid>https://martinliu.cn/2016/01/01/vimeo-video-sharing-vs-youku-com/</guid><description>vimeo 的特别域名没想到还给我留着的 http://vimeo.com/martinliu 从国内访问和上传视频是有问题的，需要用vpn才能正常访问，vimeo能共享到Wordpress上的video是没有视频的，播放的时候稍微有点卡；就算是稍微卡一点，也比youku视频前后的广告好，以后计划转战vimeo发布视频了。</description></item><item><title>No Content Found</title><link>https://martinliu.cn/2015/12/29/54083/</link><pubDate>Tue, 29 Dec 2015 14:39:25 +0000</pubDate><guid>https://martinliu.cn/2015/12/29/54083/</guid><description>重新整理了blog的菜单样式，增加了三列显示模式，发布了各种格式的post，觉得blog样式还是越简单看着越顺眼。</description></item><item><title>Nino Rota - Main Title (The Godfather Waltz)</title><link>https://martinliu.cn/2015/12/29/nino-rota-main-title-the-godfather-waltz/</link><pubDate>Tue, 29 Dec 2015 14:08:24 +0000</pubDate><guid>https://martinliu.cn/2015/12/29/nino-rota-main-title-the-godfather-waltz/</guid><description>[wm_audio] [audio mp3=&amp;ldquo;http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/12/Nino-Rota-Main-Title-The-Godfather-Waltz.mp3&amp;rdquo;][/audio]</description></item><item><title>IoT 是怎么被黑的？</title><link>https://martinliu.cn/2015/12/29/iot-e698afe6808ee4b988e8a2abe9bb91e79a84/</link><pubDate>Tue, 29 Dec 2015 04:06:28 +0000</pubDate><guid>https://martinliu.cn/2015/12/29/iot-e698afe6808ee4b988e8a2abe9bb91e79a84/</guid><description>IoT有公众的立场，也有厂商的算盘。微软的动作是比较快得，2015年春季就发布了IoT战略，其他厂商IBM，Amazon等等也都有各自的布局。在硬件厂商这一次侧，Raspberry则占据了比较显眼的位置；确实也吸引了比较多的眼球。它从2013年起一气出了很多型号的板子。回忆起来，当时除了记得SoC技术是价格非常便宜的，并没有太多关注这种硬件相关的东西。直到昨天我入手Raspberry 2 model B后，大致玩了一下，我隐约的感觉，今天谈到的 IoT 和以往确实不同了；这或许是” 范在型智能可互联网 “ 时代的到来，智能和wifi的植入是maker们欲罢不能的一件事情，在商业上是必要的卖点和噱头，是用户现实的和潜在的需求；可联网和可连接互联网，绝对是两个层面上的概念；封闭的信息孤岛式的网络已经无法通过自身实现其信息的价值，信息价值的实现必须通过与互联网的链接和互动来实现。联网意味着链接互联网，在哪里信息的融合和分析再反馈回到真实世界中，并完成某种动作，在这个闭环中，真实世界被投射到虚拟世界中去，然后再得到一个预期的反馈，计算机信息处理和控制在过程中起到了推动作用，真实世界中的人或者物对它的一个反馈使之所有抽象而似乎无形的信息技术和互联网实现了存在的价值；这是一种虚拟现实世界和人类主动且有意识地互动。
扯远了，在某东购买的树莓板是这个这样的，如下图：
它链接外部世界的方式就是通过板子上面的三个接口，下侧比较明显的排针，中上侧白色竖着的，和中右侧的两个白色排线插头。这些主要是链接传感器用的。另外还包括板载的4个USB口，USB口也可以接外设和Wifi模块。当然还有网线插口。
这是 Raspberry 的2代B型版，它的特点是计算处理能力是比较强劲的。感觉做控制中心比较合适，如智能家庭的总控制中心。它还可以和Arduino组合起来，Arduino 的处理能力较低，可以通过它作为外部传感器的hub，单纯的做信息收集，和动作指令的执行（发出继电器开关的开合信号等）。就某种单一具体的IoT功能的实现，Raspberry和Arduino没有太大的差异。但是在构建复杂系统的时候，把两者结合起来的设计还是多见的。接下来，我可能会去把Amazon上的那个Arduino开发套装买回来，这样就配齐了，当然 Raspberry A型板也可以入。
如果你把所有的东西都连接到互联网了，那么安全性怎么保证？今天在http://www.wired.com 网站上看到的头条就是《How IoT got hacked 》看完后，不得不倒吸一口凉气。不过安全总是在任何时间点、场合拿出来，可以吓死人的东西。不hack出一些值得被人黑的东西来，那你还能做出什么更有意义的事情呢。以上就是本次树莓派入手记录贴。</description></item><item><title>超人组成的团队还是超级团队</title><link>https://martinliu.cn/2015/10/12/e8b685e4babae7bb84e68890e79a84e59ba2e9989fe8bf98e698afe8b685e7baa7e59ba2e9989f/</link><pubDate>Mon, 12 Oct 2015 06:33:12 +0000</pubDate><guid>https://martinliu.cn/2015/10/12/e8b685e4babae7bb84e68890e79a84e59ba2e9989fe8bf98e698afe8b685e7baa7e59ba2e9989f/</guid><description>建议所有管理者都可以反思一下：是否需要supper chicken 团队。先看下这个视频。 http://video-subtitle.tedcdn.com/talk/podcast/2015W/None/MargaretHeffernan_2015W-480p-zh-tw.mp4
About the book In this wise and witty guide to creating strong company culture, business leader Margaret Heffernan lays the groundwork for a new kind of thinking: Organizations can create seismic shifts by making deceptively small changes.
Far beyond a prescriptive list, this book spills over with fascinating anecdotes from organizations around the world. Heffernan reveals the surprisingly small changes any organization can make: how to empower every person as a leader: how to open channels as a real, active listening; the important of cutting back hours (and also leaning into crunch time); why leaving the office does wonders for your working brain; how conflict works as an essential tool for creative thinking; why companies that actively solicit involvement beyond their walls are so much more effective; how simple activities strengthen social capital between workers.</description></item><item><title>Wordpress 创始人英年早逝-结肠癌</title><link>https://martinliu.cn/2015/09/30/wordpress-e5889be5a78be4babae88bb1e5b9b4e697a9e9809d-e7bb93e882a0e7998c/</link><pubDate>Wed, 30 Sep 2015 12:45:29 +0000</pubDate><guid>https://martinliu.cn/2015/09/30/wordpress-e5889be5a78be4babae88bb1e5b9b4e697a9e9809d-e7bb93e882a0e7998c/</guid><description>今天看到这条让人哀伤的新闻，真是感觉很难过。我是一个多年的Wordpress用户，本博客也是wordpress些的，而且记录多年的文章。wordpress是一个能让人很着迷的程序。它是一个__GPLv2__的开源软件。对我来说有一件事情是始终在于之斗争的，这就是“测试/更换wordpress的Theme和插件”；不夸张的说，当一个不需要编写一丁点css/php代码的人也能够完美地控制一个网站的功能和外表的时候，你会觉得渐渐的忽视了这个网站软件本身，你会被一下子陷入到，那浩如烟海的与之共生的生态系统所开发的免费资源中。wordpress具备了开源软件的一个核心特质“提供开放的平台，让周边的开发者和设计师能通过扩展开发来够推动它的用户社区的发展和繁荣”。 以wordpress为核心的周边生态系统有：功能插件、theme设计、SOE咨询、网店功能等等；以上这些养活了互联网上无数的个体或者公司；给无数的网站设计爱好者提供了创造和互动的机会。虽然，我最近对blog软件的注意力渐渐地转向了ghost，但是本站必将持续使用wordpress，会继续一如既往地关注它可能会给用户带来的惊喜，长期使用和关注一个开源软件的体验是无法替代的，是欲罢不能的。仅此献给Alex King，希望他的灵魂能升入天堂，一路走好。
Alex King是wordpress的创始人之一，他的个人blog停止于2015-8-24日的一篇自己关于他的病情的文章，到目前为止有142个回复。http://alexking.org/about  这个页面是他的自述页面。</description></item><item><title>Ghost 博客</title><link>https://martinliu.cn/2015/09/27/ghost-e58d9ae5aea2/</link><pubDate>Sun, 27 Sep 2015 15:03:12 +0000</pubDate><guid>https://martinliu.cn/2015/09/27/ghost-e58d9ae5aea2/</guid><description>话说本站也经历过很多变迁，使用的系统主要经历如下：google的blogspot （正式开始写blog的第一篇子在那，后来被墙）&amp;ndash;&amp;gt; 某共享wordpress平台（免费，名字已经几乎忘记了）&amp;ndash;&amp;gt; 免费国外VPS 主机wordpress (主机的ip很不靠谱，经常被墙) &amp;ndash;&amp;gt; 国外付费 VPS wordpress + 国内CDN，现在这样一直快三四年了。
Wordpress用了这么多年下来，真是觉得什么都可以做了，其中有一段时间也捣鼓过一阵子Drupal，但是还是觉得不如wordpress好使，它的功能非常成熟；themes和plugin 的生态系统非常成熟；价格在30～50$的themes我也是买过几个了；可是最后还是维持在了当前这个free theme 。
Ghost 给我的感觉就是简洁、干净和快速。http://hidocker.io 打建的过程中更是让我彻底的感觉到它的这些特点。它依赖的 nodejs和ngnix 两个包都只有几MB大小，它的安装包也很小。因此安装和配置也非常的简单，数量了10分钟之内就完成安装配置。使用了 ghost 两天之后，客观地讲它还是比较初级阶段，很多扩展和的定义都必须修改代码，这可能就会把恐惧修改代码的大批人拒之门外；甚至于安装新的theme这样的工作也是在linux的shell里面完成的。
之后我会发布一篇详细的安装文档到 http://www.aws-faq.com/ 上，点这里 http://www.aws-faq.com/aws-ec2/ghost-%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE.html</description></item><item><title>Atomic Host 原子主机最简测试</title><link>https://martinliu.cn/2015/07/18/atomic-host-e58e9fe5ad90e4b8bbe69cbae69c80e7ae80e6b58be8af95/</link><pubDate>Sat, 18 Jul 2015 13:29:45 +0000</pubDate><guid>https://martinliu.cn/2015/07/18/atomic-host-e58e9fe5ad90e4b8bbe69cbae69c80e7ae80e6b58be8af95/</guid><description>环境准备 本文使用笔记本电脑+KVM虚拟化进行以下的测试过程，当然也可以用其它的操作系统加虚拟化软件的组合，测试机需要满足以下的条件： 测试虚拟机的建议配置1C/2GB/10GB 虚拟机使用的网络需要能连接到互联网 虚拟机需要能加载光盘iso文件 可以执行起停虚拟机操作，能通过控制它登陆来做初始化配置
本文测试机是Lenovo T440s笔记本电脑，安装的操作系统是Fedora 22，使用KVM虚拟化，用Virt-Manager做GUI图形管理工具。建立了一个NAT的静态虚拟网络，虚拟机可以使用该网络来从互联网下载需要的文件包。
下载Fedora Atomic Host虚拟机文件；下载页面： http://www.projectatomic.io/download/ 点击绿色的下载按钮。下载qcow2格式的Atomic Host虚拟机文件。复制下载的文件到虚拟机运行的存储目录中，文件名可以是master.qcow2，新测试虚拟机会基于它创建。
在通过这个虚拟机模版文件生成测试机前，需要准备一个init.iso的文件，用来初始化测试机的主机名和初始用户密码。
[bash] [root@martin-fedora vm]# cat meta-data instance-id: master local-hostname: master.xenlab.com [root@martin-fedora vm]# cat user-data #cloud-config password: smartvm ssh_pwauth: True chpasswd: { expire: False } [root@martin-fedora vm]# genisoimage -output init.iso -volid cidata -joliet -rock user-data meta-data I: -input-charset not specified, using utf-8 (detected in locale settings) Total translation table size: 0 Total rockridge attributes bytes: 331 Total directory bytes: 0 Path table size(bytes): 10 Max brk space used 0 183 extents written (0 MB) [/bash]</description></item><item><title>红帽媒体日</title><link>https://martinliu.cn/2015/07/14/e7baa2e5b8bde5aa92e4bd93e697a5/</link><pubDate>Tue, 14 Jul 2015 14:20:24 +0000</pubDate><guid>https://martinliu.cn/2015/07/14/e7baa2e5b8bde5aa92e4bd93e697a5/</guid><description>本次演讲用了大约25分钟，超时了大约5分钟多，但是其中有些观点还是没有叙述的很倒位。只能算是我的一种理解和解读，希望对道场的媒体朋友们对认识红帽公司有帮助。
演讲源版slide和录音在这个网页上： http://investors.redhat.com/events.cfm 的这部分：
Jun 24, 2015
10:30 AM - 1:00 PM ET
Red Hat Analyst Day
Listen to webcast
View Presentation
12.2 MB
Add to Briefcase
View Additional Information
我做了Pual这一段的翻译，翻译的文档下载点这里：[RH_Summit_Analyst_Day_Master_20150714_MartinLiu](http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/07/RH_Summit_Analyst_Day_Master_20150714_MartinLiu.pdf)</description></item><item><title>Ovirt 服务器虚拟化测试</title><link>https://martinliu.cn/2015/07/12/ovirt-e69c8de58aa1e599a8e8999ae68b9fe58c96e6b58be8af95/</link><pubDate>Sun, 12 Jul 2015 11:16:44 +0000</pubDate><guid>https://martinliu.cn/2015/07/12/ovirt-e69c8de58aa1e599a8e8999ae68b9fe58c96e6b58be8af95/</guid><description>本文安装和测试的软件是Ovirt+KVM的服务器虚拟化，这两个项目是红帽RHEVM+KVM服务器虚拟化的上游社区产品。可以通过这个文档清晰的了解到红帽服务器虚拟化产品的大体功能，基本特点。本测试文档使用的是Centos7+社区yum 源；因此是最新的ovirt和kvm的功能。如果是正式的企业级需求测试，请使用光纤或者传统存储，从而达到和vmware等商业产品最好的类比测试。尽量避免使用嵌套kvm虚拟化的方式，除非您很熟悉Linux，使用两个笔记本是最简单的测试环境。
下图是Ovirt服务器的详细架构图。其中的ovirt-engine是本文安装和部署的部分，是用一个centos7的虚拟机安装的。Host1也是用一个centos7的虚拟机安装的。半年之前我也配置过一次嵌套kvm，根本是一头雾水，而且还没有成功，不过这次的配置过程却这么简单容易，就正常工作了。希望简单一点的人，可以把Host1用物理机来安装，也会节省很多时间。
[caption id=&amp;ldquo;attachment_53901&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;512&amp;rdquo;]ovirt 架构图[/caption]
KVM嵌套虚拟化准备 在测试KVM服务器虚拟化的过程中，如果您能有独立的物理机跑Hypervisor，那么您可以忽略本节。至今进入ovirt的安装。 下面的测试的物理机是 Lenovo T440s 笔记本，运行的 Fedora 22 操作系统，使用 KVM manager 做虚拟机的管理工具。本次测试用到两个虚拟机：
ovirt: 运行服务器虚拟化的管理机ovirt，这个程序类似于vmware 的 vcenter。
ovirt-host : 用来被ovirt管理的hypervisor；使用 kvm 嵌套 kvm 的方式，来跑虚拟机。
确认本机的服务器虚拟机CPU Bios配置正常。
[bash]
egrep -c &amp;lsquo;(vmx|svm)&amp;rsquo; /proc/cpuinfo 4
[/bash]
本机是i5的CPU，双核开启超线程，显示为4。还没有启用嵌套KVM的虚拟机，需要新建下面这个配置文件，操作系统不同，可能稍微不同，下面是以 Fedora 22 为例。
vi /etc/modprobe.d/kvm-nested.conf 编辑以上文件，增加下面这行参数即可 options kvm_intel nested=1
运行下面的命令，为操作系统内核加載此功能。
[bash]
modprobe -r kvm_intel # unload modprobe kvm_intel # reload again
cat /sys/module/kvm_intel/parameters/nested Y</description></item><item><title>Boston 和 NYC 的 运动日志</title><link>https://martinliu.cn/2015/07/09/boston-nyc-running-log/</link><pubDate>Thu, 09 Jul 2015 15:42:07 +0000</pubDate><guid>https://martinliu.cn/2015/07/09/boston-nyc-running-log/</guid><description>波士顿的跑步 第一跑 - 12公里
推辞了饭局的夜跑，跑步过程中被阵雨浇透，找错了回来的桥，路程没有记录完整。
第二跑 - 8公里
本想跑的比前一次更远，结果起晚了，跑了8公里就被晒的不行，汗狂出，提前失去斗志，返回。这时感觉还是有跑友会更好些。
第三跑 - 10公里
陪同事满跑10K，在一个海湾处，居然海湾是闭合的，跑了三圈，其实那个Castle Island Park有点意思，可惜没有进去。
第四跑 - 10公里
领略了市内最繁华的街道，最美的市中心公园，跑过了 林阴道，再次重温河边的感觉，这是下午下班后的跑步，不管你是什么时间，什么地点跑，基本上到处都是跑步的人。
波士顿骑行 第一次 46.4 km
自行车租金是25刀，下午开完会发现其它两个同伴时差严重，因此我独自骑行出去。骑行的方向其实是波士顿马拉松延伸的方向，只是那个路线是要在公路上的，车多没法骑行那个赛道，骑车出去闲逛，也超过了一个全马的距离，基本上把哈佛和MIT逛清楚了。
第二次 21.7 km
第二次，本来不想去，可是需要给伙伴去带路，就带他们走了一遍昨天的路，让他们也浏览了我看过的景点。
纽约跑步 - 中央公园 10KM
中央公园打卡跑过，很满意的得到了这个路线，公园里里面的运动氛围很强，爽跑一圈。</description></item><item><title>首次美国东海岸之旅</title><link>https://martinliu.cn/2015/07/09/e9a696e6aca1e7be8ee59bbde4b89ce6b5b7e5b2b8e4b98be69785/</link><pubDate>Thu, 09 Jul 2015 14:31:15 +0000</pubDate><guid>https://martinliu.cn/2015/07/09/e9a696e6aca1e7be8ee59bbde4b89ce6b5b7e5b2b8e4b98be69785/</guid><description>行程 在波士顿的住宿是非常完美的体验。先住了两天剑桥的LeMeridien（SPG）；由于6月是我的生日，因此酒店给我加了早餐，使用IBM的企业代码订房确实便宜了一大块。剩下几天住的Westin Waterfront，和另外一个SPG白金卡同事同住，由于是白金卡，所以直接就给升级到套房了，当然附赠免费早餐；今房间一看，很大的两间房间，各自独立的电视和洗手间。
说下在美国第一次做长途BUS的感受，我是在网上定的票。从波士顿到纽约4个多小时的路程，28$的价格。由于我记错了时间，同事开车送我去车站后，我看了票后，才惊醒，到达候车室的时候，我的那班车已经开车15分钟了。车票是电子邮件中的二维码。我问车站的工作人员，他说你需要去standby下一班车，下一班车要过1小时后发车，我到了那边standby的队列中。心里真是有点没谱，如果那个车上没有空位的话，我就残了。还好，开始上车时第一批是买了那班车票的人；第二批是standby的人，还好有空座位。最后一波是需要副现金上车，而没有买票的人，那部分人好像话了50多刀。在开车的过程中没有停车，车上居然有卫生间，就在车的尾部，我也用了一下，确实很方便，很干净。到了纽约之后，一下车我就走向最近地铁站开始了我的纽约之行。
波士顿 波士顿有美国的雅典之称，到处透露着历史感，街道相当干净，气温体感非常舒服。这是一个运动的城市每年的波士顿马拉松比赛不知道吸引了多少人，作为一个跑步爱好者，我到此地也算是朝圣之旅了。到的第二天，就有BAA的10公里的比赛，我看到了才意识到，应该提前报名，说不定可以参加上呢！
在波士顿我跑了三次。第一次本想早晨跑，提前规划好的路线，可是早晨下雨，没有跑成。结果晚上回来后，同事拉我去配客户吃饭，没去，夜跑了十二公里。在跑的中间下雨了，是阵雨，淋了我20多分钟，浑身湿透了，快回到酒店的时候雨停了。回来查跑步轨迹一看，还是跑错了路线，返回的桥还是选择错了，回程的路线基本正确。第二次跑步是早晨晨跑，起的有点晚，还是在查尔斯河边和前一次一样，这次看到了很多早晨练习划船的人，非常多的人在河上划着各种船，有些是有教练指导的，有些是自己联系的。第三次是和同事一起，在海边找了一个港口的地方，港口恰好是环形封闭的，跑了3圈，10公里。第四次是开晚会去跑步，在市中心的酒店跑到城市中心公园，有跑回查尔斯河，然后返回，返回过程中遇到上坡下坡，一个人有点累，10公里做罢。回程一边找路一边欣赏城市，也算是把波士顿城区看了仔细。剩下两次运动是骑行，这里骑行的人也很多。自己骑了一次，和同事一起骑行一次，一共50公里。顺便欣赏了哈佛和MIT学校的校园。
波士顿的龙虾不可以不提，吃了三次，后两次在同一家吃的，这家专门做龙虾，吃的非常过瘾。
纽约 在纽约我住在airbnb的一个民宅里，主人是个南美小国的人，他没有工作；估计也是租来的房子，然后转祖一间卧室做房东，airbnb算是让他也有钱赚，有生计了。这个公寓里中央公园很近，我去中央公园跑了一次，感觉非常好，那里有浓厚的运动气息，各种人在里面跑步，骑车，散步，骝狗。两次穿过中央公园都有看到跑步比赛。我买了一张5天的地铁票，算是用足了。去了很多景点，感受到了大纽约的感觉。现在感觉纽约一周可以逛的差不多，4天根本不够。我最完美的两天是大都会博物馆和自由女神/爱丽丝岛。大都会博物馆里面我足足泡了一天，停没电了3个讲解器；直到人闭馆赶人，我才走，看了四分之三不到。真是有点走马观花，很多没有看仔细。自由女神像其实可以注册一下，就能够登到它的身体里，到达头部，从眼睛往外看，我也是去了才知道。爱丽丝岛值的仔细看，它是美国移民博物馆，看了它，彻底颠覆了我对美国移民的看法。
时间有限，工作太忙，就这个流水帐，算是总结一下这次美国东岸之旅吧！
图片 以下图片都是手机拍摄。
[gallery link=&amp;ldquo;file&amp;rdquo; ids=&amp;ldquo;53844,53845,53846,53847,53848,53849,53850,53851,53852,53853,53854,53855,53856,53857,53858,53859,53860,53861,53862,53863,53871,53865,53866,53867,53868,53869,53870,53873,53874,53877,53876,53875,53878&amp;rdquo;]</description></item><item><title>icinga2 企业级功能评测1</title><link>https://martinliu.cn/2015/07/09/icinga2-e4bc81e4b89ae7baa7e58a9fe883bde8af84e6b58b1/</link><pubDate>Thu, 09 Jul 2015 08:44:43 +0000</pubDate><guid>https://martinliu.cn/2015/07/09/icinga2-e4bc81e4b89ae7baa7e58a9fe883bde8af84e6b58b1/</guid><description>Icingaweb 2 用户权限管理 icingaweb 2 是诸多GUI中最新的一种，也有替代其它之前所有GUI的趋势，目前看还比较新，只有最基本的功能。登陆Web界面的用户，用户和组的信息可以使用自己的数据库存储或者配置文件存储，也可以使用外部的LDAP集成，使用php-ldap模块集成外部的LDAP/MS AD服务器。 具有完整的RBAC模式; User -&amp;gt; Group -&amp;gt; Role = Permission Set（操作 action） + monitoring/filter/objects(范围 scope)
Icinga2 的联系人和联系人组 在icinga2服务器端，在配置文件中定义了组和用户，他们在Web GUI界面上叫做 Contacts / Contactgroups 。
[bash] [root@icinga2-test conf.d]# cat users.conf /**
The example user &amp;lsquo;icingaadmin&amp;rsquo; and the example group &amp;lsquo;icingaadmins&amp;rsquo;. */ object User &amp;ldquo;icingaadmin&amp;rdquo; { import &amp;ldquo;generic-user&amp;rdquo;
display_name = &amp;ldquo;Icinga 2 Admin&amp;rdquo; groups = [ &amp;ldquo;icingaadmins&amp;rdquo; ]
email = &amp;ldquo;martin@aws-faq.com&amp;rdquo; }</description></item><item><title>Red Hat Summit之Paul的开源逻辑思维</title><link>https://martinliu.cn/2015/07/01/red-hat-summite4b98bpaule79a84e5bc80e6ba90e980bbe8be91e6809de7bbb4/</link><pubDate>Wed, 01 Jul 2015 06:52:00 +0000</pubDate><guid>https://martinliu.cn/2015/07/01/red-hat-summite4b98bpaule79a84e5bc80e6ba90e980bbe8be91e6809de7bbb4/</guid><description>应用为王，操作系统是心跳。从整个行业的角度，而不只是操作系统和某种工具的角度看，行业已经发生了重大的变化。下面是一些例证。
VMWare几年前说操作系统已死，可是最近却发布了Linux操作系统的容器技术的产品线。
微软也把它的一些技术开源了，并且在这些方面取得了一些它们认为可喜的进展。
IDC的调查显示，数据中心的操作系统目前是两个主要选择：Linux和Windows。以上说明了：开源不再是非主流，而进入了数据中心主流技术，企业现在开发的应用将不得不在两种操作系统中做出选择。
[caption id=&amp;ldquo;attachment_53819&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;800&amp;rdquo;] Keynote 笔记[/caption]
从这个角度出发，Red Hat的使命才刚过开始，它中在用Linux和相关开源技术来变革整个企业数据中心的技术堆栈；从基础架构一直到应用开发。
为何开源技术当今如此之火热？开源技术正在解决和处理现实社会中那些最复杂的业务问题。为什么会这样？驱动因素是什么？是动态变化的企业业务需求。
开源技术最擅长的是快速地创新，这成为了企业技术创新和业务变革的动力，IT也逐渐因此从成本中心转变为价值和创新中心。
开源不仅仅只是看到源代码，更重要的：它是自由开放的平台，是分享的平台，它萌生了持续不断的创新，一个创新基于另外一个创新之上，一环接一环地扩散开来，根本停不下来。 这意味着技术问题能够被更快、更好地解决；而不是丢给私有软件技术厂商们各自独自解决，企业最等来消费他们的产品。
Linux是计算供给层，毫无疑问云计算和软件定义存储都基于它。它不能叫做一个Linux社区，而是一组相关的社区项目协作在一起共同创新，这样才带来了企业可以使用的高性能稳定的操作系统；这样Red Hat才有可能给企业带来企业级Linux操作系统。
KVM是计算的虚拟化抽象层，VMWare最先进入这一企业市场，它试图用封闭的管理层和锁定的模式来控制这个市场，从而控制客户。Red Hat的使命是：为企业提供了Linux操作系统和至上的开放虚拟化技术；企业可以在这个层面消费开源开放虚拟化技术，并做出备份的方案选择。
没有Linux和开放虚拟化云计算就不存在。公有云提供商使用这些技术构建了共有云服务。可是企业不想让自己的业务运行在防火墙之外，因此OpenStack 项目应运而生。它让企业构建私有云成为可能。Red Hat在OpenStack上面所有的贡献都100%的提交到社区，成为主流代码的一部分；从而OpenStack能够运行在Red Hat Linux和KVM之上，这使得Red Hat巨大的Linux生态系统的价值服务与OpenStack领域；企业能够借此放心地在OpenStack构建的私有云，并运行企业重要的业务。
在开源的开发框架里，开发人员可以有更多、更新的开发语言、开发工具、库和社区的支持，这使他们能更快地解决业务问题。这些框架首先被广泛应用于互联网行业公司。Red Hat基于JBoss社区为企业提供了企业级的应用服务器、集成工具、规则引擎和丰富的开发语言。让企业级应用能像互联网公司一样地使用开放应用所需的开发框架和开发平台。相比私有技术公司用了四十多年达到目前的程度，开源领域的快速创新用十几年就做到了，发展速度比私有软件快很多。
现在看到了基础架构和开发框架都极大地受到了开源技术的影响、冲击和变革。运维和开发之间亟待出现一种融合技术，来改善目前的互为孤岛的现状。这种联系将使开源技术为他们带来最大的共同价值。
容器技术实际上在操作系统中存在了很多年了，只是最近才被引入开源领域；它的出现将确实会改善孤岛问题，为开发人员解决了应用在各种混合的计算和存储平台之间的可移植性、一致性和敏捷性等问题。
开发和运维之间的割裂还导致了业务创新的迟钝，这个问题已经持续存在很多很多年了。因此Red Hat发布了Red Hat Atomic Enterprise Platform。让企业应用可以安全地在各种形式的计算平台上一致地运行。Red Hat 发布了OpenShift v3 ，它是一些列容器的自动化调度和部署管理工具集合，并包含全套的开放应用开发框架平台。它能帮助企业基于容器技术发展出新一代的混合应用。
为何企业IT技术会有这些变革？为何这些变革会发生？其实还是企业不得不快速地响应业务的变化，企业不得不使用IT技术来创造出更多的价值，应用开发不得不跟上需求变化的脚步，基础架构的运作和运维再也不允许我们手工地安装一台服务器，频繁地去手动更改网口跳线。企业必须面对和适应动态的业务变化，不光要从开发层面，同时从运维层面。
企业需要构建和重写无状态的业务应用，并使用软件定义存储来解决传统存储的空间不能无限扩容的问题。Gluster和Ceph在这方面已经日臻成熟，并或将去替换私有的传统存储技术。
企业应用DevOps是一种趋势，它不是一个理论，而是一种实践。Red Hat的全线企业级开源技术平台已经做好了准备，企业现在就可以开始DevOps实践之旅。
开源和闭源之战将不可逆转地持续下去，Red Hat将持续守护开源阵营。私有软件技术不愿意看到逐渐开放的变化，他们不希望开放，不愿意去分享；Pual坚信开放不仅仅是看到代码而已，而是与之共生，是开放的软件开发流程，是基于开放代码上的不断创新活动。这是一场宏大的战役，开源逐渐开始在一些战斗中取胜，待到明年此时，或将看到开源是如何在企业IT基础架构上全面获胜的。
本演讲的官方Blog报道：http://summitblog.redhat.com/2015/06/24/paul-cormier-announces-new-products-and-technologies-at-red-hat-summit/
下面是演讲实况视频。</description></item><item><title>Boston Running #1 Charles River</title><link>https://martinliu.cn/2015/06/21/boston-running-1-charles-river/</link><pubDate>Sun, 21 Jun 2015 08:15:46 +0000</pubDate><guid>https://martinliu.cn/2015/06/21/boston-running-1-charles-river/</guid><description>时差如期而至，现在时本地时间清晨3：40，我还是一点睡意也没用，百无聊赖中计划一下明天的跑步路线。根据Boston的Garmin的热力地图，我观察了一下Clarles河附近的跑步路线，看着很不错。计划明天早晨跑右侧的这一部分。如下图所示。
这部分是Charles河入海口的这个部分。从酒店出门大概的路线如下：
从酒店 右拐 到 Sidney St + Massachusetts Ave， 在右拐一直到河边
到河边的桥头，右拐顺河边向东跑，一直跑到头
在Longfellow bridge 桥下，顺着Edwin H Land Blvd穿过该桥
延河边来到 Museum of science 前，左拐，绕Lechmere Canal Park，来到科学博物馆门前的路
经过Charles大坝这条路，到河的南岸
在State Police 警察局门口右拐到河边，眼查尔斯河滨大道一直往西跑
经过Boston University Bridge，继续向前跑
经过 Western Ave Bridge 继续向前跑
到了John W. Weeks Bridge 上桥过河，到达河对岸
进入 Dewolfe St， 到Arrow St 右拐
跑回 Massachusetts Ave, 沿着街道一直跑回去</description></item><item><title>icinga2 监控工具评测</title><link>https://martinliu.cn/2015/06/18/icinga2-e79b91e68ea7e5b7a5e585b7e8af84e6b58b/</link><pubDate>Thu, 18 Jun 2015 14:14:51 +0000</pubDate><guid>https://martinliu.cn/2015/06/18/icinga2-e79b91e68ea7e5b7a5e585b7e8af84e6b58b/</guid><description>本来想写一个安装手册，可是安装完成之后发现其实非常简单，最后就把题目改为评测了。本文也不是全面的评测文章，关于它的能力和功能，待后续了解的深入了在继续更新本文。
icinga2 架构分析 请下载和查看这个icinga2官方的文档：[su_button url=&amp;ldquo;http://pan.baidu.com/s/1qW3JkJE&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;stroked&amp;rdquo; background=&amp;quot;#cccc00&amp;quot; size=&amp;ldquo;6&amp;rdquo; icon=&amp;ldquo;icon: cubes&amp;rdquo;]下载点这里[/su_button]
为什么用icinga，原因如下：
[su_list icon=&amp;ldquo;icon: eye&amp;rdquo;]
Nagios的架构不能扩展
增加模块是比较困难的
不是群集和分布式监控架构
安全性相对糟糕
配置功能有限
[/su_list]
安装配置 icinga2的安装可以说非常简洁，基本上配置好yum源，几条命令就装万了，而且就可以用了。只是在web界面选择和配置上稍微有点麻烦，它目前有三个可以安装配置的界面：classic, icinga-web, icinga-web2； classic太老了，不具有极其强烈的怀旧情节，就别碰了。建议生产环境中还是使用icinga-web；web2太新了，很多集成的项目的都还没有做好，还比较初级，功能不完善。
待续~~</description></item><item><title>在 RHEL 7 上安装 Foreman 1.8</title><link>https://martinliu.cn/2015/06/16/e59ca8-rhel-7-e4b88ae5ae89e8a385-foreman-1-8/</link><pubDate>Tue, 16 Jun 2015 16:25:34 +0000</pubDate><guid>https://martinliu.cn/2015/06/16/e59ca8-rhel-7-e4b88ae5ae89e8a385-foreman-1-8/</guid><description>首先安装RHEL7使用光盘安装最小化系统，安装完成之后，关闭防火墙和SELinux（为了测试方便），配置主机名为FQDN格式，如 fm1.8.xenlab.com； 加本机的主机名解析到/etc/hosts 文集中。之后注册到RHN。
[bash]
[root@fm18 ~]# subscription-manager register [root@fm18 ~]# subscription-manager attach &amp;ndash;auto [root@fm18 ~]# subscription-manager repos &amp;ndash;disable=&amp;quot;*&amp;quot; [root@fm18 ~]# subscription-manager repos &amp;ndash;enable=rhel-7-server-optional-rpms [root@fm18 ~]# subscription-manager repos &amp;ndash;enable=rhel-server-rhscl-7-rpms [root@fm18 ~]# subscription-manager repos &amp;ndash;enable=rhel-7-server-rpms [root@fm18 ~]# rpm -ivh http://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm [root@fm18 ~]# yum -y install http://yum.theforeman.org/releases/1.8/el7/x86_64/foreman-release.rpm [root@fm18 ~]# yum -y install http://ftp.sjtu.edu.cn/fedora/epel/epel-release-latest-7.noarch.rpm [root@fm18 ~]# yum clean all [root@fm18 ~]# yum makecache [root@fm18 ~]# yum update -y [root@fm18 ~]# reboot [root@fm18 ~]# yum install foreman-installer</description></item><item><title>用 powertop 给笔记本电脑省电</title><link>https://martinliu.cn/2015/06/13/e794a8-powertop-e7bb99e7ac94e8aeb0e69cace794b5e88491e79c81e794b5/</link><pubDate>Sat, 13 Jun 2015 14:27:17 +0000</pubDate><guid>https://martinliu.cn/2015/06/13/e794a8-powertop-e7bb99e7ac94e8aeb0e69cace794b5e88491e79c81e794b5/</guid><description>如何安装：
[bash]
sudo dnf install powertop
sudo powertop
sudo systemctl start powertop.service
sudo systemctl enable powertop.service
[/bash]
[gallery link=&amp;ldquo;file&amp;rdquo; ids=&amp;ldquo;53761,53762,53763,53764,53765&amp;rdquo;]
使用Tab和shift + tab 键在以上屏幕直接切换。
我发现我主要使用 Tunables 这个tab来找出可以安全关闭的设备服务。以上测试是在我目前的 Fedora 22 on Lenovo T440s上作的。
本文参考：http://fedoramagazine.org/saving-laptop-power-with-powertop/</description></item><item><title>在CentOS 7上安装部署Katello2.2</title><link>https://martinliu.cn/2015/06/07/e59ca8centos-7e4b88ae5ae89e8a385e983a8e7bdb2katello2-2/</link><pubDate>Sun, 07 Jun 2015 16:35:05 +0000</pubDate><guid>https://martinliu.cn/2015/06/07/e59ca8centos-7e4b88ae5ae89e8a385e983a8e7bdb2katello2-2/</guid><description>Katello的系统架构如下图：
Katell系统是一个复合型开源项目，是Pulp, Candlepin 和 Foreman的组合。Foreman默认使用Puppet作配置管理。
它的安装文档见官方手册：http://www.katello.org/docs/2.2/installation/index.html
为了简化安装，请下在本站提供的CentOS7完美安装模板。使用它来创建一个虚拟机，6GB内存，2VCPU；网络上为了方便，请在virt-manger中新建如下所示的网络。
虚拟机启动之后，确保host能正常联网。启动刚才创建的虚拟机，配置好IP，ping 外网网站，确保它能正常联网即可。其它安装命令如下：
[bash]
yum -y localinstall http://fedorapeople.org/groups/katello/releases/yum/2.2/katello/RHEL/7Server/x86_64/katello-repos-latest.rpm yum -y localinstall http://yum.theforeman.org/releases/1.8/el7/x86_64/foreman-release.rpm yum -y localinstall http://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm yum -y localinstall http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm yum -y install foreman-release-scl
yum -y install katello
katello-installer -v
&amp;ndash;foreman-admin-username admin
&amp;ndash;foreman-admin-password smartvm
&amp;ndash;capsule-dns true
&amp;ndash;capsule-dns-interface eth0
&amp;ndash;capsule-dns-zone xenlab.com
&amp;ndash;capsule-dns-forwarders 192.168.10.1
&amp;ndash;capsule-dns-reverse 10.168.192.in-addr.arpa
&amp;ndash;capsule-dhcp true
&amp;ndash;capsule-dhcp-interface eth0
&amp;ndash;capsule-dhcp-range &amp;ldquo;192.168.10.100 192.168.10.240&amp;rdquo;
&amp;ndash;capsule-dhcp-gateway 192.168.10.1
&amp;ndash;capsule-dhcp-nameservers 192.168.10.10
&amp;ndash;capsule-tftp true
&amp;ndash;capsule-tftp-servername $(hostname)
&amp;ndash;capsule-puppet true
&amp;ndash;capsule-puppetca true
[/bash]</description></item><item><title>安装完美 CentOS7 虚拟机模板</title><link>https://martinliu.cn/2015/06/05/e5ae89e8a385e5ae8ce7be8e-centos7-e8999ae68b9fe69cbae6a8a1e69dbf/</link><pubDate>Fri, 05 Jun 2015 15:44:52 +0000</pubDate><guid>https://martinliu.cn/2015/06/05/e5ae89e8a385e5ae8ce7be8e-centos7-e8999ae68b9fe69cbae6a8a1e69dbf/</guid><description>初始化安装 下载最新版CentOS7 DVD 选择mini安装。
网络配置 安装过程中设置了静态网络地址，如下：
[bash]
[root@centos7-tmp ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 TYPE=Ethernet BOOTPROTO=none DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=no NAME=eth0 DEVICE=eth0 ONBOOT=yes DNS1=192.168.10.1 DOMAIN=xenlab.com IPADDR=192.168.10.8 PREFIX=24 GATEWAY=192.168.10.1 UUID=5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03
[/bash]
软件包 Change log:
 yum install wget telnet perl perl-devel net-tools kernel-devel
yum install vim-enhanced.x86_64
yum -y install git
yum install acpid
yum install tree
yum install ntp
yum install unzip</description></item><item><title>Achilles的脚后跟</title><link>https://martinliu.cn/2015/06/04/achillese79a84e8849ae5908ee8b79f/</link><pubDate>Thu, 04 Jun 2015 05:15:53 +0000</pubDate><guid>https://martinliu.cn/2015/06/04/achillese79a84e8849ae5908ee8b79f/</guid><description>今天是红帽服务团队深圳Bootcamp的最后一天，我是最后一个session的演讲者，讲的内容是补丁管理，这是个老生常谈的话题，看看我怎么构思和解读的。
[su_button url=&amp;ldquo;http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2015/06/Patch-Management.pdf&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;stroked&amp;rdquo; size=&amp;ldquo;2&amp;rdquo; icon=&amp;ldquo;icon: cloud-download&amp;rdquo;]PPT下载在这里[/su_button]
主要思路还是把目前的相关知识梳理一边。特别是借鉴了公司安全大师Shawn的一些内容。
玩好防塔游戏 把操作系统的该打的补丁都打好，避免已知漏洞的暴露。
做好安全加固 修补Achilles的脚后跟，是说把安全配置基线落实到系统中，并行成为长效保持机制。
其实这些还是和配置管理有关和CMDB有关，真是老生常谈呵呵</description></item><item><title>Fedora 22 使用体验不错</title><link>https://martinliu.cn/2015/05/28/fedora-22-e4bdbfe794a8e4bd93e9aa8ce4b88de99499/</link><pubDate>Thu, 28 May 2015 16:02:23 +0000</pubDate><guid>https://martinliu.cn/2015/05/28/fedora-22-e4bdbfe794a8e4bd93e9aa8ce4b88de99499/</guid><description>下面是随手的几个截图。
一部分F22新功能评测在这里http://fedoramagazine.org/whats-new-fedora-22-workstation/</description></item><item><title>我已经很久没用ppt了</title><link>https://martinliu.cn/2015/05/24/e68891e5b7b2e7bb8fe5be88e4b985e6b2a1e794a8ppte4ba86/</link><pubDate>Sun, 24 May 2015 15:08:31 +0000</pubDate><guid>https://martinliu.cn/2015/05/24/e68891e5b7b2e7bb8fe5be88e4b985e6b2a1e794a8ppte4ba86/</guid><description>Kenote的在我的工作中已经完全替代PPT了。其实我的电脑上还有LiberOffice，不过要编写什么ppt，还是必须要使用Keynote，这可能就是所谓的由奢入俭难吧，哈哈！
通常做完的Slides，还需要导出成ppt和pdf格式，然后上传到网盘上，一般在讲完当天，就最好能通过微信把下载链接发给用户。想想十多年来也做了至少上万页的ppt，可恶的事工作性质其实还没有太大变化。
现在看着这个课程，有点想法是：是否有必要把自己的重要的ppt也录制成课程，做系列的播出。没准也能卖出几千份哈哈</description></item><item><title>Fedora 22 将于5月26日发布</title><link>https://martinliu.cn/2015/05/24/fedora-22-e5b086e4ba8e5e69c8826e697a5e58f91e5b883/</link><pubDate>Sun, 24 May 2015 08:37:06 +0000</pubDate><guid>https://martinliu.cn/2015/05/24/fedora-22-e5b086e4ba8e5e69c8826e697a5e58f91e5b883/</guid><description>No Content Found</description></item><item><title>RedHat互联网平台解决方案</title><link>https://martinliu.cn/2015/05/17/redhate4ba92e88194e7bd91e5b9b3e58fb0e8a7a3e586b3e696b9e6a188/</link><pubDate>Sun, 17 May 2015 06:29:33 +0000</pubDate><guid>https://martinliu.cn/2015/05/17/redhate4ba92e88194e7bd91e5b9b3e58fb0e8a7a3e586b3e696b9e6a188/</guid><description>ppt点这里下载：[su_button target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;stroked&amp;rdquo; size=&amp;ldquo;2&amp;rdquo; icon=&amp;ldquo;icon: cloud-download&amp;rdquo;]下载[/su_button]
参考文档： AS深圳2014演讲PPT最终稿 http://pan.baidu.com/s/1i3KQFRJ QCon北京2015（PPT） http://pan.baidu.com/s/1sj2t1yl 这两个目录里面干货还是不少，可以下载了慢慢看。
学习了一写文档后，逐渐对互联网公司的架构挑战需求和现状有了一些了解。下面先聊下这方面的一些理解。
中国规模交易量 什么叫中国规模交易量，以淘宝2014-11-11 双十一当天的数据举例：
[su_list icon=&amp;ldquo;icon: rocket&amp;rdquo;]
交易创建 80000笔/秒
支付 38000笔/秒
24小时完成交易额 571亿元人民币 // 93 亿美元
[/su_list]
乍一看这个数字可能没什么感觉，可以比较一下美国的情况。全美所有的传统商场在“黑色星期五”一天的销售也仅为91亿美元，即使加上网络销售的24亿美元也比天猫“双十一”多不了太多。也就是说，美国黑五当天全网的电商是中国淘宝/天猫一家的四分之一。
因此中国人口基数大，网民数量大，假如您能激起大众的兴趣的话，你是不缺访问量的。对于意外的大规模的峰值访问量的处理，如果系统架构和应用没有提前经过特别的架构调整、优化；用膝盖都能想到系统挂掉、基础架构崩溃、交易数据出错是必然的事情。
理解到这个潜在的风险、需求和调整，我们所有设计和从事IT基础架构技术服务的人，可以想想，不向前看，不向BAT学习，不站在他们的肩膀上设计和调整自己的应用的话。想保证系统平安，除非业务是失败的业务（没有流量），否则没有平安可言。
架构特点 且不说马云家系统已经多么牛叉，我们看下京东的架构，我们也可以看到其架构设计在两个维度都非常清晰到位。业务架构维度上尽可能的松耦合，所有业务单元分解清晰，貌似莫名的遵循了分布式架构的要求；这样每个业务单元都可以对IT资源的消耗联动，弹性的供给必要的业务处理能力。IT架构维度上分解为三个层次：应用架构、数据架构、基础架构。基本上JD的这个PPT改变了我对这个企业的印象。从我的职业经验告诉我，这份PPT中规中矩，比较专业，堪称教科书式的架构设计。相对马云家的架构师的PPT图画的比较豪放，风格不同。JD这份PPT下载在这里。
[su_button url=&amp;ldquo;http://pan.baidu.com/s/1o6MI0t0&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;stroked&amp;rdquo; size=&amp;ldquo;2&amp;rdquo; icon=&amp;ldquo;icon: cloud-download&amp;rdquo;]AS深圳2014 京东架构设计-吴博[/su_button]
除了分层细致设计业务架构之外，我们还能看到，电商公司多使用多数据中心多活的模式并发处理海量交易量，每个数据中心都可以处理全业务，都能在灾备和并行处理上一石二鸟。这和我们高贵的传统企业不同，他们往往可以实现同城双中心运行，异地数据中心往往是灾备中心；有些灾备切换并不是全业务的切换，有些灾备中只用于灾备切换演练，并不真的运行业务；有些异地灾备中心也会和主数据中心中的一部分业务做周期性的切换运行。这些高贵的客户往往把核心的数据放在主机上，这在他们想扩展到3个或者更多个数据中心的时候，略显尴尬；新增的数据中心也要配置一套新主机系统么？新的主机上数据和应用怎样快速迁移过来？需要多长时间？数据同步的和其他两个数据中心一致么？这些问题的回答都不简单？主机硬件固然是贵？但是所有问题都解决周全的话，可能更贵。
全新的纯X86的架构就在面前，BAT已经证明了它和开源技术组合在一起就是多快好省的架构。因此，IT架构的转型也成了必然选择。试想转型之后的机房，每个机架都是标准化的工作单元，它可能是几种类型：纯物理机计算节点、纯虚拟机计算节点（服务器虚拟化或者OpenStack等）、纯物理机存储节点（软件定义存储）；或运行容器的物理机或者虚拟机。另外机架上的网络设备和核心网络设备必然有他们自己的设计。这是我的一个猜测，有机会还需要和BAT的人多了解。
开源技术 BAT用到的开源技术真的是不甚枚举，也没有必要逐一分析。基本上各个领域里从开发堆栈、到架构堆栈和运维管理堆栈；各个方面的前几位的项目都有实践和应用。
红帽 那么红帽的互联网平台解决方案是什么？红帽的定位是基础架构技术厂商，因此红帽的全套技术框架就是它的互联网解决方案。如下图所示。
有些产品模块需要稍微说明一下，方便和开源项目对应起来。
[su_list icon=&amp;ldquo;icon: linux&amp;rdquo;]
Red Hat Storage server / ICE : Gluster, Ceph</description></item><item><title>OpenStack Enterprise Ready</title><link>https://martinliu.cn/2015/05/14/openstack-enterprise-ready/</link><pubDate>Thu, 14 May 2015 16:36:27 +0000</pubDate><guid>https://martinliu.cn/2015/05/14/openstack-enterprise-ready/</guid><description>不是好不好，而是用不用？ 要说OpenStack的优点，技术人员能说出一堆词汇，如开源、弹性、稳定、可扩展、迅速搭建私有云、对硬件要求不高、解耦、能快速扩展新业务等等。但实际应用的案例为何这么少。
国内传统企业用的少，互联网公司用了不少了，创业公司捣鼓OpenStack部署公有云服务的业务也不少了，总体看OpenStack水平高的人不在数量巨大的传统企业里，当前人员也不存在这个流向，更重要的是传统企业没有合适的在OpenStack上跑的workload。因此少。
一个数据是，这两年计划部署OpenStack的企业为84%，可见大多数企业仍观望。这问题出在哪里？
原因同上。
技术仍旧是问题。OpenStack的问题是半年快速迭代，发布新产品，速度太快，老版本跟不上。理论上，新版本向下兼容。但在一些版本较大改动，加入新的功能时，如果企业已经深度应用了旧版本，可能面临技术无法升级，或者需要重度开发的问题。
开发改动大么？那些地方大改动了？深度开发的部分是什么组件？是遵循了向下一个版本兼容的原则了么？代码提交会社区了么？OpenStack社区版升级了，企业就一定要升级旧的版本么？什么情况下升级版本？什么情况下打补丁知道么？OpenStack是云操作系统，我们看到的常见的开发场景是：界面友好度的调整、虚拟机功能的增强、辅助管理功能的增加等等。如果基于某个版本把这些附加功能开发出来了，其实业务需求清晰和随后调整不大的话，其实是可以用一定时间的。升级有两个原因：修复bug，增加新版本的功能。我见过创业公司把之前开发的东西一次一次废掉重来的情况，主要原因还是他们首先不能提交代码会社区，其次开发的东西不是外挂式和主框架松耦合的。企业面对开发是谨慎的，往往不会在投入大量功能评估后，在清晰的需求下二次开发。二次开发做的多得还是想做OpenStack生意的创业公司，而传统企业的这些金主客户，我感觉他们还真没有这个需求和闲工夫。因此开发重，不能平滑进入下一代新版本不是用的少和不用的原因。
另外与企业规模有关。多大企业需要使用OpenStack，需要部署在哪些生产环境，是否是全面替代，还是迁移，包括从VMware迁移到OpenStack，或者是新应用局部部署OpenStack？这些不考虑清楚，没办法应用。
这是一个很普遍的误区，太多人这么想了。从VMWare迁移到OpenStack真的这么重要么？真的存在这个场景了？服务器虚拟化和OpenStack是两种同类型的基础架构技术。服务器虚拟化跑传统的有状态应用；OpenStack跑需要弹性扩展的无状态应用。有状态应用不适合跑在OpenStack上。也不太可能不做任何改变就能适应OpenStack环境。企业的无状态应用少，但这是一个发展过程和阶段。原因在于无状态应用和合适在OpenStack上跑得workload太少了。企业目前的应用workload是因，OpenStack部署少是果。不存在OpenStack替代服务器虚拟化的事情，他俩会并存很长时间，不是非黑即白的替代逻辑。
当前看，对企业应用需求的评估太少，大多是IT产业（厂商）一头热，鼓吹OpenStack太好，反而令人生疑。
说的好就怀疑了？这里说的应用需求评估有两方面。或者两个理解方向。这里可能是说OpenStack功能性方面，客观的讲，当一个技术在风口上的时候，说好话的多，这是客观规律，多年前服务器虚拟化也这样，现在热度低了，它再发新版本大家连个搭理的功夫都没有了，也没有啥评测文章出来，这都是自然规律。OpenStack也有失去热捧的那天，我最近看了一些基于它创业的技术型公司也都在反思和总结经验中。
怎么用，谁来带头？ 当前案例也有，如电信运营商阿尔卡特朗讯（名字太长，以后会不会再加上西门子诺基亚）、诺基亚、西班牙电信；汽车领域宝马汽车、银行企业西班牙BBVA、传媒领域时代华纳有线等。这些企业具有标杆意义，不具有示范效应。企业规模不一样，生产环境不同，这是最大的不同。这些案例最明显的是以信息为核心资源的企业，IT系统建设较为完善和复杂，有意愿、有钱尝试新的IT技术。
规模、环境、以信息为核心资源、IT成熟、有意愿、有钱；这些都不能说成是中外企业IT的差异，也完全和是否用OpenStack无关的因素。我朝存在大量的传统大型企业，都已经排名全球100强了，很多是我们的客户。它们的市值比以上公司大得多。举个例子：CCB的市值是2015年4月30日 - 成交量 4.88亿股 市值 18,151.</description></item><item><title>Import CloudForms into rhevm</title><link>https://martinliu.cn/2015/03/30/import-cloudforms-into-rhevm/</link><pubDate>Mon, 30 Mar 2015 03:13:47 +0000</pubDate><guid>https://martinliu.cn/2015/03/30/import-cloudforms-into-rhevm/</guid><description>[bash] [root@rhevm03 export]# cat /etc/exports /var/lib/exports/iso *(rw) /export/rhev_import_export_disk *(rw,sync,no_subtree_check,all_squash,anonuid=36,anongid=36) /export/template *(rw,sync,no_subtree_check,all_squash,anonuid=36,anongid=36)
[root@rhevm03 export]# engine-image-uploader -N cfme5351 -e export-nfs-rhevm -v -m upload /tmp/cfme-rhevm-5.3-51.x86_64.rhevm.ova [/bash]
然后从Web Console上导入这个模板，创建一个目标规格的虚拟机。</description></item><item><title>Practical Linux Infrastructure</title><link>https://martinliu.cn/2015/03/29/practical-linux-infrastructure/</link><pubDate>Sun, 29 Mar 2015 14:10:37 +0000</pubDate><guid>https://martinliu.cn/2015/03/29/practical-linux-infrastructure/</guid><description>Practical Linux Infrastructure by Syed Ali Link: http://amzn.com/148420512X
[gallery size=&amp;ldquo;medium&amp;rdquo; ids=&amp;ldquo;53654,53655&amp;rdquo;]
The CI/CD pipeline automates as many tests as possible to gain confidence in the code. In addition, it performs a complete build of the software system and ensures the code that has been checked in does not cause anything to break. Any failure has to be investigated by a developer. There are numerous software products that can help implement a CI/CD pipeline, including the following: Jenkins (http://jenkins-ci.</description></item><item><title>wordpress update</title><link>https://martinliu.cn/2015/03/29/wordpress-update/</link><pubDate>Sun, 29 Mar 2015 13:40:16 +0000</pubDate><guid>https://martinliu.cn/2015/03/29/wordpress-update/</guid><description>在本网站的网页永久链接结构性调整了之后，本以为搜索引擎更新会是一个缓慢的过程，今天去bing和baidu一看，简单翻了若干页之后，发现已经全部更新完毕了。而且搜索 ： site:martinliu.cn 返回结果的顺序也和以前不一样了。貌似旧文章比较靠前，不过顺序无所谓，只要指向的链接完全OK就可以了。</description></item><item><title>服务器虚拟化 RHEV</title><link>https://martinliu.cn/2015/03/27/e69c8de58aa1e599a8e8999ae68b9fe58c96-rhev/</link><pubDate>Fri, 27 Mar 2015 02:11:40 +0000</pubDate><guid>https://martinliu.cn/2015/03/27/e69c8de58aa1e599a8e8999ae68b9fe58c96-rhev/</guid><description>服务器虚拟在我的lab中是必选项，管理控制器端RHEVM安装在主服务的一个虚拟机里面。在主服务器上使用targetcli做了一个iscsi的共享存储。使用这个命令可以方便的实现iscsi设备。把最终的存储文件放在了SSD盘上的一个100GB的瘦制备文件上。 [bash] ╭─root@w540 ~ ╰─$ targetcli targetcli shell version 2.1.fb37 Copyright 2011-2013 by Datera, Inc and others. For help on commands, type &amp;lsquo;help&amp;rsquo;.
/&amp;gt; ls o- / &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. [&amp;hellip;] o- backstores &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. [&amp;hellip;] | o- block &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. [Storage Objects: 0] | o- fileio &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. [Storage Objects: 1] | | o- iscsi1 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;. [/root/iscsi01.img (100.0GiB) write-back activated] | o- pscsi &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.. [Storage Objects: 0] | o- ramdisk &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; [Storage Objects: 0] o- iscsi &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; [Targets: 1] | o- iqn.</description></item><item><title>入手 zsh 和 oh-my-zsh</title><link>https://martinliu.cn/2015/03/23/e585a5e6898b-zsh-e5928c-oh-my-zsh/</link><pubDate>Mon, 23 Mar 2015 02:47:45 +0000</pubDate><guid>https://martinliu.cn/2015/03/23/e585a5e6898b-zsh-e5928c-oh-my-zsh/</guid><description>安装zsh在任何系统上几乎都是差不多。Zsh 是一款功能强大的交互式 shell，与 Bash 相比，Zsh 下面几点表现令人印象深刻：
[wm_list bullet=&amp;ldquo;icon-linux&amp;rdquo; class=&amp;quot;&amp;quot;]
自动补全
拼写纠错
定制性强
美观的命令提示符（这点吸引力最大）
[/wm_list]
相信你安装之后，对上面几点会有更加真切的感受！
下面是RHEL 7 上的安装过程。
[bash]
[root@w540]~# yum install git [root@w540]~# curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh [root@w540]~# cat .zshrc
Path to your oh-my-zsh installation. export ZSH=/root/.oh-my-zsh
Set name of the theme to load. Look in ~/.oh-my-zsh/themes/ Optionally, if you set this to &amp;ldquo;random&amp;rdquo;, it&amp;rsquo;ll load a random theme each time that oh-my-zsh is loaded.</description></item><item><title>Impact Mapping</title><link>https://martinliu.cn/2015/03/20/impact-mapping/</link><pubDate>Fri, 20 Mar 2015 02:22:16 +0000</pubDate><guid>https://martinliu.cn/2015/03/20/impact-mapping/</guid><description>这种方法论的东西很久不感冒了，可是这次耐心看了一下，确实有温故而知新的作用，有点意思，特此推荐一下。
这个方法论的网站在：http://www.impactmapping.org/
上图是此方法分析的思路。网上搜索了一下，多看到很多介绍敏捷方法的网站在推荐。下图是次方法的宣传海报。
这里还从YouTube上搬运回来一个视频，可以参考一下。</description></item><item><title>如何参与 Project Atomic</title><link>https://martinliu.cn/2015/03/19/e5a682e4bd95e58f82e4b88e-project-atomic/</link><pubDate>Thu, 19 Mar 2015 03:23:37 +0000</pubDate><guid>https://martinliu.cn/2015/03/19/e5a682e4bd95e58f82e4b88e-project-atomic/</guid><description>关于 Project Atomic 项目
Project Atomic 项目相关的开源技术组件如下：
[wm_list bullet=&amp;ldquo;icon-linux&amp;rdquo; class=&amp;quot;&amp;quot;]
linux kernel
systemd
OSTree and rpm-ostree
Docker
kubernetes
Fedora and CentOS
[/wm_list]
该项目的网站在： http://www.projectatomic.io/
加入 Project Atomic 邮件列表 项目一般性讨论： https://lists.projectatomic.io/mailman/listinfo/atomic
项目开发者：https://lists.projectatomic.io/mailman/listinfo/atomic-devel
项目版本发布更新：https://lists.projectatomic.io/mailman/listinfo/atomic-announce
填写自己的邮箱后，别忘了在邮箱里收信，并且确认。如下图所示：
问 Project Atomic 问题和讨论 http://ask.projectatomic.io/en/questions/ 这里是项目的论坛可以在这里提问和帮助其他人。
了解 Project Atomic 代码 https://github.com/projectatomic/ 项目的代码在Github网站上可以看到，如果你watch这个项目的话，可以收到所有开发者对该项目的所有代码更新等活动。</description></item><item><title>FY16 Sales SKO Marco</title><link>https://martinliu.cn/2015/03/17/fy16-sales-sko-marco/</link><pubDate>Tue, 17 Mar 2015 13:23:32 +0000</pubDate><guid>https://martinliu.cn/2015/03/17/fy16-sales-sko-marco/</guid><description>FY16 Sales SKO Marco: 正像所有公司做的模式是一样的，红帽的销售启动大会在澳门开始了。澳门是个让人腻味的地方，每天早晨的集体晨跑成了一个亮点。小小的慢跑群正在成长中。</description></item><item><title>Welcome to the age of the industrial internet</title><link>https://martinliu.cn/2015/03/15/welcome-to-the-age-of-the-industrial-internet/</link><pubDate>Sun, 15 Mar 2015 14:19:19 +0000</pubDate><guid>https://martinliu.cn/2015/03/15/welcome-to-the-age-of-the-industrial-internet/</guid><description/></item><item><title>走进学校分享开源</title><link>https://martinliu.cn/2015/03/12/e8b5b0e8bf9be5ada6e6a0a1e58886e4baabe5bc80e6ba90/</link><pubDate>Thu, 12 Mar 2015 12:05:14 +0000</pubDate><guid>https://martinliu.cn/2015/03/12/e8b5b0e8bf9be5ada6e6a0a1e58886e4baabe5bc80e6ba90/</guid><description>今天走入了天津市大学软件学院，和同学们分享了我对开源软件的一些看法和经历；很多同学对如何成为架构师感兴趣。全程学生们没有玩手机和睡觉的，感觉效果应该还不错。ppt在这里&amp;ndash;&amp;gt;《开源软件之系统架构师篇》可惜对其中一个同学的回答后来想着欠妥 :(</description></item><item><title>对blog做了结构性调整</title><link>https://martinliu.cn/2015/03/10/e5afb9bloge5819ae4ba86e7bb93e69e84e680a7e8b083e695b4/</link><pubDate>Tue, 10 Mar 2015 15:47:16 +0000</pubDate><guid>https://martinliu.cn/2015/03/10/e5afb9bloge5819ae4ba86e7bb93e69e84e680a7e8b083e695b4/</guid><description>对blog做了结构性调整：把永久网址链接简化到只有文章标题；省略了之前带有复杂的分类层级的部分；之前想更多地加入关键字的想法，目前看真的想太多了。Blog还是要越简单，越简洁越好。就像我目前的Theme一样，除去了浮夸和花哨的修饰，专注内容，专注文章质量。</description></item><item><title>安全地简化了网页永久链接</title><link>https://martinliu.cn/2015/03/10/e5ae89e585a8e79a84e7ae80e58c96e4ba86e7bd91e9a1b5e79a84e6b0b8e4b985e993bee68ea5/</link><pubDate>Tue, 10 Mar 2015 15:29:36 +0000</pubDate><guid>https://martinliu.cn/2015/03/10/e5ae89e585a8e79a84e7ae80e58c96e4ba86e7bd91e9a1b5e79a84e6b0b8e4b985e993bee68ea5/</guid><description>网页的 永久链接 的配置是在：Settings &amp;ndash;&amp;gt; Permalink Settings； 通过这个设置把Wordpress默认的代码型网页网址 http://martinliu.cn/?p=123 变成了 搜索引擎更友好，而且人也更容易懂的网址。例如我目前的：http://martinliu.cn/文章标题/
我之前的永久链接其实已经改过好多次了，期间多次是由于更新网站分类结构，还有是由于看了多篇纠结的wordpress SOE文章导致。前几次修改都是很粗暴的直接修改，并没有顾忌到对以前搜索引擎的已经抓取的网页做保护。这次我必须对当前已经纳入搜索引擎的网页做保护了，毕竟文章现在比较多了，非常有必要对搜索引擎用户做保护。
本次修改主要参考了文章是：A Simple Guide to Changing Your Permalinks Without Breaking Your WordPress Website 此文推荐了一个简洁的方法，使用插件： Simple 301 Redirects
安装和激活插件后，我的配置过程如下。首先，更新永久链接到新的设置。
然后再去Simple 301 Redirects 的配置做如下修改：(插件有bug，最后配置网址是 /%postname%/ .html 了发现301 重定向不成功。)
最后到搜索引擎里面看下是否所有的已有抓取的网页都可以正常访问。在搜索引擎中搜索： site:martinliu.cn
bing 搜搜结果点这里 在结果页面上点击任何一个文章，文章应该被正确加载出来了。</description></item><item><title>一下午讲了两场</title><link>https://martinliu.cn/2015/03/10/e4b880e4b88be58d88e8aeb2e4ba86e4b8a4e59cba/</link><pubDate>Tue, 10 Mar 2015 14:37:18 +0000</pubDate><guid>https://martinliu.cn/2015/03/10/e4b880e4b88be58d88e8aeb2e4ba86e4b8a4e59cba/</guid><description>一下午讲了两场：头一场给两个渠道部门和总代的两位老大；后一场讲给曙光的产品经理。讲的我满头汗，感觉思路非常清晰，越来越清晰了，数据中心的基础架构如果转型到开放架构，那么需要的是什么？是一套综合的方案体系。是一套自动化高效的运管体系。</description></item><item><title>天将雄师</title><link>https://martinliu.cn/2015/03/10/e5a4a9e5b086e99b84e5b888/</link><pubDate>Tue, 10 Mar 2015 10:56:31 +0000</pubDate><guid>https://martinliu.cn/2015/03/10/e5a4a9e5b086e99b84e5b888/</guid><description>《天将雄师》豆瓣上评分很低的电影，才6分多；我看到的却很享受，是我不正常，还是世界不正常了：）</description></item><item><title>新MacBook是个怎样的选择 ？</title><link>https://martinliu.cn/2015/03/10/e696b0macbooke698afe4b8aae6808ee6a0b7e98089e68ba9/</link><pubDate>Tue, 10 Mar 2015 02:34:45 +0000</pubDate><guid>https://martinliu.cn/2015/03/10/e696b0macbooke698afe4b8aae6808ee6a0b7e98089e68ba9/</guid><description>MacBook 和Macbook Pro 的$1299相同价位的配置。http://www.apple.com/mac/compare/results/?product1=macbook&amp;amp;product2=macbook-pro-retina-13
不难看出这两个本子，基本就是针对两种不同类型的人群。选择Macbook意味着纯文档处理类型的人；选择Macbook Pro意味着需要更强处理和运算能力的技术人员。颜色上新增了银灰和土豪金。
看后我觉得我会选择，土豪金的Macbook，哈哈哈哈~需要考察一下实物才能做这个最后的决定。下面是Apple官网上关于MacBook的设计视频广告，我看完后感觉，电脑作为商品来讲，做广告到这个份上，也就快到头了。</description></item><item><title>martin's lab build day 1</title><link>https://martinliu.cn/2015/03/08/martins-lab-build-day-1/</link><pubDate>Sun, 08 Mar 2015 15:49:44 +0000</pubDate><guid>https://martinliu.cn/2015/03/08/martins-lab-build-day-1/</guid><description>本来不能算是day1，由于day1早就开始了，不过作为第一个post发布出的记录，还是叫它day1吧，后续会逐步更新我的进展。</description></item><item><title>Martin's lab 主服务器搭建</title><link>https://martinliu.cn/2015/03/08/e4b8bbe69c8de58aa1e599a8e690ade5bbba/</link><pubDate>Sun, 08 Mar 2015 15:42:01 +0000</pubDate><guid>https://martinliu.cn/2015/03/08/e4b8bbe69c8de58aa1e599a8e690ade5bbba/</guid><description>上图是红帽产品和技术架构的全貌。来源是：http://www.redhat.com/en/technologies/cloud-computing 这张图我用在了我的首次给公司内部的全体销售培训上。由于我是IT管理背景的，因此我很习惯从云管理层往下看云引擎的各个层面。但是管理层产品，其实是后来整合纳入的。红帽起家的旗舰产品还是在底层的RHEL。总之，我想在一个Lab里面实现以上所有的部分，所谓实现是让其每个部分都能在运行在假象的一个有意义的业务场景里。还好，红帽的产品全都是基于x86平台的，因此我用几个笔记本，再加上我家里的这台HP MicroServer G8服务器应该能够全部部署出来。
做这样的一个lab还是要一定的规划和设计的，这些初步的规划和设计都在我的本子里手写的，就不在这里敲字了，随后我会抽空上几张图。
主服务器基本配置 硬件：Lenovo W540 CPU Intel i7, RAM 32 GB, SSD 512GB, HD 1TB
OS : RHEL 7.1
订阅是红帽公司的业务模式，也是红帽认为最自豪的部分，红帽相信可以成为开源技术和用户之间的催化剂，它不断参与最优秀的开源技术创新，并为其用户提供最强有利的技术服务和支持。红帽技术员工可以申请一个红帽雇员订阅。我的订阅可以在网上查到如下图所示：
红帽的服务必须是基于订阅的每一个节点（物理、虚拟）都需要有有效的订阅，否则红帽的支持服务不能生效。对于一个已经成功注册到红帽官网，并且状态正常的服务器，应该显示如下的注册状态：
[bash] [root@w540 ~]# subscription-manager list
+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+ 安装的产品状态 +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+ 产品名称： Red Hat Enterprise Linux Server 产品 ID： 69 版本： 7.0 构架： x86_64 状态： 已订阅 状态详情： 开始： 2014年09月09日 结束： 2015年12月08日 [/bash]
红帽员工订阅意味着所有红帽产品。
基本服务配置 KVM KVM的上手还真比我想象的速度要慢一些，起码比我用XenServer的经历更加纠结一些。总之现在可以彻底的忘记其它任何的选项，KVM可以满足我的所有需求了。由于主服务器有512SSD + 32GB RAM + 8 vCPU，所以我打算把产品里的所有管理控制节点VM都部署在这个机器上。预计有10个左右的虚拟机。 安装配置方面这里就不赘述了。只把困扰我许久的几个网络配置贴出来，供参考。
网桥0的功能是为所有虚拟机提供外网链接，使他们和主机一样直通主机所物理链接的局域网。 [bash] [root@w540 ~]# cat /etc/sysconfig/network-scripts/ifcfg-br0 DEVICE=br0 ONBOOT=yes TYPE=Bridge BOOTPROTO=none STP=on DELAY=0 DNS1=192.</description></item><item><title>Flake it till you make it</title><link>https://martinliu.cn/blog/flake-it-till-you-make-it/</link><pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate><guid>https://martinliu.cn/blog/flake-it-till-you-make-it/</guid><description>Under what circumstances should we step off a path? When is it essential that we finish what we start? If I bought a bag of peanuts and had an allergic reaction, no one would fault me if I threw it out. If I ended a relationship with a woman who hit me, no one would say that I had a commitment problem. But if I walk away from a seemingly secure route because my soul has other ideas, I am a flake?</description></item><item><title>你还在为失去服务器感到焦虑？</title><link>https://martinliu.cn/2015/02/15/e4bda0e8bf98e59ca8e4b8bae5a4b1e58ebbe69c8de58aa1e599a8e6849fe588b0e784a6e89991efbc9f/</link><pubDate>Sun, 15 Feb 2015 13:14:59 +0000</pubDate><guid>https://martinliu.cn/2015/02/15/e4bda0e8bf98e59ca8e4b8bae5a4b1e58ebbe69c8de58aa1e599a8e6849fe588b0e784a6e89991efbc9f/</guid><description>我耐心看了以下这篇文章《AWS Lambda Debuts for Running Code in the Cloud 》。我还没有来得及去测试一下这个服务，我只是对它感到新奇。有了它，业务应用可能就只需要Dev了，而不需要Ops了；更不用提什么DevOps了。当然这个观点稍微有点极端了。它的确实现了：程序代码可以基于事件在AWS的各种服务中运行。看完了那片文章我也没有察觉到它底层到底使用的是什么技术。只是说AWS再次走到了共有云服务的最前端。
传统的共有云服务里，大家还停留在虚拟机提供，网络隔离的认识阶段。数据库服务、大数据服务、配套的程序部署和管理监控服务，对于一般性的共有云提供商，也不尽完全。曾经和作共有云的人聊过，他们觉得：传统企业数据中心的拥有着和管理这依然有巨大的纠结“失去对服务器的管控，就会有事业的风险”。因此，可见对服务器的管理是多么的重要。但是，如果你拥有了服务器的控制，并坐拥巨大的私有云建设的资金，那么您能如何很快交付出靠谱的云服务呢？说实话，目前私有云的建设很缓慢，也就是作个大批量的服务器虚拟化。IaaS的建设案例还很少，即使有人说他们建成了新一代的云平台，近看一下大多还仅仅是增强版的虚拟机提供。当然这个虚拟机的提供是基本功，做不好这一客其它的云服务也面谈。我们详细观察以下AWS，它大量的服务，像是RDS，LB，Auto Scaling 等等功能，无处不见AWS EC2的扎实功底和无限变化。
国内的广大用户，已经选择了私有云了；越大的企业，越有条件大赶快上云建设。只是却是道路艰辛，图省事的有钱人，可以上全套V公司的云计算，却是它的吸引力、炫耀力和安慰力都是无法阻挡的。底层上的技术的引用是至关重要的，越省事的套件，等同于越少的弹性和自由度，等同于更少的自由发挥的空间，和更少的创造。AWS是基于Xen的服务器虚拟化技术，和一堆的其他开源技术。入手这条路解决了启动费用高的问题，带来了无限的创新和发展自由空间。他们不需要商业化软件或者产品么，例如，AWS是重要的Citrix netscaler用户。</description></item><item><title>AWS 服务索引地图</title><link>https://martinliu.cn/2015/02/11/aws-e69c8de58aa1e7b4a2e5bc95e59cb0e59bbe/</link><pubDate>Wed, 11 Feb 2015 14:41:22 +0000</pubDate><guid>https://martinliu.cn/2015/02/11/aws-e69c8de58aa1e7b4a2e5bc95e59cb0e59bbe/</guid><description>以上图片用FreeMind软件生成，下载英文版原图点击这里：aws-service-map.mm
下载中文版PDF全图点击这里：aws-服务-脑图</description></item><item><title>2014 Red Hat Summit- Paul Cormier, Red Hat keynote</title><link>https://martinliu.cn/2015/02/09/2014-red-hat-summit-paul-cormier-red-hat-keynote/</link><pubDate>Mon, 09 Feb 2015 05:24:15 +0000</pubDate><guid>https://martinliu.cn/2015/02/09/2014-red-hat-summit-paul-cormier-red-hat-keynote/</guid><description>2014 Red Hat Summit- Paul Cormier, Red Hat keynote</description></item><item><title>饥饿游戏3：嘲笑鸟(上) The Hunger Games: Mockingjay - Part 1 (2014)</title><link>https://martinliu.cn/2015/02/08/e9a5a5e9a5bfe6b8b8e6888f3efbc9ae598b2e7ac91e9b89fe4b88a-hunger-games-mockingjay-part-1-2014/</link><pubDate>Sun, 08 Feb 2015 14:47:40 +0000</pubDate><guid>https://martinliu.cn/2015/02/08/e9a5a5e9a5bfe6b8b8e6888f3efbc9ae598b2e7ac91e9b89fe4b88a-hunger-games-mockingjay-part-1-2014/</guid><description>是我很久没有看电影的原因么，总之看了还是觉得不错的。可是豆瓣的评分颇低，无所谓他人怎么看了，我自己娱乐好了就行。下一部想看的是《unbreak》
导演: 弗朗西斯·劳伦斯 编剧: 丹尼·斯特朗 / 彼得·克莱格 主演: 詹妮弗·劳伦斯 / 乔什·哈切森 / 利亚姆·海姆斯沃斯 / 伍迪·哈里森 / 唐纳德·萨瑟兰 / 更多&amp;hellip; 类型: 剧情 / 动作 / 科幻 / 冒险 制片国家/地区: 美国 语言: 英语 上映日期: 2015-02-08(中国大陆) / 2014-11-21(美国) 片长: 123分钟 又名: 饥饿游戏：自由幻梦I(台) / 饥饿游戏终极篇：自由幻梦1(港) / 饥饿游戏3：自由幻梦(上) / 饥饿游戏：自由梦幻(上) / 饥饿游戏 第三部(上) / 嘲笑鸟(上) / Seashore IMDb链接: tt1951265</description></item><item><title>2014年AWS服务更新总结</title><link>https://martinliu.cn/2015/02/08/2014e5b9b4awse69c8de58aa1e69bb4e696b0e680bbe7bb93/</link><pubDate>Sun, 08 Feb 2015 14:24:33 +0000</pubDate><guid>https://martinliu.cn/2015/02/08/2014e5b9b4awse69c8de58aa1e69bb4e696b0e680bbe7bb93/</guid><description>有一段时间没有关注AWS了，下面是在 aws-faq.com 发的新贴。顺便梳理了一下过去一年的更新情况，
http://www.aws-faq.com/featured/aws-服务2015年开年有啥更新.html
AWS在去年新增了6个服务，整体的更新和服务升级的频率是一周一次；也就是说他们发布新版本的频率是每周一次，当然这是有网上发布信息为依推理出来的；感觉一周很可能超过一次。他们的电商也其它业务的发布评论，很可能就更高了。
AWS的公有云服务的技术成熟度和领先度我感觉是第一名的。它激发和促进了整个行业的发展。对私有云的促进和很明显。OpenStack的更新是半年一个新版本。其参考和兼容AWS服务是很明显的。它可以很大的满足于企业自建云服务的需求。</description></item><item><title>AWS-FAQ post - AWS 一月有什么动态?</title><link>https://martinliu.cn/2015/02/07/aws-faq-post-aws-e4b880e69c88e69c89e4bb80e4b988e58aa8e68081/</link><pubDate>Sat, 07 Feb 2015 15:07:42 +0000</pubDate><guid>https://martinliu.cn/2015/02/07/aws-faq-post-aws-e4b880e69c88e69c89e4bb80e4b988e58aa8e68081/</guid><description>AWS-FAQ post - AWS 一月有什么动态?
http://www.aws-faq.com/blog/aws-blog/aws-%E4%B8%8A%E5%91%A8%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88-2015-%E5%B9%B41%E6%9C%88.html
AWS 邮件服务的推出还是比较有趣，虽然很晚推出这个服务，但是还是推出了
__ 总之1月的动静不大</description></item><item><title>提交提交了一个BZ</title><link>https://martinliu.cn/2015/02/02/e68f90e4baa4e68f90e4baa4e4ba86e4b880e4b8aabz/</link><pubDate>Mon, 02 Feb 2015 15:40:52 +0000</pubDate><guid>https://martinliu.cn/2015/02/02/e68f90e4baa4e68f90e4baa4e4ba86e4b880e4b8aabz/</guid><description>用163邮箱注册了http://bugzilla.redhat.com/ ; 提交了一个satellite的bug。</description></item><item><title>Fedora 21 Server测试 - Cockpit篇</title><link>https://martinliu.cn/2015/01/27/fedora-21-server-e6b58be8af95-cockpite7af87/</link><pubDate>Tue, 27 Jan 2015 16:22:18 +0000</pubDate><guid>https://martinliu.cn/2015/01/27/fedora-21-server-e6b58be8af95-cockpite7af87/</guid><description>先上几张Fedora 21 server 安装的截图。
[gallery link=&amp;ldquo;file&amp;rdquo; ids=&amp;ldquo;53424,53425,53426,53427&amp;rdquo;]
新的配色还是不错的，重点看第三张图，虽然不全，已经基本上看出F21 服务器版的软件包了。
安装之后发现确实Cockpit的界面已经可以登陆了，是黑色的风格。
在继续安装和探索之前，我有装了一个默认选项的f21 server ，想通过这个节点的节目添加后统一管理。
[gallery columns=&amp;ldquo;1&amp;rdquo; size=&amp;ldquo;large&amp;rdquo; ids=&amp;ldquo;53433,53434,53435,53436,53437,53438,53439,53440,53441,53442,53443,53444,53445,53446,53447,53448&amp;rdquo;]
我感觉有了这个工具，新手们可以轻松第完成大部分Linux系统的维护工作了。
如果你点击了启用 docker , eth0的网络配置会丢失，会被docker那走作网桥，给他的image用作网关。这个测试最好是虚拟机多网卡。</description></item><item><title>Fedora 22 有何值得期待</title><link>https://martinliu.cn/2015/01/26/fedora-22-e69c89e4bd95e580bce5be97e69c9fe5be85/</link><pubDate>Mon, 26 Jan 2015 14:26:12 +0000</pubDate><guid>https://martinliu.cn/2015/01/26/fedora-22-e69c89e4bd95e580bce5be97e69c9fe5be85/</guid><description>我使用这新安装的F21，连接着公司阿姆斯特丹的VPN，流畅的使用Firefox ， Chrome 上网，在没有墙的世界里顺利传行着。重返Linux世界，想起来很久没有用windows桌面了，渐渐适应和熟悉这感觉，且有些怀旧。
之前Fedora是没有太多的体验，用的最多的是opensuse + kde桌面的组合。目前，看到fedora magazine上很多更新，感觉真的是发展的太快了。 http://fedoramagazine.org/see-whats-coming-in-fedora-22-workstation/ 看了下这个帖子，上面说F22的提升包括：更长的电池寿命、gnome Wayland更多改进、开始应用bundle的开发、更好的第三方应用支持、提升Terminal、改善开发工具等等。查看更多细节：Christian’s blog post</description></item><item><title>再次入手Linux - Fedora 21</title><link>https://martinliu.cn/2015/01/25/e5868de6aca1e585a5e6898blinux-fedora-21/</link><pubDate>Sun, 25 Jan 2015 10:10:09 +0000</pubDate><guid>https://martinliu.cn/2015/01/25/e5868de6aca1e585a5e6898blinux-fedora-21/</guid><description>再次安装桌面版的Linux操作系统 ，并打算作为主要的工作平台。已经是 fedora 21，需要新贴纸了。
接下来作的：http://www.linuxidc.com/Linux/2015-01/111481.htm
剩余没做的是按照搜狗输入法。</description></item><item><title>虚拟机根分区扩容</title><link>https://martinliu.cn/2015/01/21/e8999ae68b9fe69cbae6a0b9e58886e58cbae689a9e5aeb9/</link><pubDate>Wed, 21 Jan 2015 15:46:31 +0000</pubDate><guid>https://martinliu.cn/2015/01/21/e8999ae68b9fe69cbae6a0b9e58886e58cbae689a9e5aeb9/</guid><description>我的Satellite虚拟机下载了所有常用的repo，100GB的磁盘空间都占满了，无奈必须扩容，否则没法用了。
扩容的前提条件正好满足：根分区在最后一个分区。
由于是kvm的虚拟机，所以首先需要扩大硬盘文件的大小： qemu-img resize my.img +100G 。
下面去操作系统里扩容。先要用fdisk删除根分区。记录初始的其实点。然后用n命令新建分区，输入原始其实点位置，回车默认接受结束点的最后一个位置。w存盘。
reboot系统，起来之后用命令扩容分区： resize2fs /dev/vda2 ； 在线扩容需要等一段时间，100GB的空间初始化在我的普通磁盘上做了5分钟左右。在此reboot机器，起来之后在看 df -kh 发现已经增加了100GB了，接下来再也不用担心类似情况了。</description></item><item><title>RHEL 性能 提升方法和工具</title><link>https://martinliu.cn/2015/01/10/rhel-e680a7e883bd-e68f90e58d87e696b9e6b395e5928ce5b7a5e585b7/</link><pubDate>Sat, 10 Jan 2015 16:42:29 +0000</pubDate><guid>https://martinliu.cn/2015/01/10/rhel-e680a7e883bd-e68f90e58d87e696b9e6b395e5928ce5b7a5e585b7/</guid><description>RHEL 7 中已经引入了比较完备的性能优化、调整和监控的工具。对于我这个监控背景的人来说，不具体看下，实在忍不住。
首先，从这篇KB学起来把。https://access.redhat.com/articles/785283
RHEL 下性能调优的工具有三种。
Performance Co-Pilot
TUNA
Tuned
下面依次简单说下这几个工具。
Performance Co-Pilot 监控工具 [caption id=&amp;ldquo;attachment_53397&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;1000&amp;rdquo;] PCP Charts - Overview View[/caption]
PCP是一个工具集，它分为两个部分：
PCP Collectors ： 性能指标数据采集器，它可以从系统内核或者其他数据源来持续的采集数据。是由几个系统服务组成。 These are the parts of PCP that collect and extract performance data from various sources, e.g. the operating system kernel.
PCP Monitors ：性能参数集中查看和监控的图形界面。它可以同时连接多台服务器。These are the parts of PCP that display data collected from hosts (or archives) that have the PCP Collector installed.</description></item><item><title>KVM Virt-Manager 实用参考手册</title><link>https://martinliu.cn/2015/01/06/kvm-virt-manager-e5ae9ee794a8e58f82e88083e6898be5868c/</link><pubDate>Tue, 06 Jan 2015 15:55:02 +0000</pubDate><guid>https://martinliu.cn/2015/01/06/kvm-virt-manager-e5ae9ee794a8e58f82e88083e6898be5868c/</guid><description>关于 virt manager Virt Manager 是一个不错的kvm虚拟机管理工具，能够方便地管理虚拟机。我的测试机目前已经完全转向RHEL7上跑KVM虚拟机，通过virt-manager去管理的方案。
安装virt-manager：yum install -y virt-* ； 装完之后重新启动机器即可使用。
建议初始配置 安装完后有几个环境的配置推荐可以做一下。
Storage Pool ： 一个默认的 + 两个自建的
Default ：这是virt-manager安装时默认创建的，它和操作系统在同一个卷上，我的测试机使用SSD卷，因此我所有虚拟机都会使用这个卷，这样速度比较快
hd ：这是测试机上普通磁盘的一个目录，目的是把那些不需要快速IO的虚拟机跑着这里，节省SSD的磁盘空间
iso ：这是普通磁盘上的iso文件目录，单独挂在这是为了，使用方便
虚拟网络 （一个默认+两个新建）
default ： 这个是安装了virt-manager + kvm 之后就有的，是用NAT的方式，带dhcp，默认虚拟机可以连接物理机所在的外围
virbr1/virbr2 ：是我根据自己的需要建立的，只能和host物理机通讯，无dhcp
我最近做OpenStack的实践，OpenStack需要最好隔离的几个网络跑不同的数据，因此virbr1/2正好符合OpenStack的测试需求。另外我在物理机的操作系统上搭建了yum源服务器，因此任何一个虚拟机都可以通过http访问我放在物理机上的repo目录，我只需要更新这些repos目录里面的rpm包的内容，我的lab环境中的所有虚拟机（不管是在何网络）都可以使用到最新的系统更新包和软件包了。这样大大提高了虚拟机里面软件测试的效率，所有虚拟机像是在本地安装rpm软件包一样，再也不需要联网下载，我只需要每周去公司联网同步一下这些目录即可。
有了以上配置之后，就可以高效工作了，效率感觉比vmware workstation要高，速度快稳定。下面是虚拟机创建的流程，里面有些我的推荐做法。
本想看下，virt-install 的使用方式，感觉那个参数太多，容易敲错，还是界面比较容易上手，而且出错的机会不高。
命令行常用操作指南（持续更新中） virt-manager主要操作还是在命令行比较高效，特别是下面的这些操作，在使用过程中，比较多用，用的多了感觉比GUI操作方式效率高多了。
virt-manager的命令行功能调用有两种方式：
直接 virsh 回车 ，之后就进入了 virsh # 的一个专门的shell，help 就能看的里面支持的所有命令
在普通shell下 直接 virsh &amp;lt;操作命令&amp;gt; &amp;lt;参数&amp;gt;，</description></item><item><title>wget 下载大文件-断点续传</title><link>https://martinliu.cn/2014/12/24/wget-e4b88be8bdbde5a4a7e69687e4bbb6-e696ade782b9e7bbade4bca0/</link><pubDate>Wed, 24 Dec 2014 01:43:03 +0000</pubDate><guid>https://martinliu.cn/2014/12/24/wget-e4b88be8bdbde5a4a7e69687e4bbb6-e696ade782b9e7bbade4bca0/</guid><description>举例如下：
wget -c -b -t 0 -O CentOS-7.0-1406-x86_64-Everything.iso http://mirrors.sohu.com/centos/7/isos/x86_64/CentOS-7.0-1406-x86_64-Everything.iso -o centos.log
下载一个7GB的DVD文件，能够断点续传，能够把状态写入centos.log文件中。具体参数说明如下：
[su_table]
-c 断点续传 -b 后台下载 -t 0 反复尝试下载，0（零）为不限次数 -O file name O（大写字母o）下载的文件命名为 -o file name o（小写字母o）下载的日志保存在文件中 URL http://mirrors.sohu.com/centos/7/isos/x86_64/CentOS-7.0-1406-x86_64-Everything.iso [/su_table] 本文参考：http://blog.chinaunix.net/uid-14735472-id-111049.html</description></item><item><title>Workshop: Creating a Docker management environment</title><link>https://martinliu.cn/2014/12/04/workshop-creating-docker-management-environment/</link><pubDate>Thu, 04 Dec 2014 02:46:04 +0000</pubDate><guid>https://martinliu.cn/2014/12/04/workshop-creating-docker-management-environment/</guid><description>Red Hat APAC Tech Exchange, Macau
Day 3 - 4 December 2014 &amp;ndash; Track C
Command to Run bash &amp;lt;(curl -sSL https://bit.ly/get-fabric8) -k
Document to read https://docs.docker.com/installation/
http://fabric8.io/v2/index.html
https://github.com/fabric8io/quickstarts
My document: https://access.redhat.com/articles/881893
Blogs http://rawlingsj.blogspot.com/
http://macstrac.blogspot.co.uk/</description></item><item><title>workshop redhat storage and splunk</title><link>https://martinliu.cn/2014/12/04/workshop-redhat-storage-splunk/</link><pubDate>Thu, 04 Dec 2014 02:34:03 +0000</pubDate><guid>https://martinliu.cn/2014/12/04/workshop-redhat-storage-splunk/</guid><description>Instance Details Replace userX with your user id. For example, user1 &amp;ndash;&amp;gt; user 30
Instance DNS IP **Internal** RHS 01 rhs-01.userX.apac.red 10.100.0.101 RHS 02 rhs-02.userX.apac.red 10.100.0.102 RHS 03 rhs-03.userX.apac.red 10.100.0.103 RHS 04 rhs-04.userX.apac.red 10.100.0.104 Splunk Master splunkmaster.userX.apac.red 10.100.0.201 Splunk Search splunksearch.userX.apac.red 10.100.0.202 Splunk Peer 01 splunkpeer-01.</description></item><item><title>KK 失控 观后感 之前三章</title><link>https://martinliu.cn/2014/12/02/kk-e5a4b1e68ea7-e8a782e5908ee6849f-e4b98be5898de4b889e7aba0/</link><pubDate>Tue, 02 Dec 2014 16:01:07 +0000</pubDate><guid>https://martinliu.cn/2014/12/02/kk-e5a4b1e68ea7-e8a782e5908ee6849f-e4b98be5898de4b889e7aba0/</guid><description>第一章 人造与天生 1.1 新生物文明 生物的工程化和机器的生物化，这个词出现在我脑海中，并且通过描述一个生动的实际的实验。对生物系统的机器化和机器系统的生物化做对比和类比。开篇就乐观的去迎接新生物文明。
1.2 活系统只胜利 放生学的成果会促进或活系统向更高阶的智能程度进化，使之机器智能具有自我维持的能力
1.3 学会向我们的创造物低头 用非常感性的方式道出了人造物的未来和前景；人造物终究会具有生物的特性，能自活、有适应力和创造力，最后人们失去对他们的控制，并与之对等相处。
总体看，第一章在说人造智能的前景和方向，机器和生物特性相互融合是发展的方向。其中也有一丁点环保的意思，人还要保护生态的完整性，人需要想生物界学习的太多了。
第二章 蜂群思维 2.1 蜜蜂指导：分布式管理 用蜂群的而神秘性和特征，以及人们历史上对他的认识和研究，提出：它是分散和高度统一的矛盾复合体是，是一个非常极端的模式，这种模式可能是人造智能机器最佳的智能神经模式，分布式管理是统一、集中、集权是管理的反面。分布式管理模式是分布式系统的灵魂之一。
2.2 群氓的集体智慧 群氓其实具有高级智慧的可能性和存在性，证明了群体中，简单个低级交互叠加之后可以产生对群体的复杂控制，这种群策群力的抉择能力是单个个体所无感知的，但是确实发生在整个群体上，并有效地扑朔迷离的控制这超多数量简单个体所组织的庞大蜂群。
2.3 非均质的看不见的手 本想客观记录，不想在本文中投入任何感性，禁不住还是想表扬一下翻译者；这种神人实在不多，把这些晦涩难懂的跨界巨大的文章，翻译到这个程度真是值得赞赏，从行文和用词上，真非常达意、恰当和易懂。
涌现这个概念提出了，它使蜂群和蚁群的操控模式的共性；是非线性的存在；不想人、或者高级生物的意识、是按时间连续的，它是蜂群的另外一个，看似无用、无聊和没有意义的特征之一。继续分析蜂群的奥妙中。
2.4 认知行为的分散记忆 类比人的智慧模式，人也潜在的具有上面的蜂群的那些特征。
2.5 从量变到质变 简单、相同类事件的大量发生可带来一个必然的结果，这是预测说，也是反馈性控制的根基定律。把它和具有涌现型意识的事物管理在一起后，就形成了智能控制了，也就是，让机器有所为，有所不为的行为控制，这就到了一种高度的自发的智能程度。它是一种自发的智慧，他们积累和叠加后经过质变，就失控了，而这种状态就是更高的智能程度“意识”；现在看到机器能够令人恐惧的一面了。
2.6 群集的利与弊 群集就是分布式并行的网络结构，或者是内部组成逻辑，或者是机体组织方式。总结分析了具有这种内质的活系统，在理论上应该具有的特点和优势。
2.7 网络是二十一世纪的目标 蜂群思维的应用不容易，他需要人们的自我否定，而人是很难去颠覆已有的常识；本文用互联网网络证明了蜂群的事实存在性。
这一章的干货真的不少，其中的活系统是关键词。它应该是本书的精华之一。
第三章 有心智的机器 3.1 取悦身体的机器 第一遍读，真不理解作者在扯什么无聊的闲篇充篇幅。再一看其实不是，这一章是循序渐进的描述和论证方法，逻辑上有点严谨的。本节说的是那种最弱智的简单人造机器，已经开始讲述智能机器人了，是智能生物的实施和实践。用真实案例证明它的价值。单体的智能机体的生产。
3.2 快速、廉价、失控 简单躯体和简单思维逻辑的组合，是可以实现出非常游泳的个体，这些个体如果能就具有群体的包容架构特性，他们将可能出自治的可能性，注意是群体上体现出的自治性，如果可以实现群体的自治，这样包容架构的简单机体在整体上，具有了群级别的共享的智能，它可能反过来在控制到群的个体的行为。
3.3 众愚成智 平行彼此对等关联，上下级结构的相互影响。不同层级上德简单任务群体之间可以按，上下级的方式组合起来。各个群体之间，彼此各异，又相互作用，在这种局面下可以形成“集体层面统一的智慧”。这样的微混沌状态中蕴藏着“群体才具备的统一智慧”；群体&amp;ndash;&amp;gt;个体行为&amp;ndash;&amp;gt;聚合作用&amp;ndash;&amp;gt;混沌态&amp;ndash;&amp;gt;整体统一反应&amp;ndash;&amp;gt;智慧（智慧可能抬高了，可以是智能）
3.4 嵌套层级的优点 分布模式下的控制理论。自上而下的模式理论上都是行不通的，简单局部的控制能组合出可以运作的系统；用杂耍抛球机器人的实现，证明了这种方式的可行性和价值；这样做出的有意识地控制，就能产生智能的行为，并可自行地正常运作下去。
3.5 利用现实世界的反馈实现交流 中央大脑的从上之下的控制模式下，让机器去模拟人脑对外界的感知，产生唯一真实地外界参考模型，不断更新修正脑中的外部世界模型，之后有中央大脑决定行为方式，同时保持不同部分的正常控制的思路，非常符合常识。但其实是不可用的模式。颠覆人们的常识好像是KK的习惯。而行的后，根据结果的正确判断，产生出下一步的动作，这种现实反馈得出的控制行为，可以让机器求生成功。也就是机器能够生存了，看到了把，有更进一步了。
3.6 无躯体则无意识 躯体&amp;ndash;&amp;gt;行为&amp;ndash;&amp;gt;感知&amp;ndash;&amp;gt;基于规则的控制=意识。这个推导出了，意识要依托与躯体存在。行为规则下控制躯体成为意识；基于经验反馈的感知后控制行为，这种是高级的控制模式，是智能。这和我看的另外一本书有相关，《人性论》说道人性的三个层次：1基于意识和经验的知性；2理性；3德性。它也是从物理现实世界到精神道德层面的逐层递进。
3.7 心智/躯体的黑盲性精神错乱 本书跨界确实大，用医学上的临床案例证明意识和躯体的共存性和非孤立存在性，说明心智和躯体的高度一致性。人的躯体是心智的奴隶，我也有一个例子证明：某人一大神晚上睡不着，说打坐一个小时后，心智平静，方的安睡。心智甚至可以达到自我毁灭、毁灭躯体的地步。智附着于躯体，智能可以人造产生，而且人造智能可以有强大的威力。
总结 前三章我在分机上一气呵成做完意识读书笔记，感觉它结构式论述万兆；失控后可产生出智慧的控制；失控和意识控制是完美的矛盾统一，是极低智慧个体聚合融合为群体后，简单控制量变到质变之后，产生出人造智能，群体架构分布式处理管理的躯体成了智能机器。从理论上这种机器智能是可以实施的。</description></item><item><title>rdo</title><link>https://martinliu.cn/2014/12/02/rdo/</link><pubDate>Tue, 02 Dec 2014 03:08:56 +0000</pubDate><guid>https://martinliu.cn/2014/12/02/rdo/</guid><description>https://openstack.redhat.com/Main_Page</description></item><item><title>明天澳门见</title><link>https://martinliu.cn/2014/12/01/e6988ee5a4a9e6beb3e997a8e8a781/</link><pubDate>Mon, 01 Dec 2014 16:14:51 +0000</pubDate><guid>https://martinliu.cn/2014/12/01/e6988ee5a4a9e6beb3e997a8e8a781/</guid><description>[caption id=&amp;ldquo;attachment_53304&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;802&amp;rdquo;] If there is anything you need, I won&amp;rsquo;t be far away.[/caption]
半年了，第一次出差，赶上公司开大会，Apac整个技术部门的人都汇聚一堂，这是一个geek的盛会。期待的看点还是很多的。更有周三超过百人的geek running。周末会绕道香港，在转机去新加坡，在哪有一周的产品培训。这趟洗肺之旅，不知道能够创下多少公里的跑步里程，我已经按耐不住，脚底板发痒了。
悲催的我明天才能够拿到港澳签注，因此只能乘坐下午4点的航班，到晚上才能到澳门。比其他所有人的到达时间，整整晚了一天。由于签注还没到手，还有一点点忐忑，毕竟我的程三张机票都出好了。但愿明天顺利出发。</description></item><item><title>openstack all in one</title><link>https://martinliu.cn/2014/11/25/openstack-one/</link><pubDate>Tue, 25 Nov 2014 14:42:45 +0000</pubDate><guid>https://martinliu.cn/2014/11/25/openstack-one/</guid><description>test</description></item><item><title>虚拟桌面 之我见</title><link>https://martinliu.cn/2014/11/23/e8999ae68b9fe6a18ce99da2-e4b98be68891e8a781/</link><pubDate>Sun, 23 Nov 2014 10:16:23 +0000</pubDate><guid>https://martinliu.cn/2014/11/23/e8999ae68b9fe6a18ce99da2-e4b98be68891e8a781/</guid><description>虚拟桌面 的业务价值 虚拟应用产生在虚拟桌面之前，虚拟应用是一种和VPN类似的原创访问方法。它其实最初实现的是图形GUI的远程访问，注意不是文字终端。它和VPN具有本质的区别，在于虚拟桌面是“终端不留数据/秘”的；这个它性拜它的传输协议所赐，虚拟桌面传输的主要是图像信息和键鼠指令。它的另外一个特性是“维护渐变”，在终端上维护近似于零（除了安装和配置虚拟桌面连接客户端程序外）；在服务器端应用升级和维护简单，主要是通过升级和更新一堆的Windows操作系统来实现。因此，主要的业务价值有两点：1）数据安全；2）维护简单。基于这些价值取向，它可以很好地胜任一下业务场景： [su_list icon=&amp;ldquo;icon: flag&amp;rdquo;]
多网隔离、集中上网、运维/外包/审计人员访问管理
前端操作环境和后端业务数据的分离
呼叫中心、处理中心和窗口柜员
移动办公、BYOD
安全研发、协作研发
3D虚拟桌面
等等等等
[/su_list]
业务价值很精练，业务场景太多这里就不赘述。
关键技术点 下面是虚拟桌面/应用的基本原理架构图。 通过上图可以对虚拟桌面的技术架构一目了然。虚拟桌面基础架构就是在数据中心里面部署的一堆Windows虚拟机，核心就在于让远程用户可以操作使用这些虚拟机里面的应用或者这些虚拟机桌面。鉴于此，核心技术主要有两个方面：Windows操作系统虚拟机的集中发布更新和管理；远程访问协议和所有终端管控策略。
Windows虚拟机的发布和更新 Windows的虚拟机有两种：Server和Desktop；虚拟应用技术主要是利用Windows Server操作系统天然的多用户性质，实现一份安装程序的多用户同时使用。虚拟桌面是复制n个预装应用的Desktop桌面操作系统来实现n个用户的使用。
1）虚拟机克隆 使用服务器虚拟化技术可以方便地从OS模板中克隆出n个虚拟机，它的挑战在于：
创建和更新的速度要快，特别是在虚拟机数量大的情况下
可否永久保持用户的个人数据，更新操作不会清空旧的个人数据
存储空间要节省
2）Stream OS 流化操作系统 这种方案是一种古老而容易被人遗忘的技术。就是很久很久以前的无盘工作站的思路。虚拟机或者物理机以网络启动的方法获得一个运行的Windows操作系统。所有的操作系统启动镜像都在服务器端统一管理，一种镜像可以对应启动n可操作系统，这些操作系统目前多以虚拟机的形式存在。它的特点
虚拟机对磁盘的消耗非常小，磁盘是写缓存和用户数据。它的大小可以是0或者几个GB。
创建的速度快
大批量虚拟机启动过程对网络有一定的压力，一般需要使用隔离的万兆网
同样有个人数据保持的问题
更新速度非常快，所有的操作系统在母盘更新后，需要重启来更新</description></item><item><title>偶遇一个不错主题</title><link>https://martinliu.cn/2014/11/22/e581b6e98187e4b880e4b8aae4b88de99499e4b8bbe9a298/</link><pubDate>Sat, 22 Nov 2014 16:38:28 +0000</pubDate><guid>https://martinliu.cn/2014/11/22/e581b6e98187e4b880e4b8aae4b88de99499e4b8bbe9a298/</guid><description>无意中找到一个新的Wordpress主题 Mustang Lite 作者为WebMan。安装完之后觉得非常满意，本来这是一个多用途很复杂的主题现在让我给彻底精简了。感觉比较简洁，简洁的主题是我的最爱。
Wordpress也升级到最新版本</description></item><item><title>跑步不能停</title><link>https://martinliu.cn/2014/11/18/e8b791e6ada5e4b88de883bde5819c/</link><pubDate>Tue, 18 Nov 2014 15:28:47 +0000</pubDate><guid>https://martinliu.cn/2014/11/18/e8b791e6ada5e4b88de883bde5819c/</guid><description>在最近一段时间里面，兴趣和心情持续承受着巨大的挑战。一边是亘古不变的哪些发愁的思绪，一边是潮水般涌来的新事物；还有不断的适应和调整。总之心神俱疲的感觉越来越重，是该进入正常运行态了，该恢复状态了，跑步不能中断，业精于勤！跑起来！</description></item><item><title>硬件就绪可开工了</title><link>https://martinliu.cn/2014/11/18/e7a1ace4bbb6e5b0b1e7bbaae58fafe5bc80e5b7a5e4ba86/</link><pubDate>Tue, 18 Nov 2014 15:16:50 +0000</pubDate><guid>https://martinliu.cn/2014/11/18/e7a1ace4bbb6e5b0b1e7bbaae58fafe5bc80e5b7a5e4ba86/</guid><description>昨天晚上折腾了很晚，结果扩展的8GB内存条死活和系统不兼容，导致ESXi安装卡在内存检查哪里。在京东上直接退货，然后订货HP专用内存条。今天下午新条子火速送达。装上后系统在也卡了。ESXi安装顺利完成。下载了vClient后，导入了几个常用ISO，安装好了RHEL6和7的模板机。接下来可以开始方案的研究了。由于这台服务器有着巨大的折腾的空间，未来的硬件升级whish list包括：
[su_list icon=&amp;ldquo;icon: heart-o&amp;rdquo;]
增加SSD磁盘，加速IO密集的虚拟机
增加到16GB内存，可惜不能上32GB，短板，相当的短
增加新的硬盘，当前的1TB用完后，还有三个盘位
升级CPU到Xeon e1256l v2，据说性能可以提升三倍，逻辑CPU数可以到8颗
[/su_list]
开源的东西还好，基本上都是结构简洁的居多，我可能从配置管理相关的技术开始搞起来，如Formen，Puppet；再到Ceph&amp;amp;gluster等存储应用，再到OpenStack这样较复杂的应用。</description></item><item><title>我的11.11采购</title><link>https://martinliu.cn/2014/11/13/e68891e79a8411-11e98787e8b4ad/</link><pubDate>Thu, 13 Nov 2014 16:29:38 +0000</pubDate><guid>https://martinliu.cn/2014/11/13/e68891e79a8411-11e98787e8b4ad/</guid><description>难以置信我在11.11这一天也出手了。在过去的一年多里，烧过了跑步装备，烧过了跑步GPS手表之后；在光棍节那天，我毅然开始搭建home lab了。一直不想把家里也搞成工作的场所，但是来自大学时代攒机的冲动在此刻颠覆了我。
这台主机仅仅是个开端，它只是一个空机箱，只有主板、CPU和2GB内存。以后什么都需要扩展。在网上看了几篇讨论DIY这款机器的帖子之后，果断在京东上下单了。下单的价格是2799，感觉目前这应该是全网最低价。另外还采购的配件有一条8GB的HP服务器用内存条，一块1TB的硬盘。另外，我也单独为lab开了一个页面，点击左侧链接就可以过去，以后关于对它的折腾都会记录在那边。
TO Do list：
[su_list icon=&amp;ldquo;icon: check-circle&amp;rdquo;]
收货后组装开机
购买2.5寸硬盘托架，加装入家里过剩的笔记本硬盘一块，在光驱位置附近。
安装vmware EXSi在2.5寸的盘上
[/su_list]</description></item><item><title>迷宫行者 The Maze Runner</title><link>https://martinliu.cn/2014/11/05/e8bfb7e5aeabe8a18ce88085-maze-runner/</link><pubDate>Wed, 05 Nov 2014 07:41:56 +0000</pubDate><guid>https://martinliu.cn/2014/11/05/e8bfb7e5aeabe8a18ce88085-maze-runner/</guid><description>在没有计划下，在偶然的空闲中，在一个大清早，居然看上电影了，不得不记录一下，为了最近疲惫的身心，为了留下一丁点的记忆和回味，为了首都这宝贵的蓝天。电影比较好看，最近思虑过甚，无力评论，且留下豆瓣链接。
导演: 韦斯·鲍尔 编剧: 诺亚·奥本海姆 / 格兰特·迈尔斯 / T·S·诺林 / 詹姆斯·达什纳 主演: 迪伦·欧布莱恩 / 阿梅尔·艾米恩 / 李基弘 / 布雷克·库珀 / 托马斯·桑斯特 / 威尔·保尔特 / 德克斯特·达登 / 卡雅·斯考达里奥 / 克里斯·谢菲尔德 / 乔·阿德勒 / 亚历山大·弗洛里斯 / 雅各布·拉提摩尔 / 兰德尔·D·坎宁安 / 派翠西娅·克拉克森 / 唐·麦克马纳斯 类型: 动作 / 科幻 / 悬疑 / 惊悚 官方网站: themazerunnermovie.com 制片国家/地区: 美国 / 加拿大 / 英国 语言: 英语 上映日期: 2014-10-28(中国大陆) / 2014-09-19(美国) 片长: 113分钟 又名: 迷宫行者 IMDb链接: tt1790864</description></item><item><title>备战 北马</title><link>https://martinliu.cn/2014/09/21/e5a487e68898-e58c97e9a9ac/</link><pubDate>Sun, 21 Sep 2014 16:01:51 +0000</pubDate><guid>https://martinliu.cn/2014/09/21/e5a487e68898-e58c97e9a9ac/</guid><description>北马 是我今年的目标，是第一次挑战42.195千米，是第一次搞 全马。备战的训练计划就差一个月的十几次训练，目前的状态，感觉还是“不踏实”。主要有几个方面，目前的两次长距离训练，一次28公里，一次30公里，跑下来，都是咬牙跑完最后的将近10K。问题主要有：越往后感觉体力越不是很足，渐渐的会感到信心的缺失，渐渐的会感到脚底板和脚趾的疲劳和疼痛，这会传导至小腿到膝盖，特别是右膝盖，在15k以后总会感到有点不舒服。貌似右膝盖倒成了我最严重的挑战了，如果它老人家出了问题，就麻烦了。我可不想半途而废，更不想跑完后，让人抬着回家。心中只想着：能5小时内无伤痛顺利完赛。目前确定每天早晨起来锻炼，观察双腿的和膝盖的情况，非训练日在小区快走，一定要磨合出稳定发挥状态的感觉。</description></item><item><title>Start over from RHEL</title><link>https://martinliu.cn/2014/09/21/start-rhel/</link><pubDate>Sun, 21 Sep 2014 15:40:15 +0000</pubDate><guid>https://martinliu.cn/2014/09/21/start-rhel/</guid><description>RHEL 7是一个划时代的版本，比6有很多的重大改变，特别是系统底层的管理这块，很多命令集都发生了变化。对我而言需要在一个新的平台上提升linux的技能，还是很凑巧的事情。逐渐感觉到红帽从操作系统层面，向上往云的方向，向下往软件定义的XXX方向，横向直接积压其它服务器虚拟化技术的势头逐渐明显。传统数据中心转型在即，整个技术堆栈需要重新定义和规划；创新型小公司不断挑战传统巨头厂商的地位，市场在重新定义和分化，仿佛这是进入战国时代的节奏。
天下事，分久必合，合久必分！</description></item><item><title>评测 Forerunner 220</title><link>https://martinliu.cn/2014/09/12/got-new-garmin-forerunner-220/</link><pubDate>Fri, 12 Sep 2014 15:32:36 +0000</pubDate><guid>https://martinliu.cn/2014/09/12/got-new-garmin-forerunner-220/</guid><description>随着北马的临近，备战的训练也越来越重要，由于始终没有试过30K的距离，逐渐对长距离感到焦虑，因此放弃了My Ascis以距离为目标的训练计划，转投Garmin训练计划中的全马训练计划。Garmin的计划中多是以时间为导向的，以跑步强度为训练内容，例如EasyRun 30 分钟；Threshold Run 6分钟，恢复跑2分钟，重复四次。
forerunner 220 开箱测试
开箱之后，手表本身有70%多的电，上手到公司门口，试试搜星的速度，在原地不动的情况下，由于是首次搜星，而且需要在搜星的过程中同步设置手表时钟。基本上花了大约3~5分钟的时间。公司门口在有十几层高的楼宇，应该会影响大搜星的速度。下面是绕公司楼一周的路线图。
从图中可以看到路线的左下角还是有一定的偏差。
手表数据上传 Garmin Express Garmin Connect的网站奇慢无比，主要是由于，该网址里使用了google font，由于google的服务被墙，导致页面加载google 字体需要长时间的等待，直到超时之后才会显示页面的内容。
有了Garmin Express这个客户端程序就可以避免使用网站了。而且它能自动检查手表的链接状态，USB口一旦插上设备，不管手表里面有几条记录，基本上，几秒钟就能够同步完成。
这个应用更是设备软件更新的神器，这个版本比以前的版本好太多了，同步数据在也不用发愁了。
手机蓝牙同步 Forerunner 220可以和手机通过蓝牙通信，只要手表和手机配对成功之后，手机上的Garmin Connect App立刻开始数据同步。同步到app的数据直接上传到网站上。
这种方式是空前的爽，根本不需要使用电脑，也不需要在链接什么USB联线。上传完毕之后在稍微编辑一下标题、路线和分类，基本上这个记录下次在网页上看就非常有意义了。
执行网站上的训练计划 首先，需要在Garmin Connect网站里面选择一个训练计划，激活训练计划的时候需要设定开始和结束时间，不管时间长短，它都会按照训练目标，自动设定每天的训练内容。
有了这个计划之后，就可以在日历上看到实际上每天的训练安排了；如果愿意的话应该可以同时安排多个训练计划，训练计划可以一个接一个排满全年。加入一年跑两个全马，或者多个的话，就可以提前一次性安排好一年的训练计划。
在日历页面里，点击发送到设备，网页就会调用Garmin Express，Garmin Express打开之后，它就会把网站日历上的所有训练计划条目都下载到手表里面。下载完毕之后，就可以在手表的Training - Training Calendar里面上下浏览每天的训练条目了。
执行一项计划的训练内容 按照网站上的安排，我今天的训练内容如下：
W11D5a-Easy Run 2 Steps
Run 30:00
Coll Down
选中Do Workout，点击红色按键，表滴的一声，并且震动一下，示意可以跑步了。跑步的过程中，屏幕上有四种模式的切换：
[su_list icon=&amp;ldquo;icon: play&amp;rdquo;]
训练屏幕，由于是30分钟的Easy Run，因此屏幕上就项内容，上面是配速，下面是30分钟的倒计时时钟。</description></item><item><title>意外旧机换新机</title><link>https://martinliu.cn/2014/09/06/e6848fe5a496e4b8ade697a7e69cbae68da2e696b0e69cba/</link><pubDate>Sat, 06 Sep 2014 11:22:45 +0000</pubDate><guid>https://martinliu.cn/2014/09/06/e6848fe5a496e4b8ade697a7e69cbae68da2e696b0e69cba/</guid><description>&lt;p>刚发到手的机器是一台无奈的就机器，没想到没有过一周的时间，IT说研发那边居然多出了一台新机木有人用，说可以给我；收到的新机是一个未拆封的纸箱。我热泪盈眶的对IT说“你是一个好人”。&lt;/p></description></item><item><title>本博客再次更新样式</title><link>https://martinliu.cn/2014/09/06/e69cace58d9ae5aea2e5868de6aca1e69bb4e696b0e6a0b7e5bc8f/</link><pubDate>Sat, 06 Sep 2014 10:24:01 +0000</pubDate><guid>https://martinliu.cn/2014/09/06/e69cace58d9ae5aea2e5868de6aca1e69bb4e696b0e6a0b7e5bc8f/</guid><description>这次把样式更新为 Editor（by Array）。选择这个主题的原因有几点。
[su_list icon=&amp;ldquo;icon: smile-o&amp;rdquo;]
Editor 是一个简约风格的主题，这种轻量级主题即简洁大方，速度快，可谓鱼和熊掌能够兼得。
Feature image 是特大的1000*625，最近两年特别喜欢这个样式，而且这个图片既可以在list中现实也可以在single post中显示。
目前看和CDN插件不冲突
[/su_list]
这就是使用免费主题的优势，随时更换心情，想换就换。</description></item><item><title>八月份跑步回顾</title><link>https://martinliu.cn/2014/09/06/e585abe69c88e4bbbde8b791e6ada5e59b9ee9a1be/</link><pubDate>Sat, 06 Sep 2014 02:13:18 +0000</pubDate><guid>https://martinliu.cn/2014/09/06/e585abe69c88e4bbbde8b791e6ada5e59b9ee9a1be/</guid><description>二零一四年八月我跑步距离总计超过一百八十公里，创造个人月跑新纪录！
这个月多次跑20公里，一次超过10公里也比较多，总跑步天数也多。值得纪念一下。希望今年能够顺利完成一次全马。</description></item><item><title>避暑 崇礼 海沱 延庆 2 日游</title><link>https://martinliu.cn/2014/08/04/e981bfe69a91-e5b487e7a4bc-e6b5b7e6b2b1-e5bbb6e5ba86-2-e697a5e6b8b8/</link><pubDate>Mon, 04 Aug 2014 09:40:59 +0000</pubDate><guid>https://martinliu.cn/2014/08/04/e981bfe69a91-e5b487e7a4bc-e6b5b7e6b2b1-e5bbb6e5ba86-2-e697a5e6b8b8/</guid><description>&lt;p>3伏天的雾霾让人无奈，只好逃离北京去避暑。第一站崇礼。崇礼的距离不算近，但是最让人感到欲哭无泪的还是拥堵的八达岭高速，堵的真实让人走投无路啊！没有最堵只有更堵，让逃离帝都的人在出京路上非常糟心。交通在出了北京界后，就仿佛进入了另外一个世界，天也是蓝的，路是畅通的。&lt;/p></description></item><item><title>西安出差</title><link>https://martinliu.cn/2014/07/11/e8a5bfe5ae89e587bae5b7ae/</link><pubDate>Fri, 11 Jul 2014 17:51:48 +0000</pubDate><guid>https://martinliu.cn/2014/07/11/e8a5bfe5ae89e587bae5b7ae/</guid><description>周四中午去，晚上加班到12点多；周五下午和CIO会议，晚上回北京到家11：30多，想睡觉，失眠睡不着中。</description></item><item><title>运气还能更糟么？</title><link>https://martinliu.cn/2014/07/09/e8bf90e6b094e8bf98e883bde69bb4e7b39fe4b988/</link><pubDate>Wed, 09 Jul 2014 07:46:17 +0000</pubDate><guid>https://martinliu.cn/2014/07/09/e8bf90e6b094e8bf98e883bde69bb4e7b39fe4b988/</guid><description>去洗车，发现一条轮胎，右后胎，扎了钉子，拆下来仔细看，居然扎了一根六棱大头钉。我开车太糙了。师傅帮忙试水泡，发现却是漏气，号称是明天早晨就没气了。师傅赶紧推向米其林轮胎，建议我一气四条都换了。一条860。我决定换两条，为了平衡；师傅帮我检查剩下的三条旧胎，发现其中一个早就扎了钉子了。看来我换两条的决定无论如何都是正确的。把两条新胎换到前轮上，剩下两条胎，俩师傅玩命得帮我找毛病，看胎上有裂口，就说已经断了，看不出毛病的那个，摸了一圈，说看都起包了。最后我依然决定换两条备奈特的810一条，刷卡走人。
车的麻烦还不止这些，眼看着就要续保险了，这个是我的车的一年的大头，接着要去修一年积累的划痕，接着去做保养，然后交一年积累的罚款和扣分，然后验车。争取8月底前完成这些事情。</description></item><item><title>周末跑步</title><link>https://martinliu.cn/2014/07/06/e591a8e69cabe8b791e6ada5/</link><pubDate>Sun, 06 Jul 2014 14:34:28 +0000</pubDate><guid>https://martinliu.cn/2014/07/06/e591a8e69cabe8b791e6ada5/</guid><description>周六奥森6.22公里，天气太热，没有能坚持到北园一圈。
周日北工大7.12公里，天气依然很热，空气污染重，坚持了45分钟，
正式备战北马的节奏么？不是，还是锻炼身体最重要。</description></item><item><title>美国骗局 American Hustle (2013)</title><link>https://martinliu.cn/2014/07/05/e7be8ee59bbde9aa97e5b180-american-hustle-2013/</link><pubDate>Sat, 05 Jul 2014 15:39:20 +0000</pubDate><guid>https://martinliu.cn/2014/07/05/e7be8ee59bbde9aa97e5b180-american-hustle-2013/</guid><description>导演: 大卫·欧·拉塞尔
编剧: 埃里克·辛格尔 / 大卫·欧·拉塞尔
主演: 克里斯蒂安·贝尔 / 布莱德利·库珀 / 艾米·亚当斯 / 杰瑞米·雷纳 / 詹妮弗·劳伦斯 / 路易·C·K/ 杰克·休斯顿 / 迈克尔·佩纳 / 谢伊·惠格姆 / 亚历桑德罗·尼沃拉 / 伊丽莎白·霍尔姆 / 保罗·赫尔曼 / 萨伊德·塔格马奥 / 马修·拉塞尔 / 托马斯·马修
类型: 剧情 / 犯罪
官方网站: www.americanhustle-movie.com
制片国家/地区: 美国
语言: 英语 / 阿拉伯语
上映日期: 2014-07-04(中国大陆) / 2013-12-20(美国)
片长: 103分钟(中国大陆) / 138分钟(美国)
又名: 瞒天大布局(台) / 骗海豪情(港) / 人人都是骗子 / American Bullshit
IMDb链接: tt1800241
[su_quote]观后感：社会题材的东西感觉越来越喜欢了，相信还会看第二遍，情节非常好看，给周末增色不少！[/su_quote]</description></item><item><title>衡水湖 马拉松</title><link>https://martinliu.cn/2014/07/05/e8a1a1e6b0b4e6b996-e9a9ace68b89e69dbe/</link><pubDate>Sat, 05 Jul 2014 15:25:02 +0000</pubDate><guid>https://martinliu.cn/2014/07/05/e8a1a1e6b0b4e6b996-e9a9ace68b89e69dbe/</guid><description>和同事们在群里面那么一聊，本着以赛代练的方针，备战北马正式开始，报名 衡水湖 马拉松，首次全马居然在衡水湖，想不到啊！想不到！</description></item><item><title>MacBook Air 这个性价比值得入手了</title><link>https://martinliu.cn/2014/07/02/macbook-air-e8bf99e4b8aae680a7e4bbb7e6af94e580bce5be97e585a5e6898be4ba86/</link><pubDate>Wed, 02 Jul 2014 07:35:34 +0000</pubDate><guid>https://martinliu.cn/2014/07/02/macbook-air-e8bf99e4b8aae680a7e4bbb7e6af94e580bce5be97e585a5e6898be4ba86/</guid><description>&lt;h2 id="当前的电脑">当前的电脑&lt;/h2>
&lt;p>&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2014/07/%E5%85%B3%E4%BA%8E%E6%9C%AC%E6%9C%BA.jpg" alt="关于本机">&lt;/p>
&lt;p>我现在用的MacBook Pro是3年前买的，更新到8GB内存，500GB 普通硬盘，不得不说，除了充电器两头电线用到掉皮，里面的电线裸露之外，这台电脑还是我用过的做长时间，并且性能和质感保持最佳的电脑。这是一台BYOD的设备。&lt;/p></description></item><item><title>mac mini</title><link>https://martinliu.cn/2014/07/02/mac-mini/</link><pubDate>Wed, 02 Jul 2014 07:16:05 +0000</pubDate><guid>https://martinliu.cn/2014/07/02/mac-mini/</guid><description>坐等Mac Mini的最新版本在秋季发布，还需要忍耐一个燥热的夏季，等不急了！这个机器适合用在Lab测试机。</description></item><item><title>武昌会议三次慢跑</title><link>https://martinliu.cn/2014/07/01/e6ada6e6988ce4bc9ae8aeaee4b889e6aca1e685a2e8b791/</link><pubDate>Tue, 01 Jul 2014 16:37:47 +0000</pubDate><guid>https://martinliu.cn/2014/07/01/e6ada6e6988ce4bc9ae8aeaee4b889e6aca1e685a2e8b791/</guid><description>在东湖公园里面跑步绝对是一种享受，跑一圈大约是7公里左右。我这三天的会议跑了三条路线。
[su_list icon=&amp;ldquo;icon: rocket&amp;rdquo;]
东湖宾馆 ，其实是故意跑进去的，虽然入口都是武警站岗，还是从一个工地跑了进去，最后翻墙出来，看到墙头就有摄像头，狂汗~~~
武汉大学，正门湖边，路不好，跑了4公里，返回，往返8k。
东湖公园，风景优美、跑步的道路舒适、不枉此行，快速跑了6k
[/su_list]</description></item><item><title>浸泡式开会</title><link>https://martinliu.cn/2014/06/29/e6b5b8e6b3a1e5bc8fe5bc80e4bc9a/</link><pubDate>Sun, 29 Jun 2014 16:02:00 +0000</pubDate><guid>https://martinliu.cn/2014/06/29/e6b5b8e6b3a1e5bc8fe5bc80e4bc9a/</guid><description>武昌会议第二天，两天重复不换台，重复着：起床、跑步、吃饭、开会、吃饭、开会、吃饭。。。。。。。。 手机被上收到会议桌最前方，没有break，不需使用手机。 电脑必须关掉，所有记录只能用纸和笔。</description></item><item><title>无奈出差</title><link>https://martinliu.cn/2014/06/27/e697a0e5a588e587bae5b7ae/</link><pubDate>Fri, 27 Jun 2014 15:52:58 +0000</pubDate><guid>https://martinliu.cn/2014/06/27/e697a0e5a588e587bae5b7ae/</guid><description>今天是实在不应该出差！！</description></item><item><title>武汉 会议</title><link>https://martinliu.cn/2014/06/27/e6ada6e6b189-e4bc9ae8aeae/</link><pubDate>Fri, 27 Jun 2014 15:46:16 +0000</pubDate><guid>https://martinliu.cn/2014/06/27/e6ada6e6b189-e4bc9ae8aeae/</guid><description>&lt;p>今天是非常特殊的一天，发生了一件另外无奈的事情。真是不想在这天也出差，但是还要它是旅程；用了一个半小时才从三环爬到了西站。上车后，高铁4个小时准时的把我送到了武汉。&lt;/p></description></item><item><title>电波表 对时技巧</title><link>https://martinliu.cn/2014/06/25/e794b5e6b3a2e8a1a8-e5afb9e697b6e68a80e5b7a7/</link><pubDate>Wed, 25 Jun 2014 06:14:41 +0000</pubDate><guid>https://martinliu.cn/2014/06/25/e794b5e6b3a2e8a1a8-e5afb9e697b6e68a80e5b7a7/</guid><description>首先，确保自己所在的地点位于接受范围以内。如北京距离河南在距离商丘1000公里以内的范围，因此能够正常接受电波。
如果，出差去到其他国家的话，可以参考下面的电波发射点地图。
然后，就是手动或者自动对时了。手表需要放在非隔离的空间中，不能在一个没有窗户的房间。
最后，我最近天天晚上1点左右手工对时，电波接收正常。</description></item><item><title>天津 短暂出差</title><link>https://martinliu.cn/2014/06/25/e5a4a9e6b4a5-e79fade69a82e587bae5b7ae/</link><pubDate>Wed, 25 Jun 2014 04:47:28 +0000</pubDate><guid>https://martinliu.cn/2014/06/25/e5a4a9e6b4a5-e79fade69a82e587bae5b7ae/</guid><description>&lt;p>昨天中午去天津，下午完事了就会北京。经过天津站前广场，稍微观察了一下，这次发现天津站修的如此的高大上，广场非常的宽敞，河岸的风景也十分的靓丽。就是车站里面的秩序还是不行，售票厅里的自助售票机是坏的，进站派长队等着检查身份证和安检。&lt;/p></description></item><item><title>纯美和邪恶的相互转化-Maleficent</title><link>https://martinliu.cn/2014/06/23/e7baafe7be8ee5928ce982aae681b6e79a84e79bb8e4ba92e8bdace58c96-maleficent/</link><pubDate>Mon, 23 Jun 2014 07:29:48 +0000</pubDate><guid>https://martinliu.cn/2014/06/23/e7baafe7be8ee5928ce982aae681b6e79a84e79bb8e4ba92e8bdace58c96-maleficent/</guid><description>导演: 罗伯特·斯特罗姆伯格
编剧: 保罗·迪尼 / 琳达·伍尔芙顿
主演: 安吉丽娜·朱莉 / 艾尔·范宁 / 沙尔托·科普雷 / 莱丝利·曼维尔 / 伊梅尔达·斯汤顿 / 朱诺·坦普尔 / 萨姆·赖利 / 布伦顿·思韦茨 / 肯内斯·库兰汉姆 / 莎拉·弗林德 / 汉娜·纽 / 伊莎贝尔·莫洛伊 /迈克尔·希金斯 / 艾拉·珀内尔 / 杰克逊·比尤斯
类型: 动作 / 爱情 / 奇幻 / 冒险
官方网站: movies.disney.com/maleficent
制片国家/地区: 美国
语言: 英语
上映日期: 2014-06-20(中国大陆) / 2014-05-30(美国)
片长: 98分钟(中国大陆) / 97分钟(美国)
又名: 黑魔后：沉睡魔咒(港) / 梅尔菲森特 / 玛琳菲森 / 黑法魔女 / 睡美人外传
IMDb链接: tt1587310</description></item><item><title>手动对时成功</title><link>https://martinliu.cn/2014/06/21/e6898be58aa8e5afb9e697b6e68890e58a9f/</link><pubDate>Sat, 21 Jun 2014 16:18:44 +0000</pubDate><guid>https://martinliu.cn/2014/06/21/e6898be58aa8e5afb9e697b6e68890e58a9f/</guid><description>12点刚过，还是担心表的最有价值功能是否能够正常工作；于是走向阳台，按下D键，几分钟后，出错，对时失败；不甘心，再次按下D键，看信号等级L3，惴惴不安等了几分钟后终于显示：Get 6:22 12:06</description></item><item><title>CASIO G-SHOCK GW-6900 太阳能六局电波</title><link>https://martinliu.cn/2014/06/21/casio-g-shock-gw-6900e5a4aae998b3e883bde585ade5b180e794b5e6b3a2/</link><pubDate>Sat, 21 Jun 2014 12:29:31 +0000</pubDate><guid>https://martinliu.cn/2014/06/21/casio-g-shock-gw-6900e5a4aae998b3e883bde585ade5b180e794b5e6b3a2/</guid><description>&lt;p>在京东入手 GW-6900 这块6局电波表。主要的吸引我的就是六局电波功能，其它的太阳能、防水等等其它功能都是浮云，可惜的是目前还没有手动接受电波成功过。&lt;/p></description></item><item><title>推荐Podcast - 一个人的书房</title><link>https://martinliu.cn/2014/06/16/e68ea8e88d90-e4b880e4b8aae4babae79a84e4b9a6e688bf-podcast/</link><pubDate>Mon, 16 Jun 2014 09:27:33 +0000</pubDate><guid>https://martinliu.cn/2014/06/16/e68ea8e88d90-e4b880e4b8aae4babae79a84e4b9a6e688bf-podcast/</guid><description>&lt;p>当静下心来读书成为一个奢望，我们还是能通过其它的方式来亲近书籍，感受另外一种听书的方式。推荐下面这个听书Podcast，他们读的书还是挺吸引人的。&lt;/p>
&lt;p>[caption id=&amp;ldquo;attachment_52878&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;967&amp;rdquo;]&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2014/06/Snip20140616_7.png" alt="一个人的书房"> 一个人的书房[/caption]&lt;/p>
&lt;p>他们的书单：《搭车去柏林》《巨流河》《断舍离》《流波上的舞》《追风筝的人》《安妮日记》《冬牧场》《生死的幻觉》《梦里花落知多少》&lt;/p></description></item><item><title>第三个马年</title><link>https://martinliu.cn/2014/06/16/e7acace4b889e4b8aae9a9ace5b9b4/</link><pubDate>Mon, 16 Jun 2014 08:30:51 +0000</pubDate><guid>https://martinliu.cn/2014/06/16/e7acace4b889e4b8aae9a9ace5b9b4/</guid><description>这是一个特殊的日子，所有的事情高高低低、起起落落；在一波又一波中挫折着，前行着！</description></item><item><title>该睡觉了</title><link>https://martinliu.cn/2014/06/15/e8afa5e79da1e8a789e4ba86/</link><pubDate>Sun, 15 Jun 2014 19:01:04 +0000</pubDate><guid>https://martinliu.cn/2014/06/15/e8afa5e79da1e8a789e4ba86/</guid><description>免费主题 The Night Watch + 七牛CDN 给力，最终网页绝大多数能够非常快速打开，今天到为止了。</description></item><item><title>没完没了</title><link>https://martinliu.cn/2014/06/15/e6b2a1e5ae8ce6b2a1e4ba86/</link><pubDate>Sun, 15 Jun 2014 18:58:00 +0000</pubDate><guid>https://martinliu.cn/2014/06/15/e6b2a1e5ae8ce6b2a1e4ba86/</guid><description>实践证明我曾经买的所有的blog theme都不适合我，最后还是回到了免费主题上，非商用blog，付费主题慎用，除非你的定力很好，不好折腾。</description></item><item><title>回归到最简洁的状态</title><link>https://martinliu.cn/2014/06/15/e59b9ee5bd92e588b0e69c80e7ae80e6b481e79a84e78ab6e68081/</link><pubDate>Sun, 15 Jun 2014 18:12:21 +0000</pubDate><guid>https://martinliu.cn/2014/06/15/e59b9ee5bd92e588b0e69c80e7ae80e6b481e79a84e78ab6e68081/</guid><description>一个bolg要经过多少次折腾和重定义，我已经不记得是第几次晚上换主题换到2点才睡觉了。要说我为什么？我不过是把其它人熬夜看足球的精力用在了一项觉得有意思的事情上。
本次更新主要是，更改一下此blog的方向，以后发布的内容将不会在有技术帖，原来的技术贴依然欢迎留言和讨论；今后的风格是简洁风格，多以生活内容为主。</description></item><item><title>于Citrix 25周年的故事 Imagination Innovation Growth</title><link>https://martinliu.cn/2014/02/10/e4ba8ecitrix-25e591a8e5b9b4e79a84e69585e4ba8b-imagination-innovation-growth/</link><pubDate>Mon, 10 Feb 2014 11:09:21 +0000</pubDate><guid>https://martinliu.cn/2014/02/10/e4ba8ecitrix-25e591a8e5b9b4e79a84e69585e4ba8b-imagination-innovation-growth/</guid><description>[video width=&amp;ldquo;640&amp;rdquo; height=&amp;ldquo;360&amp;rdquo; mp4=&amp;ldquo;http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2014/02/The-Citrix-Story-25-Years-of-Imagination-Innovation-and-Growth.mp4&amp;rdquo;][/video]
以上视频从YouTube转载。是Citrix给自己的拍摄的生日礼物。真正的25岁生日那天在今年四月份。下面是维基百科上对Citrix的介绍。
**[Citrix Systems](https://en.wikipedia.org/wiki/Citrix), Inc.** is an American [multinational](https://en.wikipedia.org/wiki/Multinational_corporation)[software](https://en.wikipedia.org/wiki/Software) company founded in 1989 that provides server, application and [desktop virtualization](https://en.wikipedia.org/wiki/Desktop_virtualization), networking, [software-as-a-service](https://en.wikipedia.org/wiki/Software-as-a-service) (SaaS), and [cloud computing](https://en.wikipedia.org/wiki/Cloud_computing) technologies, including [Xen](https://en.wikipedia.org/wiki/Xen) open-source products. Citrix currently services around 330,000 organizations worldwide[[2]](https://en.wikipedia.org/wiki/Citrix#cite_note-2) and is based in [Fort Lauderdale](https://en.wikipedia.org/wiki/Fort_Lauderdale,_Florida), [Florida](https://en.wikipedia.org/wiki/Florida), in the [Miami metropolitan area](https://en.wikipedia.org/wiki/Miami_metropolitan_area), with [subsidiary](https://en.wikipedia.org/wiki/Subsidiary)operations in [California](https://en.wikipedia.org/wiki/California) and [Massachusetts](https://en.wikipedia.org/wiki/Massachusetts), and additional development centers in [Australia](https://en.wikipedia.org/wiki/Australia), [India](https://en.wikipedia.org/wiki/India), [Canada](https://en.wikipedia.org/wiki/Canada) and the [United Kingdom](https://en.</description></item><item><title>开源服务器的时代真到了？</title><link>https://martinliu.cn/2014/02/08/e5bc80e6ba90e69c8de58aa1e599a8e79a84e697b6e4bba3e79c9fe588b0e4ba86efbc9f/</link><pubDate>Sat, 08 Feb 2014 03:17:37 +0000</pubDate><guid>https://martinliu.cn/2014/02/08/e5bc80e6ba90e69c8de58aa1e599a8e79a84e697b6e4bba3e79c9fe588b0e4ba86efbc9f/</guid><description>&lt;p>今天广为关注的的新闻末过Facebook的单人管理上万服务器。上网看了一下此新闻的出处：&lt;a href="http://www.datacenterknowledge.com/archives/2013/11/20/facebook-ops-staffer-manages-20000-servers/">http://www.datacenterknowledge.com/archives/2013/11/20/facebook-ops-staffer-manages-20000-servers/ &lt;/a> 本文的描述如下：Delfina Eberly, Director of Data Center Operations, Facebook, presented the Tuesday morning keynote about optimizing data center operations. In terms of hardware, Facebook, because it runs such an enormous volume of servers, focuses on serviceability, including starting from the ground up by influencing server design to ensure easiest and least time consuming methods to repair equipment in the data hall.&lt;/p></description></item><item><title>优化 WordPress 页面到一秒内</title><link>https://martinliu.cn/2014/02/07/e4bc98e58c96wordpresse9a1b5e99da2e588b0e4b880e7a792e58685/</link><pubDate>Fri, 07 Feb 2014 16:18:06 +0000</pubDate><guid>https://martinliu.cn/2014/02/07/e4bc98e58c96wordpresse9a1b5e99da2e588b0e4b880e7a792e58685/</guid><description>&lt;p>本帖系技术贴，目的在于总结一下这次对本站点优化的经历。总之结果很重要，把基本上所有页面都优化到大约0.8秒左右的载入速度。如果你也是在独立LAMP服务器上运行WordPress的话，我想本文可能对你会有所帮助。 &lt;/p></description></item><item><title>天籁之音 五言古诗 蝉</title><link>https://martinliu.cn/2014/01/08/e5a4a9e7b181e4b98be99fb3-e697a0e8a880e58fa4e8af97-e89d89/</link><pubDate>Wed, 08 Jan 2014 10:11:22 +0000</pubDate><guid>https://martinliu.cn/2014/01/08/e5a4a9e7b181e4b98be99fb3-e697a0e8a880e58fa4e8af97-e89d89/</guid><description>[audio m4a=&amp;ldquo;http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2014/01/chan.m4a&amp;rdquo;][/audio]
垂绥饮清露，流响出疏桐。 居高声自远，非是藉秋风。
&amp;ndash;虞世南【初唐】</description></item><item><title>Garmin Beijing LSD Club</title><link>https://martinliu.cn/2014/01/08/garmin-beijing-lsd-club/</link><pubDate>Wed, 08 Jan 2014 05:19:28 +0000</pubDate><guid>https://martinliu.cn/2014/01/08/garmin-beijing-lsd-club/</guid><description>我在Garmin网站上建立了一个”长跑俱乐部群“ Beijing LSD Club ； 欢迎各位爱好者加入。LSD的意思是：Long Slow distance running ； 简单说就是长跑。
群的地址： http://connect.garmin.com/group/514228 ；
我今天在Garmin Connect上面的群搜索哪里，那么一搜：北京、Beijing；居然什么也没用；我就不信了，北京用Garmin的表的跑友应该也不少，何不大家都聚集起来，互相分享互相激励。热烈欢迎大家参加！</description></item><item><title>马丁</title><link>https://martinliu.cn/2014/01/01/e9a9ace4b881/</link><pubDate>Wed, 01 Jan 2014 12:37:38 +0000</pubDate><guid>https://martinliu.cn/2014/01/01/e9a9ace4b881/</guid><description>如果你把思考交给了电视剧；把联系和人际圈交给了手机；把双腿和出行都交给了汽车；把健康都交给了补品和药片负责；那么你的生活也许是时尚的，但一定是错误的；也许是习惯的，但一定会为此买单的。 请让书，聚会，跑步，锻炼更多的出现在生活里。—— 马丁</description></item><item><title>著名美国马拉松运动员 Ryan Hall</title><link>https://martinliu.cn/2014/01/01/ryan-hall/</link><pubDate>Wed, 01 Jan 2014 09:56:27 +0000</pubDate><guid>https://martinliu.cn/2014/01/01/ryan-hall/</guid><description>&lt;p>了解一位著名的美国马拉松运动员。非常年轻，非常优秀的跑者。&lt;a href="http://en.wikipedia.org/wiki/Ryan_Hall_(runner)">&lt;strong>Ryan Hall&lt;/strong>&lt;/a> holds the American records for the half marathon and 20k, and his 2:04:58 marathon time is the fastest ever by an American. Ryan’s wife, Sara, is also a professional runner. Their Hall Steps Foundation urges the running community to help end global poverty.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Birthplace: Kirkland, Washington&lt;/p>
&lt;/li>
&lt;li>
&lt;p>High School: Big Bear High School, Big Bear Lake, California&lt;/p>
&lt;/li>
&lt;li>
&lt;p>College: Stanford University (Major – Sociology, Class of 2006)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ryan and his wife Sara, currently currently train in Flagstaff, AZ and Palo Alto, CA&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="personal-bests">Personal Bests&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>1,500m – 3:42.70 (2001)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>5,000m – 13:16.03 (2005)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>10,000m – 28:07.93 (2007)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>20,000m – 57:54 (2006) American Record&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Half-marathon – 59:43 (2007) American Record&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Marathon – 2:04:58 (2011) fastest American performance of all time&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>[su_quote]“I run because I believe that God has created me to run. When I run, I feel like I am fulfilling the purpose for which I was created. I know that I may not always run, but that God has used running as a part of my life to lead me down a path that I would not have taken otherwise. If I had never run, I would have never went to Stanford, met Sara, or be doing what I am doing now. I believe that God wants me to run to bring glory to his name and to further his kingdom on earth in some way. Some of my most intimate moments with God have been out in the trails, on the race course, or on the track. This is why I love to run.”[/su_quote]&lt;/p></description></item><item><title>Reviewer’s Guide for Remote 3D Graphics Apps</title><link>https://martinliu.cn/2013/12/31/reviewers-guide-remote-3d-graphics-apps/</link><pubDate>Tue, 31 Dec 2013 11:36:27 +0000</pubDate><guid>https://martinliu.cn/2013/12/31/reviewers-guide-remote-3d-graphics-apps/</guid><description>有了这3本书我们再也不用担心GPU的测试了。
[su_button url=&amp;ldquo;http://www.citrix.com/wsdm/restServe/skb/attachments/RDY12010/Reviewer%27s%20Guide%20for%20HDX%203D%20Pro%20-%2001%20XenServer.pdf&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;3d&amp;rdquo; background=&amp;quot;#4e7f22&amp;quot; size=&amp;ldquo;6&amp;rdquo; icon=&amp;ldquo;icon: download&amp;rdquo;]Part 1下载点击这里 Reviewer’s Guide for Remote 3D Graphics Apps [/su_button]
[su_button url=&amp;ldquo;http://www.citrix.com/wsdm/restServe/skb/attachments/RDY12011/Reviewer%27s%20Guide%20for%20HDX%203D%20Pro%20-%2002%20vDGA.pdf&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;3d&amp;rdquo; background=&amp;quot;#4e7f22&amp;quot; size=&amp;ldquo;6&amp;rdquo; icon=&amp;ldquo;icon: download&amp;rdquo;]Part 2 下载点击这里 Reviewer’s Guide for Remote 3D Graphics Apps [/su_button]
[su_button url=&amp;ldquo;http://www.citrix.com/wsdm/restServe/skb/attachments/RDY12202/Reviewer%20Guide%20for%20HDX%203D%20Pro%2003%20vGPU%20GA.pdf&amp;rdquo; target=&amp;ldquo;blank&amp;rdquo; style=&amp;ldquo;3d&amp;rdquo; background=&amp;quot;#4e7f22&amp;quot; size=&amp;ldquo;6&amp;rdquo; icon=&amp;ldquo;icon: download&amp;rdquo;]Part3 下载点击这里 Reviewer’s Guide for Remote 3D Graphics Apps [/su_button]
This document helps you set up a simplified lab to review hardware-accelerated GPU virtualization for Windows desktop VDI workloads on Citrix XenServer.</description></item><item><title>新加坡签证申请所需要材料</title><link>https://martinliu.cn/2013/12/31/e696b0e58aa0e59da1e7adbee8af81e794b3e8afb7e68980e99c80e8a681e69d90e69699/</link><pubDate>Tue, 31 Dec 2013 03:30:33 +0000</pubDate><guid>https://martinliu.cn/2013/12/31/e696b0e58aa0e59da1e7adbee8af81e794b3e8afb7e68980e99c80e8a681e69d90e69699/</guid><description>&lt;p>虽然是第二次办理签证，是自己 送资料那种，但是还是少复印了一页材料，下面是一点经验总结：&lt;/p>
&lt;p>[su_list icon=&amp;ldquo;icon: check&amp;rdquo;]&lt;/p>
&lt;ul>
&lt;li>
&lt;p>新加坡签证的办理，必须到新加坡大使馆的网站上看须知，所以网站一定要去看：&lt;a href="http://www.mfa.gov.sg/content/mfa/overseasmission/beijing/ch.html">http://www.mfa.gov.sg/content/mfa/overseasmission/beijing/ch.html&lt;/a> 本页下面的内容就是签证办理的注意事项了，最好还是到网站上看，以防止网站上有更新的东西。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>户口本复印必须要完整，户口本的每一页都需要复印一页&lt;/p>
&lt;/li>
&lt;li>
&lt;p>签证费是153一个人，自己准备零钱&lt;/p>
&lt;/li>
&lt;li>
&lt;p>旅游签证是35天有效期，从签发的那天算，35天后，不管你是否入境，签证都作废了，所以不可以提前太早去办理签证&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通常情况下，北京3个工作日就可以取签证了&lt;/p>
&lt;/li>
&lt;li>
&lt;p>送资料的时间是周1～5早晨9点到11点，去晚了就关门了&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>[/su_list]&lt;/p></description></item><item><title>Garmin Forerunner TheLongRun</title><link>https://martinliu.cn/2013/12/21/garmin-forerunner-thelongrun/</link><pubDate>Sat, 21 Dec 2013 15:52:48 +0000</pubDate><guid>https://martinliu.cn/2013/12/21/garmin-forerunner-thelongrun/</guid><description>http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2014/02/Garmin-AD-TheLongRun-Forerunner-220-and-620.mp4</description></item><item><title>Garmin FR620 第二块跑步手表目标</title><link>https://martinliu.cn/2013/12/21/garmin-fr620-e7acace4ba8ce59d97e8b791e6ada5e6898be8a1a8e79baee6a087/</link><pubDate>Sat, 21 Dec 2013 11:16:37 +0000</pubDate><guid>https://martinliu.cn/2013/12/21/garmin-fr620-e7acace4ba8ce59d97e8b791e6ada5e6898be8a1a8e79baee6a087/</guid><description>Garmin ForRunner 620
尺寸: 4.5 x 4.5 x 1.25 cm 重量: 43.6 g 1“ 彩色/触摸式萤幕180x180 续航力: 手表模式6周 / 训练模式10小时. 50m 防水 支援live tracking - 可与手机连线, 将轨迹及时传送出去, 与朋友分享. 支援蓝牙LE 支援Wifi 支援Running Dynamics 支援Recovery Advisor 支援VO2 max estimate
Garmin ForRunner 220
尺寸: 4.5 x 4.5 x 1.2 cm 重量: 40.7 g 1“ 彩色/非触摸式萤幕180x180 续航力: 手表模式6周 / 训练模式10小时. 50m 防水 支援live tracking - 可与手机连线, 将轨迹及时传送出去, 与朋友分享. 支援蓝牙LE 不支援Wifi 不支援Running Dynamics 不支援Recovery Advisor 不支援VO2 max estimate</description></item><item><title>2013 Year Of Running</title><link>https://martinliu.cn/2013/12/19/2013-year-running/</link><pubDate>Thu, 19 Dec 2013 15:20:47 +0000</pubDate><guid>https://martinliu.cn/2013/12/19/2013-year-running/</guid><description>&lt;p>跑了一整年了，回顾一下数字：从咕咚运动和Garmin Connect里面记录的总和里程为九百多公里；跑步主要是为了强健体魄和挑战自我。同时也有非常多的其他好处：减压、提振精气神、消除负面情绪等等。每次跑到欲罢不能的时候，都是一种畅快的肉体和精神之旅。跑步所到达的城市有十几个；国外的城市有：新加坡、新奥尔良、洛杉矶、圣地亚哥。下面是所有跑步地点的清单：&lt;/p></description></item><item><title>XenServer 添加硬盘做本地存储</title><link>https://martinliu.cn/2013/11/25/xenservere6b7bbe58aa0e7a1ace79b98e5819ae69cace59cb0e5ad98e582a8/</link><pubDate>Mon, 25 Nov 2013 10:39:00 +0000</pubDate><guid>https://martinliu.cn/2013/11/25/xenservere6b7bbe58aa0e7a1ace79b98e5819ae69cace59cb0e5ad98e582a8/</guid><description>当您的 XenServer 测试机需要增加硬盘的时候，你需要通过简单的几条指令把新硬盘添加为本地存储。
下面的实例情况是：
测试机有两块硬盘
OCZ SSD硬盘一块
SATA 不通硬盘一块
还有一个U盘插在系统上
SATA的硬盘是我需要加载的新硬盘
这个新的硬盘希望被处理成XenServer本地的SR
添加过程中主要需要使用这样几条指令：
查看当前系统上的检查出来并且挂载中的分区： cat /proc/partitions
详细查看这些存储和设备对应的情况： ls -l /dev/disk/by-id/
创建新的本地SR: xe sr-create content-type=user device-config:device=/dev/disk/by-id/scsi-SATA_ST9320325ASG_5VD7G964 host-uuid=3850317b-d23a-4ed0-87f9-2b27854319e5 name-label=&amp;ldquo;SATA320&amp;rdquo; shared=false type=lvm
[bash] [root@XS62 ~]# cat /proc/partitions major minor #blocks name
7 0 52378 loop0 8 0 250059096 sda 8 1 4193297 sda1 8 2 4193297 sda2 8 3 241669447 sda3 8 16 312571224 sdb 8 17 204800 sdb1 8 18 312235312 sdb2 8 32 4137984 sdc 8 36 4137856 sdc4 252 0 241655808 dm-0</description></item><item><title>AWS 免费套餐截止后必须终止</title><link>https://martinliu.cn/2013/09/24/aws-e5858de8b4b9e5a597e9a490e688aae6ada2e5908ee5bf85e9a1bbe7bb88e6ada2/</link><pubDate>Tue, 24 Sep 2013 05:26:22 +0000</pubDate><guid>https://martinliu.cn/2013/09/24/aws-e5858de8b4b9e5a597e9a490e688aae6ada2e5908ee5bf85e9a1bbe7bb88e6ada2/</guid><description>对于亚马逊 AWS 的测试用户来说，你要知道你的免费套餐的截止日期，否则预期就会收费了，会计时收费，像叫停车费一样。我今天收到了亚马逊的提醒邮件，被告知，我的免费套餐将在本月截止，然后我不得不终止了该服务器。
我是去年10月19日开通的这个免费实例，作为一个一年的 AWS 用户来说，深深的体会到了 AWS 的强大，它的管理控制台非常成熟，它的提供的服务非常全面，它的云市场做的相当好。对于任何一个普通人，你可以无痛，无压力的面对一个自己的数据中心，你可以假象你拥有一个世界上最高级的数据中心，你可以给你的应用任意、随时随地的附件任何一种高级的数据中心基础架构服务，你可以具有无限的资源，并且这个资源不限制类型和容量。共有云必将和私有云二分天下，共有云必将赢得所有中小企业用户。
[caption id=&amp;ldquo;attachment_52574&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] EC2_Management_Console[/caption]
[caption id=&amp;ldquo;attachment_52575&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] Try_Cloud_Computing_Free_with_AWS_Free_Tier[/caption]</description></item><item><title>CloudStack+Swift 我心中的黄金搭档</title><link>https://martinliu.cn/2013/09/03/cloudstack-swift/</link><pubDate>Tue, 03 Sep 2013 08:25:46 +0000</pubDate><guid>https://martinliu.cn/2013/09/03/cloudstack-swift/</guid><description>&lt;p>迪斯尼是一个有魔力的组织，在它的电影里冤家可以变伙伴。甚至CloudStack和OpenStack两大私有云死对头来到迪斯尼这个神奇的地方也可以“在一起”。当迪斯尼决定建设自己的云计算基础设施时，与很多企业一样面临一个艰难的抉择，从众多云计算技术方案和产品中选择一条道路。如今的云计算市场规模已 达数百亿美元，水已经很深，领头的是亚马逊这样的公共云巨头，以及亚马逊的对手们：Rackspace、Google、CloudStack、 Eucalyptus、OpenNebula等多种私有云和公共云技术与服务，每家都有绝活和独到之处。&lt;/p></description></item><item><title>XenDesktop + nVIDIA K1/K2 = BEST 3D VDI</title><link>https://martinliu.cn/2013/08/16/xendesktop-nvidia-k1-k2-best-3d-vdi/</link><pubDate>Fri, 16 Aug 2013 11:52:58 +0000</pubDate><guid>https://martinliu.cn/2013/08/16/xendesktop-nvidia-k1-k2-best-3d-vdi/</guid><description>&lt;p>今天公司到货了K1，K2的GPU卡，这让我不得不学习一下这个产品。&lt;/p>
&lt;p>&lt;a href="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2013/08/grid-overview-header.jpg">&lt;img src="http://7bv9gn.com1.z0.glb.clouddn.com/wp-content/uploads/2013/08/grid-overview-header.jpg" alt="grid-overview-header">&lt;/a>&lt;/p>
&lt;p> &lt;/p></description></item><item><title>XenClient本地虚拟桌面典型应用场景</title><link>https://martinliu.cn/2013/08/15/xencliente69cace59cb0e8999ae68b9fe6a18ce99da2e585b8e59e8be5ba94e794a8e59cbae699af/</link><pubDate>Thu, 15 Aug 2013 05:14:31 +0000</pubDate><guid>https://martinliu.cn/2013/08/15/xencliente69cace59cb0e8999ae68b9fe6a18ce99da2e585b8e59e8be5ba94e794a8e59cbae699af/</guid><description>安全加固移动性笔记本电脑
桌面级操作系统更新管理
分支机构或者远程办公环境计算机管理
弹性的在瘦机和PC直接选择
有限的网络访问环境
成本节约或已有硬件利用
XenClient本地虚拟桌面通常是虚拟桌面项目中的一个容易被忽视的环节。其实它的使用场景随处都是。</description></item><item><title>XenDesktop 7 HDX 3D Pro</title><link>https://martinliu.cn/2013/08/14/xendesktop-7-hdx-3d-pro/</link><pubDate>Wed, 14 Aug 2013 15:38:07 +0000</pubDate><guid>https://martinliu.cn/2013/08/14/xendesktop-7-hdx-3d-pro/</guid><description>http://brightcove.vo.llnwd.net/pd16/media/1485836774/1485836774_2603380124001_3DCar4CitrixTV.mp4
Description
Windows 7 HDX3D Windows Server 2008R2 3D Network Constrained Environment (Simulating 3G speeds) No network constraints Windows Client iPad Client NVidia Demo software utilized is available on NVidia.com Solarwinds Software used for monitoring network traffic
看点:
桌面虚拟化中的高精尖场景，成本高、技术高、效果精益求精
Citrix XenDesktop + nVidia = 业内最好3D设计虚拟桌面平台
Citrix可以兼顾 VDI+独占GPU和 共享桌面+共享GPU两种模式
来源：http://www.citrix.com/tv/#videos/9008</description></item><item><title>The Xen Movie, Part 1: The first ten years of open source Xen.</title><link>https://martinliu.cn/2013/08/01/the-xen-movie-part-1-the-first-ten-years-of-open-source-xen/</link><pubDate>Thu, 01 Aug 2013 09:29:20 +0000</pubDate><guid>https://martinliu.cn/2013/08/01/the-xen-movie-part-1-the-first-ten-years-of-open-source-xen/</guid><description>http://brightcove.vo.llnwd.net/e1/uds/pd/13639319001/13639319001_2484626552001_Citrix-Open-Source--Public-Version-.mp4</description></item><item><title>Citrix XenServer is Now Fully Open Source</title><link>https://martinliu.cn/2013/08/01/citrix-xenserver-is-now-fully-open-source/</link><pubDate>Thu, 01 Aug 2013 09:26:51 +0000</pubDate><guid>https://martinliu.cn/2013/08/01/citrix-xenserver-is-now-fully-open-source/</guid><description>http://brightcove.vo.llnwd.net/e1/uds/pd/13639319001/13639319001_2488040716001_XenServer-OSS-Richard-Sharp-Final.mp4
With the release of Citrix XenServer 6.2, Citrix is pleased to announce that XenServer is now fully open source. In this video, Richard Sharp, Vice President of XenServer Product Development, explains why Citrix open sourced XenServer, what it means to our customers and how it will help the entire XenServer platform.</description></item><item><title>A new open source strategy for Citrix XenServer</title><link>https://martinliu.cn/2013/08/01/a-new-open-source-strategy-for-citrix-xenserver/</link><pubDate>Thu, 01 Aug 2013 09:21:01 +0000</pubDate><guid>https://martinliu.cn/2013/08/01/a-new-open-source-strategy-for-citrix-xenserver/</guid><description>http://brightcove.vo.llnwd.net/e1/uds/pd/13639319001/13639319001_2503709704001_Sameer-Dholakia-v3.mp4
Sameer Dholakia, Vice President and General Manager of the Citrix Cloud Division, talks about the full open source strategy for XenServer. Learn why Citrix made XenServer open source and how this will benefit our customers and ecosystem partners.</description></item><item><title>怎么使您的MP/VP/ATP/DEF都无穷大</title><link>https://martinliu.cn/2013/08/01/e6808ee4b988e4bdbfe682a8e79a84mpvpatpdefe983bde697a0e7a9b7e5a4a7/</link><pubDate>Thu, 01 Aug 2013 09:09:27 +0000</pubDate><guid>https://martinliu.cn/2013/08/01/e6808ee4b988e4bdbfe682a8e79a84mpvpatpdefe983bde697a0e7a9b7e5a4a7/</guid><description>&lt;p>自学的能力让你的能力变得无穷大。所谓学无止境，能力上能否得到无止境的提升就是个人为题了。你学习的时间？学习的态度？学习的内容？学习的方法？都决定了你的学习效果。基本上要学习一种新的技术或者产品，大多数人一般都止步于如何操作和运用它；能更深入的理解它的架构和特性，甚至做出横向的比对，就是第二个阶段，这样的人很少。&lt;/p></description></item><item><title>很离谱，很合理，很喜欢</title><link>https://martinliu.cn/2013/07/19/mac-pro-e5be88e7a6bbe8b0b1-e5be88e59088e79086-e5be88e5969ce6aca2/</link><pubDate>Fri, 19 Jul 2013 07:02:46 +0000</pubDate><guid>https://martinliu.cn/2013/07/19/mac-pro-e5be88e7a6bbe8b0b1-e5be88e59088e79086-e5be88e5969ce6aca2/</guid><description>今天上苹果网站上发现一个很酷的东西Mac Pro，我觉得它catch my eyes；真的设计的很离谱，很合理，我很喜欢，帖几张图共同赏析一下。
[gallery link=&amp;ldquo;file&amp;rdquo; ids=&amp;ldquo;52469,52473,52470,52471,52472,52476,52478,52479,52474,52481&amp;rdquo;]
连接详情，访问apple官网：http://www.apple.com.cn/mac-pro/</description></item><item><title>七章节细讲Citrix虚拟桌面基础架构搭建</title><link>https://martinliu.cn/2013/07/09/e4b883e7aba0e88a82e7bb86e8aeb2citrixe8999ae68b9fe6a18ce99da2e59fbae7a180e69eb6e69e84e690ade5bbba/</link><pubDate>Tue, 09 Jul 2013 17:05:58 +0000</pubDate><guid>https://martinliu.cn/2013/07/09/e4b883e7aba0e88a82e7bb86e8aeb2citrixe8999ae68b9fe6a18ce99da2e59fbae7a180e69eb6e69e84e690ade5bbba/</guid><description>Citrix项目实施秘籍文档慢慢泄露中。点击本文标题直达Citrix-Book.org 最佳实践网站</description></item><item><title>XenDesktop 7 抢鲜测试</title><link>https://martinliu.cn/2013/07/08/xendesktop-7-e68aa2e9b29ce6b58be8af95/</link><pubDate>Mon, 08 Jul 2013 03:45:59 +0000</pubDate><guid>https://martinliu.cn/2013/07/08/xendesktop-7-e68aa2e9b29ce6b58be8af95/</guid><description>[gallery link=&amp;ldquo;file&amp;rdquo; ids=&amp;ldquo;52454,52455,52456&amp;rdquo;]
XenDesktop 7 问世以来，目前处于市场初级推广阶段；虽然还没有大范围的推广，如果业内的合作伙伴们如果还没有尝试过，那么你们就Out了。为了更好的指导大家的测试工作，这里介绍两篇文档：
XenDesktop7快速安装手册
XenDesktop7安装和配置手册 from yandong
另外隆重推荐的是这个开放维基百科网站“Citrix-book.org Citrix最佳实践”；退出这个网站的原因是我看到，目前网络资源过于纷乱，大多数技术大拿们都有自己的bolg和微博；但是干活资源过于分散；这个网站本着开放自由的出发点，鼓励和欢迎所有的大难能到这里集中和上传你的干活技术资料。投稿方式为自由注册，自行在线新建和编辑文档；也可以根据网站指引投稿。</description></item><item><title>A Post with a Video</title><link>https://martinliu.cn/2013/06/25/video-post/</link><pubDate>Tue, 25 Jun 2013 00:00:00 +0000</pubDate><guid>https://martinliu.cn/2013/06/25/video-post/</guid><description> Video embeds are responsive and scale with the width of the main content block with the help of FitVids.
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34; src=&amp;#34;//www.youtube.com/embed/SU3kYxJmWuQ&amp;#34; frameborder=&amp;#34;0&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;</description></item><item><title>Microserver Lenovo ThinkCenter M92/M92p Tiny</title><link>https://martinliu.cn/2013/05/24/microserver-lenovo-thinkcenter-m92m92p-tiny/</link><pubDate>Fri, 24 May 2013 01:32:28 +0000</pubDate><guid>https://martinliu.cn/2013/05/24/microserver-lenovo-thinkcenter-m92m92p-tiny/</guid><description>刚刚入手了一台 Lenovo ThinkCenter M92/M92p Tiny测试机，虽然配置不高但是出于geek习惯，还是要动动螺丝刀的。下面是拆机过程，供参考。 [gallery columns=&amp;ldquo;2&amp;rdquo; link=&amp;ldquo;file&amp;rdquo; ids=&amp;ldquo;52429,52430,52431,52432,52433,52434,52435&amp;rdquo;]
这款机器目前在国内好像还没有正式买，起码联想中国官网上连技术指标也查不到。美国网站上是有这个机器的介绍。
[caption id=&amp;quot;&amp;quot; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;960&amp;rdquo;] ThinkCenter M92P[/caption]
At a Glance Up to 3rd generation Intel® Core™ i7
Up to Windows 8 Pro
Up to 1TB HDD, Up to 128GB SSD
Up to 32GB memory (4x8GB)
M92/M92p Tower Tech Specs
M92/M92p Tiny Tech Specs
我所测试的是M92 Tiny型。改机默认安装的Win8操作系统。如果把它改装为跑Hypervisor的服务器的话，它应该属于 Microserver的范畴。
微服务器定义：A micro server (may also be written as microserver or MicroServer) is a small server appliance that works like a server.</description></item><item><title>你的体重标准么？</title><link>https://martinliu.cn/2013/05/23/e4bda0e79a84e4bd93e9878de6a087e58786e4b988efbc9f/</link><pubDate>Thu, 23 May 2013 01:42:12 +0000</pubDate><guid>https://martinliu.cn/2013/05/23/e4bda0e79a84e4bd93e9878de6a087e58786e4b988efbc9f/</guid><description>[caption id=&amp;ldquo;attachment_52426&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;640&amp;rdquo;] 成人理想体重范围[/caption]
【成人理想体重范围对照表】图中BMI指数，全名叫身体质量指数，是体重公斤数除以身高米数平方得出的数字，是目前国际上常用的衡量人体胖瘦程度以及是否健康的一个标准。你在哪个区域？（MSN健康） 终于为我的体重找到了依据，我的体重目前开来很标准。跑步则是保持体重，提高体质的基础。</description></item><item><title>我想跑遍全世界</title><link>https://martinliu.cn/2013/05/21/e68891e683b3e8b791e9818de585a8e4b896e7958c/</link><pubDate>Tue, 21 May 2013 15:47:44 +0000</pubDate><guid>https://martinliu.cn/2013/05/21/e68891e683b3e8b791e9818de585a8e4b896e7958c/</guid><description>我说的是跑步的跑：）
__
目前的情况是，我的足迹分布在国内6个城市。还有很多国内城市没跑过，也还有很多外国城市没有跑过，好在还有很多年的时间来丰富这张跑步地图。</description></item><item><title>XenDesktop虚拟桌面精品书籍导读(中文版)</title><link>https://martinliu.cn/2013/05/14/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbe4b8ade69687e78988/</link><pubDate>Tue, 14 May 2013 05:59:11 +0000</pubDate><guid>https://martinliu.cn/2013/05/14/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbe4b8ade69687e78988/</guid><description>[box color=&amp;ldquo;orange&amp;rdquo; icon=&amp;ldquo;flag&amp;rdquo;] 感谢 Eric Yao 的供稿，@老树皮Eric [/box]
英文版：《Citrix Virtual Desktop Handbook》
中文版：[download id=&amp;ldquo;20&amp;rdquo;]
本书是XD虚拟桌面实施工程师的必备读物，请相关人员仔细阅读。</description></item><item><title>隐藏Windows Explorer中的各种东西</title><link>https://martinliu.cn/2013/05/14/hide-windows-explorer-items/</link><pubDate>Tue, 14 May 2013 04:10:35 +0000</pubDate><guid>https://martinliu.cn/2013/05/14/hide-windows-explorer-items/</guid><description>XenApp实施工具，隐藏Windows Explorer中的各种东西。
HideLibraries Hide libraries icon in the navigation pane of Windows Explorer. HideFavorites Hide favorites icon in the navigation pane of Windows Explorer. HideNetwork Hide network icon in the navigation pane of Windows Explorer. HideComputer Hide computer icon in the navigation pane of Windows Explorer. HideHomeGroup Hide home group icon in the navigation pane of Windows Explorer ShowLibraries Show libraries icon in the navigation pane of Windows Explorer. ShowFavorites Show favorites icon in the navigation pane of Windows Explorer.</description></item><item><title>XenDesktop虚拟桌面精品书籍导读(part5)</title><link>https://martinliu.cn/2013/05/07/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbpart5/</link><pubDate>Tue, 07 May 2013 02:36:41 +0000</pubDate><guid>https://martinliu.cn/2013/05/07/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbpart5/</guid><description>[box color=&amp;ldquo;orange&amp;rdquo; icon=&amp;ldquo;flag&amp;rdquo;] 感谢 Eric Yao 的供稿，@老树皮Eric [/box]
今天是《Citrix Virtual Desktop Handbook》第二讲的最后一期，专门论述一下PVS的设计。在本期之后我会把所有以往的内容整合在一个完整的白皮书中，稍等几日。。。
请期待基于本系列5篇文章的完整版中文白皮书下载。
Citrix桌面虚拟化实施部署白皮书 第二讲之第五期：PVS的设计
Provisioning Services Citrix Provisioning Services（PVS）使用流化的技术简化了虚拟桌面和物理桌面的部署。计算机从一个单个的共享磁盘镜像上被实时制备（Provisioned），管理员完全不需要去管理或者是给每个单独的用户操作系统打补丁。
1) 决断：Farm（场）的数量
一个Provisioning Services的场代表着Provisioning Services基础架构的最高层级。所有在一个场的Provisioning Servers（服务器）都共享同一个SQL 数据库哦Citrix License服务器。当确定需要多少个Provisioning Services的场时，我们一般需要考虑以下几个因素：
l **网络：**Provisioning Servers会始终和场数据库通信以获取系统配置信息。因此，一般来说每个target devices聚集的地理位置应该部署一个独立的场，当然，如果异地之间的网速足够快，理论上也可以只建立一个Provisioning Services场。
l **重要程度：**管理者应该决定它可以容仍什么样的风险。尽管可能性非常的低，但是Provisioning Services场如果出问题还是会影响整个组织架构的使用。如果一个公司需要非常高等级的可用性，那么多个场的搭建就可以避免这个问题。
l **可管理性：**管理者可能需要在基于组织架构划分的基础上，例如国家、地区，又或者是不同部门之间，来进行单独的系统管理。尽管听起来这会增加管理的复杂程度，但是实际上只会增加有限多的配置、桌面创建过程，以及操作系统镜像更新。
2) 决断：站点（Sites）的数量
每个Provisioning Services的场都包含一个或者多个的站点。一个Provisioning Services的站点是一个逻辑的实体组成部分，包含了Provisioning Servers（服务器）、vDisk pools，以及target devices的集合。多个站点共享同一个数据库。Target devices可以在同一个站点中容错到其他的Provisioning Servers上。在以下的情况下我们建议创建多个站点：
l **网络：**站点用来控制Provisioning Services的流数据量。例如，一个站点可以根据站点、rack、或者是刀箱来创建，以确保流数据始终保持在本地而不变成一个网络瓶颈。
l **组织架构：**另外一个需要创建多个站点的实际理由是企业组织架构的改变。例如，两个公司通过收购合并了，但是有需要在企业整合过程中保持资源的独立。
3) 决断：数据库的配置
Provisioning Services的数据库存储有所有一个场内的的系统配置信息。Provisioning Services 6.X版本支持一下版本的SQL数据库，包括Express、标准版、企业版的SQL Server 2005、2008R2以及2012版。选择哪一个SQL版本其实是取决于你需要哪一个级别的容错水平。以下的表格是一个SQL 2008R2版本的示例：
Provisioning Services场的数据库的大小很少会超过250M容量，即使在大型环境下也不会。所以，在测试环境下Express版本是最佳选择，因为不需要容错功能。
下面的公式是用来计算Provisioning Services的数据库的容量大小：
4) 决断：数据库；离线模式</description></item><item><title>Top10全球排名前十的云计算公司</title><link>https://martinliu.cn/2013/05/07/top10e585a8e79083e68e92e5908de5898de58d81e79a84e4ba91e8aea1e7ae97e585ace58fb8/</link><pubDate>Tue, 07 May 2013 02:31:30 +0000</pubDate><guid>https://martinliu.cn/2013/05/07/top10e585a8e79083e68e92e5908de5898de58d81e79a84e4ba91e8aea1e7ae97e585ace58fb8/</guid><description>来自 http://www.intelligenthq.com/uncategorized/top-10-cloud-computing-companies/
Citrix榜上有名排名第三，这就是我看好CloudStack一年多的回报，国内CloudStack目前看还没有什么生机，希望能早点发展起来。
We all know change is constant, especially in technology. Look at Toshiba, a world leader and innovator in high technology. This week, the company made an interesting move and announced the opening of Toshiba’s first datacenter in Europe, located in France.
Toshiba Cloud &amp;amp; Solutions Division is directed at professional markets, public and private-sector companies, and entities within the Toshiba Group. The creation of this datacenter is in line with the Group’s goal of accompanying its clients right from the design of IT products and solutions through to hosting related services tailored to specific needs.</description></item><item><title>XenDesktop虚拟桌面精品书籍导读(part4)</title><link>https://martinliu.cn/2013/05/02/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbpart4/</link><pubDate>Thu, 02 May 2013 04:22:36 +0000</pubDate><guid>https://martinliu.cn/2013/05/02/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbpart4/</guid><description>[su_box color=&amp;ldquo;orange&amp;rdquo; icon=&amp;ldquo;flag&amp;rdquo;] 感谢 Eric Yao 的供稿，@老树皮Eric [/su_box]
桌面虚拟化项目的实施白皮书 《Citrix Virtual Desktop Handbook 5.x》，点击下载。
四、 控制层 Control Layer 控制层是设计架构的第四层。在上面有关用户的三个层面我们所做的决定都会汇总起来到控制层。
访问控制器 访问控制器子层的职责是给每个用户提供予以支持访问控制层的基础架构组件。这么说可能比较绕口，那就换个说法吧，访问控制器一般包括例如Web Interface、StoreFront，以及NetScaler Access Gateway；
1) 远程访问架构
如果有用户需要远程或者是离线的移动访问能力，那么就要设计远程访问基础架构了。
**A. **决断：拓扑 网络拓扑的设计对远程访问架构能够支撑功能性、性能以及安全性至关重要。远程访问架构应当和安全团队一起合作以确保符合企业的安全规范。以下三种主要的拓扑结构我们在设计师可以考虑，每种的安全性逐渐递增：
l 1-Arm (Normal Security**，单臂模式)****：**在这种架构下，Access Gateway使用一个物理的或者是逻辑的Bonded的网络接口，再加上VLAN和IP子网的设计，来传递用户和后台虚拟桌面的流量。
l 2-Arm (High Security 双臂模式)：在双臂模式下，Access Gateway利用两张或者更多的物理或者逻辑Bonded的网络接口卡，再加上VLAN和IP子网的设计，来传递用户和后台虚拟桌面的流量。前段用户的流量被导向这些网络接口卡的第一张网卡上，前后端的流量是被分离设计的，就是说说后端虚拟桌面架构服务器的流量是被定向到第二张网卡上的。通过这样的设计我们就可以DMZ区来分离前后端的流量，同时还可以定制防火墙策略和流量监控策略。
l **Double-Hop DMZ (Very High Security): **这种模式既利用了双臂拓扑下的特性，又使用了两个单独的Access Gateway设备。有一些企业使用了三个物理的/逻辑的防火墙结构来保护他们的内部网络。这三个防火墙将DMZ区划分为两个区域来提供额外的内部网络安全。
在第一个DMZ区的Access Gateway设备处理用户的连接，完成SSL VPN的安全功能。这个Access Gateway设备加密客户端连接，判断用户的认证方式，控制能够访问的内部网络服务器；
第二个DMZ区域的Access Gateway设备充当与一个代理设备角色。这个Access Gateway设备启用ICA协议将客户端连接穿越第二个DMZ区到后端的服务器场。在第一个DMZ区的Access Gateway设备和内部网络的Secure　Ticket　Authority（STA）也是通过第二个DMZ区的Access Gateway设备来进行代理的。
**B. **决断：平台 在Access Gateway部分，我们曾经讨论过只要是涉及到远程访问，我们都会考虑NetScaler Access　Gateway设备。问了确定合适的NetScaler平台来满足项目需求，必须确定一些关键资源。由于所有的远程访问流量都是通过SSL（安全套接层）来加密，再通过HTTPs的HTTP（超文本协议）协议来传输。所以有两种资源metric需要确认：</description></item><item><title>Ask the Architect 推荐Citrix虚拟化大师一名</title><link>https://martinliu.cn/2013/05/02/ask-the-architect-e68ea8e88d90citrixe8999ae68b9fe58c96e5a4a7e5b888e4b880e5908d/</link><pubDate>Thu, 02 May 2013 03:42:54 +0000</pubDate><guid>https://martinliu.cn/2013/05/02/ask-the-architect-e68ea8e88d90citrixe8999ae68b9fe58c96e5a4a7e5b888e4b880e5908d/</guid><description>http://virtualfeller.com/</description></item><item><title>我的第一次半程马拉松比赛</title><link>https://martinliu.cn/2013/04/23/e68891e79a84e7acace4b880e6aca1e58d8ae7a88be9a9ace68b89e69dbee6af94e8b59b/</link><pubDate>Tue, 23 Apr 2013 12:41:24 +0000</pubDate><guid>https://martinliu.cn/2013/04/23/e68891e79a84e7acace4b880e6aca1e58d8ae7a88be9a9ace68b89e69dbee6af94e8b59b/</guid><description>[nggallery id=18]
第一次的半程马拉松比赛，跑的非常艰苦，鞋子和脚趾出现严重的状况，中途已经痛的我呲牙咧嘴；烈日艳艳的高温，让整个人都快从脚底板燃烧起来了。到了终点，一个大约坑爹的1公里折返跑彻底让人筋疲力尽。
比赛就是比赛，一旦开始就没有退出，只有坚持到底的人才能收获成绩。</description></item><item><title>bad thing will pass</title><link>https://martinliu.cn/2013/04/23/bad-thing-will-pass/</link><pubDate>Tue, 23 Apr 2013 11:57:14 +0000</pubDate><guid>https://martinliu.cn/2013/04/23/bad-thing-will-pass/</guid><description/></item><item><title>让Xen Project回家</title><link>https://martinliu.cn/2013/04/23/xen-is-now-a-linux-foundation-collaborative-project/</link><pubDate>Tue, 23 Apr 2013 08:20:59 +0000</pubDate><guid>https://martinliu.cn/2013/04/23/xen-is-now-a-linux-foundation-collaborative-project/</guid><description>首先我们来回顾一下历史：
上周Citrix把经营和支持多年的开源项目Xen Project加入到了inux Foundation，可以说是Xen Project 的一个新家。可能您还不太了解“Linux Foundation”；访问 FAQ 可获得它的一些基本知识。到目前为止Linux Foundation总共支持了8个开源软件项目。
[![OpenDaylight](http://www.linuxfoundation.org/sites/main/files/logo_od_small_0.jpg)](http://www.opendaylight.org/) [![](http://www.linuxfoundation.org/sites/main/files/wlogo_caf.jpg)](https://www.codeaurora.org/) [![](https://www.linuxfoundation.org/sites/main/files/wlogo_omam.jpg)](http://www.openmama.org) [![](https://www.linuxfoundation.org/sites/main/files/wlogo_tize_0.jpg)](http://www.tizen.org) [![](https://www.linuxfoundation.org/sites/main/files/wlogo_meeg.jpg)](http://www.meego.com) [![](https://www.linuxfoundation.org/sites/main/files/wlogo_yoct.jpg)](http://yoctoproject.org/) [![](http://www.linuxfoundation.org/sites/main/files/xen_project_unicolor_0.jpg)](http://xenproject.org) [![](https://www.linuxfoundation.org/sites/main/files/wlogo_fbaz.jpg)](http://fossbazaar.org/) 那么Linux foundation能给这些开源软件提供怎么呢？ With ten years of experience managing open source projects and support services, The Linux Foundation can provide the back-office, technical infrastructure and legal framework to get your collaborative project off the ground quickly and efficiently. 想加入Linux fondation的项目还必须满足如下两个标准：</description></item><item><title>XenDesktop虚拟桌面精品书籍导读(part3)</title><link>https://martinliu.cn/2013/04/16/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbpart3/</link><pubDate>Tue, 16 Apr 2013 15:29:43 +0000</pubDate><guid>https://martinliu.cn/2013/04/16/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbpart3/</guid><description>[box color=&amp;ldquo;orange&amp;rdquo; icon=&amp;ldquo;flag&amp;rdquo;] 感谢 Eric Yao 的供稿，@老树皮Eric [/box]
桌面虚拟化项目的实施白皮书 《Citrix Virtual Desktop Handbook 5.x》，点击下载。
智慧的积累靠一蹴而就很难实现，慢慢积累和温故而知新往往是最佳的手段。让我们继续开始《Citrix桌面虚拟化实施部署白皮书》，这晚我们开讲第二部分的第三单元：桌面层。
四、 桌面层 Desktop Layer
设计思想的第三层，也是和用户相关的最后一层，就是桌面层。用户是否能接受桌面虚拟化很多程度上就是在这一层实现的，例如包括个性化、应用程序，以及后台操作系统镜像文件的设计。
应用程序交付 选择正确的应用程序交付方法会对整个系统设计的可扩展性、可管理性，以及用户感受起到非常大的帮助。基于我们在前几章节的“四、 应用程序数据搜集”，我们可以考虑以下几种交付方法：
l 直接安装在操作系统镜像文件上：应用程序是基础操作系统镜像文件的一部分；
l 安装在Personal vDisk上：物理是分离的，但是逻辑上是直接安装在基础操作系统镜像文件中；
l 流化（Streaming）：应用程序被profiled（XenApp组件）后通过网络交付到桌面上。应用程序的文件和注册表键值在虚拟桌面的一个容器中保存，但是和基础操作系统镜像文件是分离的。
l Hosted：应用程序安装在XenApp服务器上，用户通过Citrix HDX协议远程访问。
决断：应用程序交付方法 系统架构师应该在基于用户需求、应用程序兼容性，以及其他通过在前几章（“四、 应用程序数据搜集”）搜集上来的应用程序因素基础之上决定采用何种方法来进行应用程序的交付。通常单一的方法是无法满足用户全部的需求的，所以多种方法组合才是最佳答案。但是不管用什么方法，这些交付手段都应当对整个项目的交付复杂程度和后续跟进步骤与以最小的影响。
下面的表格就是不同的交付方法对系统不同层面的影响：
除了应用程序交付方法对系统不同层面的应用之外，系统架构师还应该考虑应用程序在不同交付手段上的适用性。下面的表格就是不同应用程序所推荐的部署方法示例：
上表中需要注意的是最后一种应用程序，我们往往会觉得这种复杂安装和配置的应用程序最好是安装在操作系统镜像文件中，但是最佳实践告诉我们应该安装在XenApp Server上，通过Hosted的方法发布给用户。
兼容性 任何一个桌面虚拟化项目都会对一个公司的应用程序交付方法产生巨大的应用。举例来说，许多公司都希望通过在桌面虚拟化中使用流化的应用程序交付或者是XenApp交付应用程序来降低升级用户的桌面操作系统的劳动负荷以及提高管理效率。所以在设计阶段我们就要做很多兼容性测试以确定最正确的应用程序交付方法。最重要需要考虑的兼容性需求一般来说包括以下几点：
l 桌面操作系统的版本：如果操作系统是通过流化安装或者是直接安装在操作系统中，那么应用程序需要考虑和操作系统的兼容性问题；
l 服务器操作系统的版本：有一些应用程序可能会更合适通过XenApp的方式来交付，所以，应用程序是否能安装在服务器版本的操作系统平台上是要考虑的因素；
l 应用程序本身的架构：应用程序本身的开发平台有可能是16位的，32位的，也可能是64位的。16位的应用程序就不能运行在64位的操作系统平台上，例如Windows 2008Server　R2、Windows XP 64bits等；
l 互操作性：有一些应用程序如果和某些版本的操作系统共存是会有兼容性问题，例如注册表冲突、DLL冲突，或者是ini冲突。
l 应用程序流化：应用程序流化到桌面虽然可以简化管理，因为操作系统上不用安装那么多的应用程序了，但是记住有些带有设备驱动程序，或者是使用了COM+等应用程序就不适合了
在做应用程序兼容性测试时的三种主要技术手段有：
l 手动：不言而喻这种方法最消耗时间，每种交付方法都要测试，每种操作系统版本、不同操作系统语言包等也都要验证。手动模式下想要的出应用程序所有方面的测试结果是非常困难的，对应用程序互操作性的测试是几乎测不出来的。而且更多的测试结果是现场使用人员发现的，而不是测试时发现的。
l 预验证的应用程序：很多应用程序的开发商都会提供该应用程序的兼容性文档和最佳安装方式的文档。参考这些文档会有直接的帮助。此外，Citrix Community Verified的网站上也有一整系列的由Citrix的客户和合作伙伴验证过包括采用流化方法/XenApp/Xendesktop兼容的应用程序列表。微软公司也提供了类似的应用程序列表：Microsoft Windows 7 Application Compatibility List for IT Professionals；</description></item><item><title>什么是真的云？</title><link>https://martinliu.cn/2013/04/15/forrester-private-clouds-what-is-cloud-computing/</link><pubDate>Mon, 15 Apr 2013 17:31:21 +0000</pubDate><guid>https://martinliu.cn/2013/04/15/forrester-private-clouds-what-is-cloud-computing/</guid><description>[su_box ] 最近有一篇比较热的文章，中文标题《Forrester：70%的“私有云”根本不是云》；你如果稍微搜索一下，你发现它几乎被转载烂了，但是我看了几篇，真心的担心读者们是否都能正确的理解。写本文，全当是给您的一个阅读帮助。 [/su_box]
中文版网页点这里 英文版网页点这里
中文翻译的质量有限，有些概念和逻辑错误，我做了一点点的修订，从而避免误解。
**【基于CNW.com.cn译稿】**如果企业数据中心拥有高度虚拟化的环境，有一个Web门户供商业用户申请和访问虚机，再有一种方法可以跟踪有多少资源被使用了……拥有这一切并不能叫做有了一个私有云。
假如有足够大的容量可以为员工提供他们所需要的任意数量的计算资源，并能够动态地上下扩展或收缩容量，但仍然需要IT人员制备好系统的话，那么这仍然不能叫私有云。
虚拟化和私有云之间的界限是比较模糊的，根据Forrester的最新报告，在企业的IT高管们所自诩的私有云中，高达70%的IT环境其实并非私有云。“这是个严重的问题。实际上是在做云洗白而已。”Forrester的云专家James Staten如此说。
为什么说这个问题非常重要? Staten认为，如果将一个高度虚拟化的环境称为云环境，但它又不具备私有云的一项或多项关键特征，那么IT部门就给了用户一个不切实际的期望。假如用户们发现这个环境不能自配置，或者没有弹性资源池而感到不满时，他们就有可能因此而气馁。那么当下一次用户需要实时运行一个虚机时，他们会选择在哪里运行呢? 是IT部门给他们的伪私有云? 还是亚马逊的AWS? 如此一来，IT部门就无法控制事态了。
大多数云专家已经对云计算(公有云或私有云)的定义有了普遍的共识，这就是NIST提出的五个关键特征。这些特征包括：
● 用户可按需索取、自服务
● 泛在的网络接入
● 共享资源池
● 弹性扩展资源的能力
● 拥有可计量的服务
如果没有这五大特征，那从技术上说就不能叫云。和某些人的想法相悖的是，虚拟化并不是私有云。它只是为云提供动力的一个基本要素，但只依靠它是创建不出一个云的。VMware的营销经理Mike Adams说，私有云必须在虚拟化环境之上综合更多复杂的管理功能，方能满足NIST的定义要求。
CA的战略解决方案副总裁兼云专家Andi Mann给这场讨论踩了一脚刹车。“如果你不符合所有这五大特征，那么你就陷入了语义学纠结中。”他认为真正的问题并不是说符合这五个复选标记的东西就叫做云，而是在于IT能否为用户提供适当的服务。“有时候，80%的云都已足够好了，”他说。“用户真正在意的是业务服务。谁会在意你的环境叫什么。你要关心的就是客户，就是业务用户是不是得到了他们需要的资源。”
也许企业并不需要弹性扩展，因为原本就是静态工作负载。即便不需要弹性的资源扩展能力，它仍然还可以需要云的其他特征——自服务、计费、泛在网络接入和共享资源池。但它在技术上可能并不符合NIST的定义。“所以，如果你要想技术上也说得过去，也可以将其称为：高效率的虚拟环境，”Mann说。
那么，所有这些云洗白来自哪里? Staten认为，IT管理人员基本上对云都抱有恐惧心理。企业内的虚拟化专家通常都处于支配地位; 在需要资源时，他们可以去制备相应的资源容量。而云被视为一种赋予用户自服务和动态扩展资源权力的模式，对IT是一种威胁。如果用户可以自己开通了，那还要他们这些虚拟化专家干什么呢?
Staten认为，这样想上述问题是错误的。即便有了云，IT管理人员还是有大量的工作可做，比如需要设置和确保云服务有一个可供用户选择的服务目录，需要完成安全访问协议配置，提供资源可用性和虚拟化组件等。管理人员必须接受这样一个理念：如果他们不这么做，那么用户不论如何还是需要访问和使用他们所需要的资源，这样还是会陷入可怕的“影子IT”的局面。(Martin修订)
我想先对以上的几个关键点和名词做一些解释，从而能让我们更好的理解原文作者的意图。
&amp;ldquo;cloud-washing&amp;rdquo; &amp;ndash; “云洗白” 这个比喻是说：本来根本什么云都不是！但是还是要狡辩和伪装为私有云。真像是：纯虚拟化环境不等于云
 &amp;ldquo;shadow IT.&amp;rdquo; &amp;ndash; “影子IT” 这个比喻是说：IT部门是业务部门挥之不去的阴霾，他们跟没发赶上业务部门需求变化请求的脚本，业务部门的人从来不管你是用的是神马云，你们这帮人根本没有按时的交付过任何东西，甚至于每当想起需要IT部门来配合做什么东西，就感到没有指望，啥都需要漫长的等待。
IT部门真的是技术不行么？IT部门真的是干活的人不够么？这个比喻后背后真是的故事：特别是大规模的企业，业务部门所需要的任何IT资源和变更都必须通过IT自动、半自动或者手工配置实现；小的到开通一个邮箱，重置一次密码；大到新的业务系统的升级和上线；往往IT或者业务用户发频繁和密集地发起种种请求时，没有任何一家传统企业的IT部门（亚马逊、谷歌这种公司除外，因为它们已经是云计算公司了）能够很有自信地、充分让业务部门满意地完成被要求完成的所有工作。它们为什么完成不了呢？这个就走入了IT管理的经典理论，这就是我之前十年工作经验中天天和用户沟通的东西：“保持IT系统的稳定，还是接受变化”；为了既能响应业务部门不断的变化请求和IT用户的日常需求，IT部门想到了很好的流程来加以解决，这个流程是什么？它叫“变更管理流程”。举个例子，大型的商业银行一般一周或者两周有一次系统变更日；所有的对IT系统的配置和改变，必须提前计划安排好工作顺序，只能在变更日当晚的固定时间窗口中完成，例如晚上11点到凌晨5点；如果在这个时间段某个工作没有完成怎么办？对不起！没有完成的变更叫做失败变更，你还必须在变更窗前前就把系统回退到未变更前的状态！你现在发现了么？对生产系统是多么严肃的事情！如果你在变更前，没有万无一失的备份计划，你但失误，你就歇菜了；或者你觉得是顺利完成变更了，但是营业厅一开门，IT的投诉热线就被打爆了，这也不行；变更一但导致生产系统的宕机，轻则IT部门的领导引咎辞职，重则数据中心的大领导乌纱帽不保。
以上讲述的故事可以说是我的亲身经历，就是中国的国情；那么这个文章的出处毕竟是国外的，这几个发话的大佬们都是何方神圣？
Forrester的云专家 James Staten ：BIO 从Bio上看，他好像是Forrester的头牌云分析师之一，有20年的IT从业经验。
VMware的营销经理Mike Adams ：网上查不到它的Bio，在VMWare网站搜索，也只能看到他是http://blogs.vmware.com/vsphere/ 的负责人。网上并没有关于此人的详细介绍，但是我们从vsphere的blog上在读一下这个产品的定位“BEGIN THE JOURNEY TO A PRIVATE CLOUD WITH DATACENTER VIRTUALIZATION”；这个说法和此大师在文章中说的一样：vsphere是数据中心虚拟化的一个技术组建，数据中心虚拟化技术是私有云建设的起点。但是它是起点，不是私有云。纯种的服务器虚拟化项目也不是那天就能进化成私有云了。</description></item><item><title>XenDesktop虚拟桌面精品书籍导读(part2)</title><link>https://martinliu.cn/2013/04/15/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbpart2/</link><pubDate>Mon, 15 Apr 2013 06:52:55 +0000</pubDate><guid>https://martinliu.cn/2013/04/15/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbbpart2/</guid><description>[box color=&amp;ldquo;orange&amp;rdquo; icon=&amp;ldquo;flag&amp;rdquo;] 感谢 Eric Yao 的供稿，@老树皮Eric [/box]
桌面虚拟化项目的实施白皮书 《Citrix Virtual Desktop Handbook 5.x》，点击下载。
上周一我们介绍了《Citrix桌面虚拟化实施部署白皮书》的第二部分《设计篇 Design》的第一单元：用户层。今天我们继续往前进，开讲第二单元：访问层的部分。
三、 访问层 Access Layer
访问层的设计主要是基于每个用户组和终端设备的移动性需求。
决断：认证点 让用户在什么地点做认证是管理员的决定，一般而言，有四个认证点：
a) Web Interface：给XA和XD提供安全访问；
b) StoreFront：为Receiver交付认证能力和资源；
c) Secure Gateway (Web Interface): Secure Gateway是一个Windows的应用程序，她和WI配合工作；
d) Access Gateway: 硬件
具体采用哪种方式认证由用户组的移动需求来决定，推荐方案如下：
决断：预认证策略 如果我们使用的是Access Gateway，我们就可以选择是否采用预认证策略，这些策略可以是确定终端是否满足某种接入网络前的扫描条件。
我们可以配置的策略包括测试防病毒软件、防火墙软件、操作系统，甚至是注册表键值。XA和XD可以利用这些策略的检查结果确认后续的动作，包括剪贴板是否开启，打印机映射，甚至是否开启特定的应用程序访问权限。例如，如果用户没有安装防病毒软件，可以配置策略隐藏敏感的应用程序。
下面的图标从流程上示例策略配置是如何流转的：
决断：认证策略 l Web Interface, Secure Gateway (Web Interface), or StoreFront: StoreFront是未来的方向，而Web Interface已经是行将就木，所以下面的策略主要是用在StoreFront上，当然也适用于Web Interface
n 用户名/密码
n Domain Pass-Through：允许从用户设备上透传Domain登录信息，用户登录到加入域的电脑后自动登录到Store；
n Access Gateway Pass-Through：用户登录到Access Gateway后自动登录到Store</description></item><item><title>XenDesktop中如何重定向USB设备</title><link>https://martinliu.cn/2013/04/15/xendesktope4b8ade5a682e4bd95e9878de5ae9ae59091usbe8aebee5a487/</link><pubDate>Mon, 15 Apr 2013 06:44:52 +0000</pubDate><guid>https://martinliu.cn/2013/04/15/xendesktope4b8ade5a682e4bd95e9878de5ae9ae59091usbe8aebee5a487/</guid><description>原文出处：http://support.citrix.com/article/CTX136751 这篇文章你还不会，你就out了！
概要
本文描述如何映射默认下被禁用的USB设备。
要求
当重定向USB设备，终端用户必须首先识别USB设备，将其映射到会话中。假如设备需要特殊驱动，则驱动必须同时安装在客户机和虚拟桌面代理（VDA）上。如果终端识别驱动，设备在没有驱动的情况下仍可映射，但是VDA上需安装驱动以确保工作正常。
背景
特定USB Class默认下被禁用因为它们主要用于本地工作站，例如智能卡阅读器。
步骤
注意!这个修复需改变注册表。错误使用注册表编辑器可能产生严重问题，导致你需要重装操作系统。Citrix不承诺解决错误使用注册表编辑器的问题。使用注册表编辑器存在风险。确保修改前备份注册表。
完成以下步骤查找设备的Class ID和Hardware ID：
打开终端客户机的设备管理器，查找需要重定向的USB设备。 右击设备选择属性。注意在Details面板上，显示如下图的Hardware ID 和 Class ID。 在Citrix Desktop Studio &amp;gt; HDX 策略 &amp;gt; 用户中，点击新建USB 设备重定向策略。 点击下一步，类别中选择USB设备 &amp;gt; 客户端USB设备重定向，点击添加，选择允许后确定。 然后，类别中选择USB设备 &amp;gt; 客户端USB设备重定向规则，点击添加
点击新建添加允许的Hardware ID：
确定后点击下一步，最后应用此策略。
在终端设备，查看注册表HKLM\Software_WOW6432Node_\Citrix\Ica Client\GenericUSB，设置_DeviceRules_值为‘Allow: VID=0911 PID=1844’ 你可以删除_deny class rule_以使能此class的所有设备。但是，为防止非法重定向，增加Allow规则方法更优。
注意：当增加Allow规则，确保它置于规则列表顶部，使它比规则Deny优先级更高。
此时在Desktop Viewer 上可见对应USB设备。
假如点击设备仍不能映射至会话中，尝试手动在VDA的注册表中添加允许标记： HKLM\Software\Policies\Citrix\ICA_Client\USB\DeviceRules。 更多信息
默认值存储于VDA注册表的HKLM\SOFTWARE\Citrix\PortICA\GenericUSB Type=String Name=&amp;ldquo;DeviceRules&amp;rdquo;，但是，不建议修改此值，因为当VDA自检，它首先查看HKLM\Software\Policies\Citrix\ICA_Client\USB\DeviceRules，再查看本地路径。优选修改规则方法是使用组管理对象（GPO）模板。
**注意：**你必须修改终端客户机注册表以允许对应的USB class。
查看更多: http://support.</description></item><item><title>XenDesktop虚拟桌面精品书籍导读(part1)</title><link>https://martinliu.cn/2013/04/09/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbb-p1/</link><pubDate>Tue, 09 Apr 2013 02:19:37 +0000</pubDate><guid>https://martinliu.cn/2013/04/09/xendesktope8999ae68b9fe6a18ce99da2e7b2bee59381e4b9a6e7b18de5afbce8afbb-p1/</guid><description>[box color=&amp;ldquo;orange&amp;rdquo; icon=&amp;ldquo;flag&amp;rdquo;] 感谢 Eric Yao 的供稿，@老树皮Eric [/box]
桌面虚拟化项目的实施白皮书 《Citrix Virtual Desktop Handbook 5.x》，点击下载。该文档是由Citrix全球顶级Consultant系统架构师Daniel Feller, Thomas Berger, Rich Meesters, Matt Brooks, Ed Duncan 以及 Roger LaMarca等大牛合作完成，它介绍了桌面虚拟化架构设计、方法论、经验总结以及最佳实践等知识，更是包含了一步一步指导手册、真实案例分析以及模板手册等。
序言：关于方法论 一、 Access 二、 Design 三、 Deploy 四、 Manitain 五、 项目计划
第一部分：Access 一、 业务驱动力 二、 数据搜集 三、 用户数据搜集 四、 应用程序数据搜集 五、 用户分类
FlexCast模型比较 FlexCast模型选择 六、 应用程序评估 七、 项目管理 Roadmap 项目团队 a) 业务角色 b) 技术角色 第二部分：Design 一、 概况 二、 用户层 User Layer
终端类型的选择 Receiver的选择 资源需求 三、 访问层 Access Layer 序言：关于方法论</description></item><item><title>解决XenServer tools not installed</title><link>https://martinliu.cn/2013/04/07/xenserver-tools-not-installed/</link><pubDate>Sun, 07 Apr 2013 10:27:38 +0000</pubDate><guid>https://martinliu.cn/2013/04/07/xenserver-tools-not-installed/</guid><description>[box color=&amp;ldquo;orange&amp;rdquo; icon=&amp;ldquo;flag&amp;rdquo;] 鸣谢：Michael Zhang的经验分享，有需要的请收藏备用。 [/box]
刚刚搞定了POC环境中一个很诡异的问题。把过程写出来以供大家参考。建议可以把这个设置放到POC的实施手册中。 刚开始做POC时，我们安装了XP的模板，并且安装了同版本的XenTools，此时XenCenter面板上显示虚机的IP地址没有问题。但是跑了一段时间后发现，所有的虚机的IP地址都显示不出来了，并且XenCenter面板上显示XenServer tools not installed，虚机的内存信息，Disk IO等信息，都没有显示：
后来重装了模板，重新发布了虚机，一切就OK了，此时我认为是原先的模板有问题，所以导致了这个issue。 但是后来跑了几天，某台虚机又出现了类似的症状，此时我意识到应该不是模板的问题了。然后我就检查了这台虚机的Service，发现：
这个Service就是XenTool的Service，因为没有启动，所以导致了上述的问题。 但是当我用手工试图重启该Service的时候，系统报改Service启动时停止，没有给出任何原因。Windows Event Log里也没看到任何报错。 后来上网查了下，原来是Windows Event Log的Application类的log满了以后，会导致该Service启动异常。 看了下XP的Windows Event Log的Application类日志的属性，默认只有64K：
我把上面的日志文件大小阀值改成了1024K，清空Application类的log，重启上面的Service, 成功，问题解决。
上述类似的问题我记得也有兄弟曾经遇到过，发邮件出来问过，当时怀疑是XenServer跟VDA的时间不同步造成，现在感觉也许跟这个原因有关。
[box color=&amp;ldquo;gray&amp;rdquo; icon=&amp;ldquo;order-check&amp;rdquo;] 欢迎投稿，请发邮件到： liuzh66@gmail.com [/box]</description></item><item><title>思杰行业解决方案视频放量推荐</title><link>https://martinliu.cn/2013/04/07/e6809de69db0e8a18ce4b89ae8a7a3e586b3e696b9e6a188e8a786e9a291e694bee9878fe68ea8e88d90/</link><pubDate>Sun, 07 Apr 2013 06:06:23 +0000</pubDate><guid>https://martinliu.cn/2013/04/07/e6809de69db0e8a18ce4b89ae8a7a3e586b3e696b9e6a188e8a786e9a291e694bee9878fe68ea8e88d90/</guid><description>[button type=&amp;ldquo;big&amp;rdquo; icon=&amp;ldquo;sign-in&amp;rdquo; url=&amp;ldquo;http://i.youku.com/u/UMzU2OTI4MzY0/videos&amp;rdquo;]点击本按钮，直达优酷视频专辑[/button] [line]
汽车行业解决方案
思杰制造行业解决方案
金融行业解决方案
呼叫中心场景Citrix桌面云解决方案
教育行业解决方案
思杰政府行业解决方案
医疗行业解决方案
营业厅场景解决方案
Citrix集中运维监控解决方案
OA解决方案
思杰虚拟化助力翠微中学教育信息化建设
思杰虚拟化为遍布全美的学校师生提供便
[line] [box color=&amp;ldquo;red&amp;rdquo;] 合作伙伴们必看视频，你们不得不懂这些内容，否则跟不上形势：) [/box]
PoC标准流程
2013-03-29 14.02 Citrix MDM solution
搞定虚拟环境下的USB设备
自由灵活办公【Work Shifting】
企业统一应用门户 【Unified Storefron</description></item><item><title>NetScaler Insight Center 虚拟桌面和应用监控利器</title><link>https://martinliu.cn/2013/03/28/netscaler-insight-center-e8999ae68b9fe6a18ce99da2e5928ce5ba94e794a8e79b91e68ea7e588a9e599a8/</link><pubDate>Thu, 28 Mar 2013 10:56:04 +0000</pubDate><guid>https://martinliu.cn/2013/03/28/netscaler-insight-center-e8999ae68b9fe6a18ce99da2e5928ce5ba94e794a8e79b91e68ea7e588a9e599a8/</guid><description>NetScaler Insight Center with HDX insight and Web Insight overcomes the limitations of traditional methods and technologies to fully address the application visibility challenges facing today’s enterprises. Featuring an approach that leverages NetScaler ADCs, Insight Center combines network-based instrumentation – that is both network and application-aware – with an efficient and powerful management system capable of transforming raw data into actionable information.
在Citrix TV 栏目搜索 NetScaler Insight ；查询更多的相关资源。
简单的讲NetScaler Insight能做到的是使用业内的专业协议AppFlow来监控所有经过NetScaler设备的流量。它是一个虚机，能够接收来自多个NetScaler的监控数据，实际上在NetScaler上打开了Insight功能后，它会对ICA协议做必要的拆包和封包动作，这样就能够更加详细的看到用户会话的详细信息，能够实时的了解到用户的体验，从而为主动的问题解决和排错打下了好的基础。注意：这个动作只有NetScaler设备能做哦！其它厂商看不到ICA会话参数。它有两个模块：1)ICA HDX insight ; 2) Web insight；这两个模块能够基本上把所有过NetScaler设备的流量截获、分析和报表；未来能够和XD/XA的管理工具做直接集成。并且它也能够把分析数据发给其它第三方支持AppFlow分析的系统，例如splunkd等。</description></item><item><title>破两项个人记录</title><link>https://martinliu.cn/2013/03/28/two-records-xuanhu-lake-10km/</link><pubDate>Thu, 28 Mar 2013 07:53:07 +0000</pubDate><guid>https://martinliu.cn/2013/03/28/two-records-xuanhu-lake-10km/</guid><description>前面三四公里总是跑的太猛，最快到了4：25；跑的速度不太匀。老实说这次是有点太野心了，想创造一万米50分钟的个人记录。但是后半程还是没法坚持下来；坚持不下来可能有这样几个原因所知：1）阳光强烈，太晒，太热了；2）后半程爬坡上升海拔的路程有一段。下次试着逆时针方向绕湖跑，让提高海拔的路程放到体力充足的前半程。</description></item><item><title>XenApp5补丁清单</title><link>https://martinliu.cn/2013/03/20/xenapp5e8a1a5e4b881e6b885e58d95/</link><pubDate>Wed, 20 Mar 2013 10:12:43 +0000</pubDate><guid>https://martinliu.cn/2013/03/20/xenapp5e8a1a5e4b881e6b885e58d95/</guid><description>对于XenApp5的用户来说你至少需要知道下面两件事情：
EOF的时间是2013-3-31
关键补丁清单如下
这意味着，你只能获得越来越有限的支持在这个版本；最好的办法是升级你的应用到XenApp6.5版本。如果实在要用，请起码打全了这些补丁。
Hotfix PSE450R07W2K3006 (http://support.citrix.com/article/CTX130483)
Hotfix PSE450R07W2K3027 (http://support.citrix.com/article/CTX131874)
Hotfix PSE450R07W2K3043 (http://support.citrix.com/article/CTX132765)
LIMITED RELEASE - Hotfix PSE450R07W2K3003 (http://support.citrix.com/article/CTX130466)
LIMITED RELEASE - Hotfix PSE450R07W2K3004 (http://support.citrix.com/article/CTX130497)
LIMITED RELEASE - Hotfix PSE450R07W2K3009 (http://support.citrix.com/article/CTX130587)
LIMITED RELEASE - Hotfix PSE450R07W2K3017 (http://support.citrix.com/article/CTX131022)
LIMITED RELEASE - Hotfix PSE450R07W2K3029 (http://support.citrix.com/article/CTX132174)
LIMITED RELEASE - Hotfix PSE450R07W2K3033 (http://support.citrix.com/article/CTX132196)
LIMITED RELEASE - Hotfix PSE450R07W2K3034 (http://support.citrix.com/article/CTX132245)
LIMITED RELEASE - Hotfix PSE450R07W2K3037 (http://support.citrix.com/article/CTX132403)
LIMITED RELEASE - Hotfix PSE450R07W2K3038 (http://support.</description></item><item><title>My first half marathon</title><link>https://martinliu.cn/2013/03/14/my-first-half-marathon/</link><pubDate>Thu, 14 Mar 2013 12:13:49 +0000</pubDate><guid>https://martinliu.cn/2013/03/14/my-first-half-marathon/</guid><description>[caption id=&amp;ldquo;attachment_52283&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;720&amp;rdquo;] My first half marathon record[/caption]
本周一，在南京出差，周二一大早，我5点就醒了，常识跑一次半马。这是第一次尝试跑两个小时的时间，第一次尝试跑半马的距离。其实前10公里还是可以，后十公里还是有点疲劳的，中途休息了四次，每次走大约1分分钟左右。很惊喜的看到大部分的路程都在配速5分左右，和我设定的五分二十秒目标配速很接近。本次试跑证明了，我身体的耐力跑半马还是可以。打算在半马的基础上提高成绩，争取能把半马跑好再说。下个月四月十四日在苏州的半马比赛很期待，比赛前抽空好好准备争取能轻松完成。跑完后，这几天没有发现身体任何不适，今天早晨跑5公里，发现加速比以前有力，似乎经过这次拉练后，身体的体能有所提高。最重要的是：我在没有伤痛的情况下即感受到了体育竞技的乐趣，又达到了强身健体的目的。</description></item><item><title>Do you challenge yourself?</title><link>https://martinliu.cn/2013/03/01/do-you-challenge-yourself/</link><pubDate>Fri, 01 Mar 2013 02:53:52 +0000</pubDate><guid>https://martinliu.cn/2013/03/01/do-you-challenge-yourself/</guid><description>[caption id=&amp;ldquo;attachment_52275&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;723&amp;rdquo;] personal records May/1st/13[/caption]
I will create my records as more as I could before I am die.</description></item><item><title>NetApp技术学习</title><link>https://martinliu.cn/2013/02/26/netappe68a80e69cafe5ada6e4b9a0/</link><pubDate>Tue, 26 Feb 2013 14:18:43 +0000</pubDate><guid>https://martinliu.cn/2013/02/26/netappe68a80e69cafe5ada6e4b9a0/</guid><description>[caption id=&amp;ldquo;attachment_52271&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] sales-ilt-se-asap-rev07[/caption]
今天参加了NetApp Accredited Storage Architect Professional Workshop。这个课程偏售前，讲的还是不错，一共3天，明天开始做Lab，实验练习的环境就是在ONTAP操作系统中的各种命令；使用官方的模拟器可以很方便的搭建测试环境，模拟器下载地址：https://communities.netapp.com/docs/DOC-1034
[caption id=&amp;ldquo;attachment_52269&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] NetApp模拟器Web访问[/caption]
NetApp University : http://www.netapp.com/us/services/university/ 更多免费课程还可以在这里注册得到。课程的质量还不错。
[caption id=&amp;ldquo;attachment_52270&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] NetApp在线免费课程[/caption]</description></item><item><title>TIPS install XenServer on Mac Mini 6.1</title><link>https://martinliu.cn/2013/02/21/tips-install-xenserver-on-mac-mini-6-1/</link><pubDate>Thu, 21 Feb 2013 09:24:38 +0000</pubDate><guid>https://martinliu.cn/2013/02/21/tips-install-xenserver-on-mac-mini-6-1/</guid><description>[caption id=&amp;ldquo;attachment_52258&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;640&amp;rdquo;]mac-mini-2012-with-XenServer[/caption]
今天尝试在Mac Mini上安装XenServer，下面把经验共享一下。我遇到的问题有两个：
网卡无法识别：使用默认安装盘安装，提示没有检测到网卡，安装无法继续
网卡驱动植入失败：在按了F9加载驱动的时候，没有发现驱动程序，无法继续安装
安装完毕之后，重启，屏幕上显示一个带问号的文件夹，一闪一闪无法正常启动XenServer
经过一番折腾，发现这些点主意一下，应该就没有问题。
[caption id=&amp;ldquo;attachment_52255&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] 启动Macmini[/caption]
在启动Mac Mini的时候，在“咚”的一声之前，就按住ALT键，否则没法出现上面的屏幕，我用的是USB盘启动，所以要选择右侧的图标。
[caption id=&amp;ldquo;attachment_52256&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] 进入menu.c32菜单[/caption]
我遵循前人的经验，乖乖到此来禁止gpt；首先在这里要迅速输入menu.c32，输入完了就过了，就必须重新关机，重启mac mini。
[caption id=&amp;ldquo;attachment_52257&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] 输入disable-gpt参数[/caption]
进入这个屏幕了，要快速按TAB键，否则启动参数无法编辑，输入disable-gpt参数的机会就失去了。编辑启动参数的时候，把参数加载第二个&amp;mdash;（三个短横线）前即可，上图我为了拍照在参数之前加了很多空格，其实这个参数和前后要至少一个空格就够了。
在进入安装的屏幕后，如果是XenServer6.0.201的源安装盘，还必须下载tg3的网卡驱动，并且用工具打入iso文件，这样安装的时候，就可以选择到加载网卡启动，否则6.0.201的安装盘即不自带此网卡驱动，也无法正常识别附加的驱动。网卡驱动下载地址为：http://support.citrix.com/article/CTX135328 要把加压后的iso文件，再次加压到对应的目录里才行，直接把解压后的几个文件放入目录，安装程序是无法识别到网卡驱动的。如果能正常识别的话，会出现选择框，让你选择 Broadcom tg3。如果是XenServer6.1的安装盘，就不需要折腾驱动了，原盘自带了Broadcom tg3网卡驱动。下面有两张截图，供必须要使用XenServer 6.0.201的人参考。
[caption id=&amp;ldquo;attachment_52250&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] XenServer 6.0.201 with driver[/caption]
[caption id=&amp;ldquo;attachment_52251&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;300&amp;rdquo;] xs-repository-list 实例[/caption]
即使你不是安装XenServer6.0.201，也推荐使用UltraISO来把iso文件写入一个USB盘来安装，因为Mac Mini没有光驱，而且这样不用刻盘，更加环保一点。
最后一个Tips：这个可能是解决问题3的技巧，在安装的最后一个屏幕上，安装程序提示移除Mac Mini上的其他所有截至，然后点击回车完成安装。在这个屏幕上要识时务的把安装U盘从机器上拔除，然后点击回车来重启Mac Mini。经过我的验证，拔出U盘后好像没有在遇到过闪烁文件夹的重启不了的问题。建议都使用自带Broadcom tg3网卡驱动的6.1来安装，否则6.0.201安装完成之后，一旦打了补丁，还需要下载for这个补丁的新版本的网卡驱动，在重新手工打上该驱动，否则网卡会起不起来。</description></item><item><title>2012 Hadoop与大数据技术大会PPT下载</title><link>https://martinliu.cn/2013/01/09/2012-hadoope4b88ee5a4a7e695b0e68daee68a80e69cafe5a4a7e4bc9appte4b88be8bdbd/</link><pubDate>Wed, 09 Jan 2013 06:24:06 +0000</pubDate><guid>https://martinliu.cn/2013/01/09/2012-hadoope4b88ee5a4a7e695b0e68daee68a80e69cafe5a4a7e4bc9appte4b88be8bdbd/</guid><description>http://hbtc2012.hadooper.cn/download.html</description></item><item><title>冬练三九-晒晒我三周的成果</title><link>https://martinliu.cn/2012/12/26/e586ace7bb83e4b889e4b99d-e69992e69992e68891e4b889e591a8e79a84e68890e69e9c/</link><pubDate>Wed, 26 Dec 2012 14:38:42 +0000</pubDate><guid>https://martinliu.cn/2012/12/26/e586ace7bb83e4b889e4b99d-e69992e69992e68891e4b889e591a8e79a84e68890e69e9c/</guid><description>运动总成绩 总距离 79.8公里 总时长 9.5小时 共燃烧 5516.4大卡</description></item><item><title>Open Source Software: The Mega List</title><link>https://martinliu.cn/2012/12/23/open-source-software-the-mega-list/</link><pubDate>Sun, 23 Dec 2012 15:24:02 +0000</pubDate><guid>https://martinliu.cn/2012/12/23/open-source-software-the-mega-list/</guid><description>马克备用。</description></item><item><title>2013年的云计算，您准备好了么？</title><link>https://martinliu.cn/2012/12/18/2013e5b9b4e79a84e4ba91e8aea1e7ae97e682a8e58786e5a487e5a5bde4ba86e4b988/</link><pubDate>Tue, 18 Dec 2012 16:12:30 +0000</pubDate><guid>https://martinliu.cn/2012/12/18/2013e5b9b4e79a84e4ba91e8aea1e7ae97e682a8e58786e5a487e5a5bde4ba86e4b988/</guid><description>Getting Ready for Cloud Computing 2013
[dc]看[/dc]到篇不错的文章，值得分享一下。在最近的三四年里面，厂商都忙着炒作概念，用似云非云的各种虚拟化来对付用户，实际上云计算并没有那么简单，我一直不敢给客户讲，也讲不好的东西就是：对于一个特定的用户，告诉它什么是云？他应该怎么怎么过渡到云？先从那里做起？大致的路径是怎么样的？一旦对应到具体的用户环境里面，以上每个用户的答案都是不同的，感觉没有十足实践经验的人，根本无法和用户达成共鸣和一致。这个和我以前做ITSM/ITIL完全不同，在那块领域里面，讲究的是管理的思路和理念，等你做了一些项目之后，你从项目中的总结和提炼，就成了你的炮弹，用在其它新用户身上，用不好，也用不错；管理的学问往往是殊途同归的。而云计算，目前国内真的还属于初级阶段，就像是在2002年左右的时候，我们给银行做ITIL做服务台一样，对无论是用户和厂商的人来说，还不夸张的说，都是雾里看花。
[tab label=&amp;ldquo;云计算七大注意事项&amp;rdquo; first=&amp;ldquo;yes&amp;rdquo;]
[list icon=&amp;ldquo;star&amp;rdquo;]
检查和评估您的网络 : 如果数据中心不做网络架构的巨大调整，给云平台配置足够强大的带宽资源，上云计算，基本上就是让用户和运维人员都痛苦不堪，不会有啥好结果。 建立鼓励员工进谏的机制 : 识别、评估、选择和实施云计算方案的流程需要提前设计好。在每个阶段和过程里让最终用户、开发人员和管理层都充分的参与意见。 聚焦在立竿见影的运维痛点和功能差距上: 瞄准那些影响最终用户生产力和新上面的应用部署项目上。让云计算的高效和灵活等优势小试牛刀一下，从而验证需求点的准确性和方案的靠谱性。 先尝后买 : 云计算是最着急投胎的，没有必要大干快上，对于数据中心来说也是一个渐进的温和的改良的过程。选定一个足够小的范围，先尝后买，分区分配扩容，放大项目范围。 承载应用（App hosting）和SaaS应用不能划等号 : 这根本就是个误解，无须多说。 监控利用率和满意度 : 不管云做的大小，资源都要物尽其用，跟踪最终用户和领导大满意度，与同行用户横向比较数据，找出自己的所处位置和程度。实施反馈机制，让用户驱动云的需求和建设方向。 眼观六路，站足先机 : 市场风云莫测，业务模式层出不穷，这些都不断催熟这云方案。所以广泛关注，收集跟多信息，为云计算建立多个选项，多种选择总是好事。 [/list] [/tab]
[tab label=&amp;ldquo;英文原文&amp;rdquo;]
If you’ve been holding back about moving to the ‘Cloud’, it is time to get onboard the Cloud Computing express.</description></item><item><title>Top 10 things Ubuntu is doing right</title><link>https://martinliu.cn/2012/12/18/top-10-things-ubuntu-is-doing-right/</link><pubDate>Tue, 18 Dec 2012 15:14:04 +0000</pubDate><guid>https://martinliu.cn/2012/12/18/top-10-things-ubuntu-is-doing-right/</guid><description>http://www.datamation.com/open-source/top-10-things-ubuntu-is-doing-right.html</description></item><item><title>What's new in Windows 8 VDI licensing: Free ride for Windows RT</title><link>https://martinliu.cn/2012/12/13/whats-new-in-windows-8-vdi-licensing-free-ride-for-windows-rt/</link><pubDate>Thu, 13 Dec 2012 15:28:33 +0000</pubDate><guid>https://martinliu.cn/2012/12/13/whats-new-in-windows-8-vdi-licensing-free-ride-for-windows-rt/</guid><description>http://searchvirtualdesktop.techtarget.com/tip/Whats-new-in-Windows-8-VDI-licensing-Free-ride-for-Windows-RT?utm_medium=EM&amp;amp;asrc;=EM_ERU_19908957&amp;amp;utm;_campaign=20121212_ERU%20Transmission%20for%2012/12/2012%20%28UserUniverse:%20635116%29_myka-reports@techtarget.com&amp;amp;utm;_source=ERU&amp;amp;src;=5093920</description></item><item><title>三亚半山半岛洲际酒店5公里</title><link>https://martinliu.cn/2012/12/13/e4b889e4ba9ae58d8ae5b1b1e58d8ae5b29be6b4b2e99985e98592e5ba975e585ace9878c/</link><pubDate>Thu, 13 Dec 2012 14:40:05 +0000</pubDate><guid>https://martinliu.cn/2012/12/13/e4b889e4ba9ae58d8ae5b1b1e58d8ae5b29be6b4b2e99985e98592e5ba975e585ace9878c/</guid><description>[gallery link=&amp;ldquo;file&amp;rdquo; ids=&amp;ldquo;52210,52209,52207,52208,52211,52199&amp;rdquo;]
三亚住着全国各地来度假的人，有在这里旅游的，有在这里度假的，有在这里修养的。洲际酒店是我一直喜欢的酒店，这次赶巧有下榻于此；这里在鹿回头景区旁边，是一个探入大海的鹿头，酒店就坐落在鹿头的脖子部分，所有酒店的两侧都能看到大海，而左右被两座山包夹着。大海一天之中变化着不同的颜色，今天晴空万里，空气好的不得了！想起北京的PM值，我都不想回去了，精心准备的ppt，希望再次打动用户。明天的两大目标：跑5公里；打动用户一个都不能少。
查看大图</description></item><item><title>印度</title><link>https://martinliu.cn/2011/05/10/india/</link><pubDate>Tue, 10 May 2011 16:34:59 +0000</pubDate><guid>https://martinliu.cn/2011/05/10/india/</guid><description>今天在印度同事的帮助下，又解决掉我一个棘手的问题。这个哥们是个developer，解决问题很给力。每当他帮忙找出一个原因后，我就感慨，为什么我没有想到？开发人员的思维方式和我们是不同的，他们能找到基础的基础，从哪里开始入手分析问题，往往我们都太聪明了，总是试图找捷径/替代方法/或者绕开问题。
中国人谈到印度，往往有不屑的态度，可是我真的想不出能有什么理由这么想。看看我们现在如此浮华和虚荣腐败的国家，到处是利益驱动下的虚假繁荣，任凭胡主席和温总理在鞠躬尽瘁地视察民情和整治社会，社会还是依旧那样。环境还在被污染，食品还是一样有毒，物价还是一样的上涨，货币还是依旧的贬值，税赋还是依旧的增加，社保和服务还是不能够的到位，道路还是越来越堵，中石油茅台洋酒还是照样的喝，舆论依然的禁锢愚人，互联网还是那么的和谐&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
回到印度的话题，我突然到一个问题：现在还有什么软件不是在印度开发的？但从我的公司看，它以平均每年收购两家公司的速度并购，十之八九的被收购的公司的研发工作被部分转移印度做。任凭国内的developer你们怎么的叫喊比印度人更聪明，我们的软件业还是照旧，既没有走出去多少，也没进来多少。大多数企业的终极目标也就是去美国上市。即使是国内在大的公司，也偶尔给我们上演一下3Q大战的闹剧。无疑印度的软件也在某种程度上是超越国内的。</description></item><item><title>让Remedy飞一会</title><link>https://martinliu.cn/2011/05/07/let-remedy-ars-fly-2/</link><pubDate>Sat, 07 May 2011 10:31:36 +0000</pubDate><guid>https://martinliu.cn/2011/05/07/let-remedy-ars-fly-2/</guid><description>Remedy应用的性能优化是一个在系统建设过程中需要长期关注的问题，而不是在上线的前一天晚上去解决的问题，我也碰到过很棘手的性能问题，它确实爆发了，而且恰好在上线前夕爆发；之后感觉除了点背之外，感觉比较遗憾的是：为啥这个性能问题不早点爆发！
那么如何持续改进Remedy的性能？首先是硬件环境的准备情况，是否能在项目开始的第一天，就把开发，测试，生产环境统一装好。而不是到上线的前夕才去动生产环境。甚至于有条件的情况下，可不可以直接在生产环境上做开发，这样做的好处：让生产环境上性能优化的时间周期和机会尽可能的多，尽可能的长。当然这种机会毕竟不多，那么是否可以做到生产环境和开发环境的尽早的同步，也就是说：在开发到了一个小的阶段的时候，生产环境就可能就绪，就可以使用，这样把未成型的系统先部署上去，以便有机会做多次的生产系统性能调优。比较生产系统的性能最优化是项目的一大目标，不能等到最后才去仓促应战。曾经听说某行流程平台上线的第二天就挂了一次，这都是血淋淋的教训。总结一下：尽早的建设生产系统，优化生产系统，把开发好的那部分程序尽早迁移到生产上，长期的追逐系统性能，甚至于在生产环境上对此系统做压力测试。这些工作如果能够做的话，我想在上线日我们一定不会紧张。
如何追逐测试系统的性能。可以使用Web profiling工具如Fiddler。使用这种工具对某些特定操作持续的测试，把每次的测试结果保存下来，把时间记录到一个表格中。可以考虑测试如下内容：用户登录、打开事件控制台、创建一个事件单、搜索事件单等等，其他流程也类似。保证每次点击的次数都相同。其实从Fildder的分析数据中也可能得到很有价值的数据，如：那个Web调用的时间消耗最长，那些Web资源的请求出错。找出时间消耗做多的调用，就可以有针对性的优化应用了。总之：使用一种工具，在开发的整个过程中持续测试和优化，记录所有测试结果，这样在上线前对系统的性就能有客观参考依据。
另外要注意Remedy系统是一个标准的3层架构应用，你需要在系统调优的时候，有这样几种人的帮助：压力测试工具高手、JVM调优专家、数据库调优专家和Remed性能调优专家。还需要参考下列的参数配置。
Mid-tier优化参数建议 关于Mid-tier的一点建议，目前普通使用的Java应用服务器都是Tomcat，我一向是开源软件的粉丝，但是，还是建议如果有条件的话，还是上商业的产品，如Weblogic或者Websphere。这样可以获得能多一点的支持。 鉴于大多数系统还都是用的BMC的产品自带的Tomcat，下面是一些建议的参数配置。
1-HTTP keep-alive Keep-alive count: infinite (minimum 5000) Connection timeout:90000 ms (minimum 60000 ms)
2-JVM settings JVM heap：-Xms1024m –Xmx1024m MaxPermSize：-XX:MaxPermSize=256m 以Windows系统为例，可以使用Tomcat的配置界面工具，配置这两个参数。
3-Threads configuration of the application server hosting the mid tier maxThreads：500 acceptCount：100
关于1和3的 参数文件：tomcat dir/conf/sever.xml 的实例代码： [xml]
&amp;lt;Connector URIEncoding=&amp;ldquo;UTF-8&amp;rdquo; acceptCount=&amp;ldquo;100&amp;rdquo; connectionTimeout=&amp;ldquo;90000&amp;rdquo;
maxHttpHeaderSize=&amp;ldquo;8192&amp;rdquo; maxKeepAliveRequests=&amp;quot;-1&amp;quot; maxThreads=&amp;ldquo;500&amp;rdquo;
port=&amp;ldquo;80&amp;rdquo; protocol=&amp;ldquo;HTTP/1.1&amp;rdquo; redirectPort=&amp;ldquo;8443&amp;rdquo;/&amp;gt;
[/xml]
以上参数配置并不是万能的，只是给出一个优化配置的基础，以此为起点调起来可能会更靠谱。
Fine tuning the mid tier Mid tier parameter or service： Recommended value Enable Cache Persistence：Always on for a production environment Prefetch or preload service： Use prefetch only when a specific set of AR System forms are known.</description></item><item><title>Remedy ITSM 7.6.04 套件快速安装</title><link>https://martinliu.cn/2011/05/04/remedy-itsm-7-6-04-quick-install-guide/</link><pubDate>Wed, 04 May 2011 15:59:42 +0000</pubDate><guid>https://martinliu.cn/2011/05/04/remedy-itsm-7-6-04-quick-install-guide/</guid><description>自从Remedy ITSM 7.6.03版本发布以后，Remedy ITSM套件有了一种全新的安装方式“预配置堆栈式安装”，这种安装方法简化了以前从ARS开始一个部件罗一个部件的安装方法，它将ITSM套件中的所有组件一次性的安装上去。下面讲具体该如何操作。
什么情况下使用这个安装方式？ A）POC的情况下 B）客户的生产环境满足下面的需求： • Microsoft Windows Server 2008 (64-bit) (Standard, Enterprise, or Datacenter) with Microsoft SQL Server 2008 (64-bit) (Standard or Enterprise) • Oracle Solaris 10 with Oracle 11g (64-bit) (Standard, Enterprise, or RAC) • Red Hat Enterprise Linux 5 (Update 5) (64-bit) with Oracle 11g (64-bit) (Standard, Enterprise, or RAC) • Microsoft Windows Server 2008 (64-bit) (Standard, Enterprise, or Datacenter) with Oracle 11g (64-bit) (Standard or Enterprise) Note: The BMC Remedy ITSM Suite Precon gured Stack installer supports only Unicode database servers</description></item><item><title>让Ubuntu飞一会儿</title><link>https://martinliu.cn/2011/04/10/let-ubuntu-fly/</link><pubDate>Sun, 10 Apr 2011 11:11:27 +0000</pubDate><guid>https://martinliu.cn/2011/04/10/let-ubuntu-fly/</guid><description>很久以前我一直使用的rpm based Linux，原因很简单，我只要手握一张最新的DVD，就可以走遍天下都不怕，特别是对SuSE Linux的yast很依赖，因为它可以帮我解决rpm包之间的依赖性。这样工作起来就很简单，基本上是搜索到软件包之后，点击安装既可以搞定所有的软件安装工作。
来到Ubuntu世界的我并不很满意，最近一次的apt-get update，以失败告终，险些把家里的PC的一块硬盘给搞丢了，因为升级失败导致分区表失效了，Win操作系统不认了。直接崩溃，好在那Live Cd模式进入还能勉强看得那个盘里的东西，恢复到移动硬盘，重新格式化该分区，才把文件恢复了。着实让我虚惊一场。
我比较喜欢一些小的LAMP堆栈式安装的Linux，如TurnkeyLinux。安装可以在10分钟内搞定系统安装。今年家里的宽度升级到2MB了，因此带宽上逐渐能满足Ubuntu这种从网上升级的需求。下面就是找国内的升级的源了，进过几个月的使用，最近觉得在北京的联通固定宽带的用户，使用163的镜像站点速度还是不错的。再次感谢国内的这样的无私奉献的公司，使得在国内的开源用户可以更快更方便。废话说了一堆：）哈哈下面也就是这几条命了的事情。
第一步，当然要选择近水楼台的163了，来参考http://mirrors.163.com/.help/ubuntu.html 的帮助文档，根据你操作系统的版本，更新/etc/apt/sources.list 文件即可，之后你的Ubuntu就是从国内的较快的站点上下载包了
第二步，安装多线程apt下载加速工具apt-fast
[bash] root@lamp ~# apt-get install python-software-properties root@lamp ~# add-apt-repository ppa:tldm217/tahutek.net root@lamp ~# apt-get update root@lamp ~# apt-get install apt-fast root@lamp ~# apt-fast -v apt 0.7.25.3ubuntu9.3 for i386 compiled on Sep 9 2010 22:22:02 Supported modules: *Ver: Standard .deb *Pkg: Debian dpkg interface (Priority 30) S.L: &amp;lsquo;deb&amp;rsquo; Standard Debian binary tree S.L: &amp;lsquo;deb-src&amp;rsquo; Standard Debian source tree Idx: Debian Source Index Idx: Debian Package Index Idx: Debian Translation Index Idx: Debian dpkg status file [/bash]</description></item><item><title>ARS启动故障修复案例</title><link>https://martinliu.cn/2011/04/02/ars-start-issue-on-oracle/</link><pubDate>Sat, 02 Apr 2011 13:43:21 +0000</pubDate><guid>https://martinliu.cn/2011/04/02/ars-start-issue-on-oracle/</guid><description>ARS版本 7.6.04 数据库 Oracle11G 和ARS在同一台服务器上
错误现象： ARS服务不能正常启动 arerror.log报 390600 : SQL 数据库不可用 &amp;ndash; 将重试连接 (ARNOTE 590) Sat Apr 02 20:27:41 2011 : Action Request System(R) 服务器 x64 版本 7.6.04 Build 002 201101141059 (c) Copyright 1991-2010 BMC Software, Inc. Sat Apr 02 20:29:51 2011 390600 : SQL 数据库不可用 &amp;ndash; 将重试连接 (ARNOTE 590) Sat Apr 02 20:29:51 2011 ORA-12170: TNS:Connect timeout occurred
排错步骤： 使用sqlplus测试登录，返回TNS超时错误 [powershell] C:\Users\martin&amp;gt;sqlplus ARAdmin/AR#Admin#@ars SQL*Plus: Release 11.2.0.1.0 Production on Sat Apr 2 20:48:35 2011 Copyright (c) 1982, 2010, Oracle.</description></item><item><title>How to configure statusnet default language</title><link>https://martinliu.cn/2011/03/29/how-to-configure-statusnet-default-language/</link><pubDate>Tue, 29 Mar 2011 09:13:03 +0000</pubDate><guid>https://martinliu.cn/2011/03/29/how-to-configure-statusnet-default-language/</guid><description>If you are playing with statusnet, I bet you could not change default language; English language just shows every where. So I&amp;rsquo;d like to write a quick guide to show you how to change perferred langguage as zh_cn. I have a Ubuntu server with only English language pack. [bash] root@lamp www/statusnet# locale -a C POSIX en_GB [/bash]
I searched and install Chinese language pack by aptitide [bash] root@lamp www/statusnet# aptitude search language-pack-zh p language-pack-zh - translations for language Chinese (dummy package) p language-pack-zh-base - translations for language Chinese (dummy package) P language-pack-zh-hans - translation updates for language Simplified Chinese P language-pack-zh-hans-base - translations for language Simplified Chinese p language-pack-zh-hant - translation updates for language Traditional Chinese p language-pack-zh-hant-base - translations for language Traditional Chinese root@lamp www/statusnet# aptitude install language-pack-zh-hans-base [/bash]</description></item><item><title>既要开源，也要环保</title><link>https://martinliu.cn/2011/03/24/usb-linux/</link><pubDate>Thu, 24 Mar 2011 13:12:58 +0000</pubDate><guid>https://martinliu.cn/2011/03/24/usb-linux/</guid><description>今天看到了我保存的一摞Linux光盘，这基本上也记录了我所关注和安装过的所有Linux的种类。品种繁多。如下：
CentOS 4.4
Ubuntu 8.4 server
Ubuntu 8.4 desktop
Opensolaris
Debian 4.0
SuSe Enterprise 10.1
Redhat Enterprise Server 3
SuSe Linux 10
Mandriva 2008
CentOS 4.2
SuSe 10.0 Eval DVD
Mandrake 10.0
Redhat 7.1
Derbain 3.0
FreeBSD 5.2
Suse 9</description></item><item><title>My baby girl, my angel</title><link>https://martinliu.cn/2011/03/16/my-baby-girl-my-angel/</link><pubDate>Wed, 16 Mar 2011 03:54:40 +0000</pubDate><guid>https://martinliu.cn/2011/03/16/my-baby-girl-my-angel/</guid><description>I am so exciting, and so happy!</description></item><item><title>Remedy ARS 开源工具知多少</title><link>https://martinliu.cn/2011/03/01/remedy-ars-open-source-tool/</link><pubDate>Tue, 01 Mar 2011 15:46:51 +0000</pubDate><guid>https://martinliu.cn/2011/03/01/remedy-ars-open-source-tool/</guid><description>Remedy ARS是全球最大市场份额的产品，是为业内广泛接受的成熟产品套件；虽然他始终是私有的软件产品，但是围绕其周围，还是不断有新的开源工具出现。下面就介绍几种这样的软件。
ARInside is a free open-source utility to create a static html documentation of your AR-Server. If you need something to quickly browse through your workflow, ARInside might be worth a try. ARInside 3.0.2 has some new features, lots of bugfixes and other improvements. Just to name a few:
documentation improvements 64-bit platform support experimental support for Solaris and AIX basic ARS 7.6.x support huge performance plus on big installations 这是一个ARS服务器扫描的工具，可以形成一个静态的文档，能够作为一个状态的参考极限，这样方便你对当前的服务器上的所有对象和工作流有个全面的了解。最大的好处是能够统计和技术，而且不用登陆Dev Studio了。一图胜千言，下面大家看后就明白它能做什么。</description></item><item><title>ITIL V3中级认证培训-服务生命周期模块</title><link>https://martinliu.cn/2011/02/21/itil-v3-bmc-training/</link><pubDate>Mon, 21 Feb 2011 04:11:37 +0000</pubDate><guid>https://martinliu.cn/2011/02/21/itil-v3-bmc-training/</guid><description>培训针已获得Foundation认证的学员，讲授ITIL V3服务生命周期模块的五门中级课程， 包括服务战略、服务设计、服务转换、服务运营、持续服务改进。 课程介绍了服务生命周期各阶段的术语、流程、结构、角色、职能和活动，结合ITIL的最佳实践，帮助学员掌握如何提升用户的日常IT服务。 课程中还将结合BMC的IT管理领域领导者优势，向学员介绍ITIL的自动化解决方案、以及基于ITIL的云计算生命周期管理。帮助广大学员迅速走向管理云端。课程详情
认证考试： 每门课程学时三天，并包含随堂认证考试。五门成绩均及格即可获得5个中级认证以及考取高级认证的资格。
培训价格（含认证）： 单门课程10000元/人 五门课程优惠价格共32000元/人
特别赠送：
报名五门课程的学员，将获赠云计算网络培训一次。课程介绍 没有通过考试的学员，每门提供一次免费重考。 培训时间： 服务战略：3月21-23日 服务设计：3月24-26日 服务转换：4月11-13日 服务运营：4月14-16日 持续改进：5月18-20日
培训地点: BMC上海培训教室（浦东花园石桥路33号花旗大厦） 咨询和报名:010-85183688-1883 yuan_yuan@bmc.com Yunlong_jin_cw@bmc.com</description></item><item><title>在Oracle上备份和恢复 Remedy ARS数据库</title><link>https://martinliu.cn/2011/02/14/backup-restore-remedy-ars-oracle-db/</link><pubDate>Mon, 14 Feb 2011 15:05:27 +0000</pubDate><guid>https://martinliu.cn/2011/02/14/backup-restore-remedy-ars-oracle-db/</guid><description>Why ARS system need full backup and restore 众所周知_Remedy ARS_上运行的所有程序代码都是在数据库中存储的，几乎所有的程序代码和相关数据都是存储在后端的数据库里的。基于这种特性，我们可以很方便地从数据库层面实现对ARS系统的备份和恢复。所谓基于数据库的备份和恢复就是指数据库的全库导入和导出。在这方面_Oracle_做的很好，他所提供的imp和exp命令行工具能很好的完成此项任务。 When you may backup BMC Remedy ARS system Database _Remedy ARS_系统数据库全备份可能会发生在下面的几个时间点：
在安装过程中，_Remedy ITSM_套件的安装都是从ARS开始一个模块一个模块增加安装的，可以在安装每个新模块之前，做一个数据库备份，用于安装失败情况下的现场恢复 在系统上线前，当系统需要做升级/代码更新等等大规模操作之前可以考虑做一次数据库的导出备份 在做系统迁移的情况下，我们甚至可以生产库迁移到开发机上进行问题的重现，或者代码的修改，或者测试，完成之后再导回生产系统（如果生产系统再次期间处于维护状态的话） How-to 下面是我总结的相关操作步骤参考。
备份_ARSystem_数据库 exp aradmin/ar#admin@itil file=c:\before-patch7.dmp log=c:\exp.log compress=n statistics=none
参数解释： aradmin/ar#admin 是ARS系统默认的用户名和口令 @itil 是ARSystem数据库所在的数据库实例名 file=c:\before-patch7.dmp log=c:\exp.log 是导出的数据库文件和日志文件路径
删除ARAdmin用户数据 drop user aradmin cascade;
创建和授权ARAdmin用户 CREATE USER ARADMIN IDENTIFIED BY ar#admin# DEFAULT TABLESPACE ARSYSTEM TEMPORARY TABLESPACE ARTMPSPC PROFILE DEFAULT ACCOUNT UNLOCK;</description></item><item><title>图书推荐《服务建模：原理与应用》</title><link>https://martinliu.cn/2011/02/12/book-service-modelling/</link><pubDate>Sat, 12 Feb 2011 01:17:17 +0000</pubDate><guid>https://martinliu.cn/2011/02/12/book-service-modelling/</guid><description>Learn how to use service modelling to streamline and optimize processes!
Information about customer needs, the technical composition of services, and service performance are fundamental to effective service management. Service modelling is a structured approach to utilizing this information to improve the way services are delivered. Consistent application of service modelling provides the automation of processes and timely access to information.
[caption id=&amp;ldquo;attachment_50942&amp;rdquo; align=&amp;ldquo;alignleft&amp;rdquo; width=&amp;ldquo;201&amp;rdquo; caption=&amp;ldquo;Service Modelling: Principles and Applications &amp;ldquo;][/caption]</description></item><item><title>在64位Windows上安装ARS7.5</title><link>https://martinliu.cn/2011/02/10/64-windows-ars-75-install-tips/</link><pubDate>Thu, 10 Feb 2011 17:12:30 +0000</pubDate><guid>https://martinliu.cn/2011/02/10/64-windows-ars-75-install-tips/</guid><description>刚才终于把ARS装上了。费了我两天的力气终于搞定了。错误其实很简单的，现象很多人都见过，ARS在安装完所有的文件后，在系统中建完ARS的服务以后，会继续启动服务，才能做最后的程序文件导入的相关操作。
错误的现象是：在启动服务的时，安装程序一直停止在“Starting Remedy ARS services&amp;hellip;.”的屏幕，去arerror日志里面可以看到无法连接到SQL数据库的错误。
我的安装错误的原因其实很简单：
如果是64为的Windows操作系统，默认的安装路径是C:\Program Files (x86)\目录
Oracle客户端没有正确的安装
解决的方法如下：
修改ars默认的安装路径，尽量把它放在一个较短的而且没有特殊字符的路径里，如D:\bmc\
ARS 7.5 sp6支持的Oracle客户端是32位的，如果你在64位OS上安装的是64位的Oracle数据+客户端（sqlplus），那么默认的这个64为的客户端是不能用的，需要安装一个62位的客户端，而且需要时10g的，此版本也不支持11g的客户端；另外在安装32位的oracle客户端的时候最好也不要在路径中有特殊字符如符号和下划线之类的
ARS7.5本身是32位的可支持程序，所以它所需要的JDK和Oracle都需要是32位的版本。如果你安装的是7.6.04，就不需要考虑32位的问题，由于它本身就是64位的程序了，所以JDK和Oracle都需要使用相应的64为的程序。</description></item><item><title>BMC Atrium CMDB CI数据迁移</title><link>https://martinliu.cn/2011/01/12/bmc-atrium-cmdb-ci/</link><pubDate>Wed, 12 Jan 2011 05:08:23 +0000</pubDate><guid>https://martinliu.cn/2011/01/12/bmc-atrium-cmdb-ci/</guid><description>在不同的CMDB服务器之间做数据迁移之前一定要注意两点：1）保持两边的CDM相同；2）先导入CI数据在导入CI相关的关系数据。另外就是每个类导入完毕之后要做数据完整性和正确性的抽检。以下使用的工具是cmdbdriver，该命令初始化和一般性的参数介绍请参考相关文档。
CI数据导出示例
Command: xexpdt XEXPORT DATA Export instance data from all classes? (F): Classes to export data from: Class and its subclasses, From namespace (1,2) (1): Namespace (): BMC.CORE Class name (): BMC_ComputerSystem Dataset ID (): BMC.ASSET Filename for exported data: C:\DEMO\cs-ci Exporting Class BMC_ComputerSystem i=0: namespaceName = BMC.CORE, className = BMC_ComputerSystemExported without errorsExporting Class BMC_MainframeExporti ng Class BMC_PrinterExporting Class BMC_StorageSubsystem CMDBExportData results ReturnCode: OK Status List : 0 items</description></item><item><title>BMC Atrium CMDB 类定义迁移</title><link>https://martinliu.cn/2011/01/12/bmc-atrium-cmdb-sync-cdm-class/</link><pubDate>Wed, 12 Jan 2011 04:22:44 +0000</pubDate><guid>https://martinliu.cn/2011/01/12/bmc-atrium-cmdb-sync-cdm-class/</guid><description>当对CDM做了定制，并且要在不同的服务器直接做类的迁移的时候，需要把定制过的类都导出，然后在目标机上导入。可以使用的CMDB自带的命令行cmdbdriver工具。
cmdbdriver.exe能支持的参数
Options: -u -a -p -l -s -x&amp;lt;INPUTFILE_FULLPATH&amp;gt; -t&amp;lt;PORT_NUMBER&amp;gt; -q&amp;lt;QUIET_MODE_NUMBER&amp;gt;
登录CMDBdriver 实例： cmdbdriver -u Demo -p bmc@XXX -s atriumcmdb -t 9988
登录之后在运行另外用于初始化的两个命令 init 和log
Command: init INITIALIZATION
CMDBInitialization results ReturnCode: OK Status List : 0 items
Command: log Control record: Authentication string () : User name () : Demo Password () : ********** Locale[.charSet] () : TimeZone () : Server () : atriumcmdb
导出类定义的方法实例 Command: xexpdf XEXPORT DEFINITION Export all classes?</description></item><item><title>Fiddler Timers</title><link>https://martinliu.cn/2010/12/22/fiddler-timers/</link><pubDate>Wed, 22 Dec 2010 07:28:45 +0000</pubDate><guid>https://martinliu.cn/2010/12/22/fiddler-timers/</guid><description>Fiddler is a Web Debugging Proxy which logs all HTTP(S) traffic between your computer and the Internet. Fiddler allows you to inspect all HTTP(S) traffic, set breakpoints, and &amp;ldquo;fiddle&amp;rdquo; with incoming or outgoing data. Fiddler includes a powerful event-based scripting subsystem, and can be extended using any .NET language.Fiddler is freeware and can debug traffic from virtually any application, including Internet Explorer, Mozilla Firefox, Opera, and thousands more.
ClientConnected- Exact time that the client browser made a TCP/IP connection to Fiddler.</description></item><item><title>[ZT]ITIL V3 服务转换篇 之 资产和配置管理</title><link>https://martinliu.cn/2010/12/20/itil-v3-asset-configuration/</link><pubDate>Mon, 20 Dec 2010 03:01:40 +0000</pubDate><guid>https://martinliu.cn/2010/12/20/itil-v3-asset-configuration/</guid><description>为了定义和控制服务和基础设施组件。维持当前计划中、历史的服务和基础设施状况配置信息的准确性 **一、先介绍几个基本概念 **1、配置项（CI） 配置项是正在或将要在配置管理控制下的资产、服务组件或其他。配置项在复杂性、大小、种类有很大不同，从整个服务或系统包括硬件、软件、文档、支持人员到单独软件模块或硬件组件。配置项可以集中或分组管理。配置项可以选择使用既定的选择标准、分组、分类和识别方式在整个生命周期中管理和追溯。其包括： A) 服务CI项：服务能力资产、服务资源资产、服务模式、服务包、发布包、验收标准等 B) 组织CI项 C) 内部CI项 D) 外部CI项：包括外部客户需求和协议、供应商发布、分包商及对外服务。 E) 接口CI项：端到端的服务，跨越服务提供者的接口 2、配置管理系统（CMS） 为了管理大型复杂的IT服务和基础设施，资产和配置管理需要使用配置管理系统CMS。在指定范围内CMS掌握着所有配置项信息。CMS为所有服务组件与相关事故、问题、已知错误、变更发布、文档、公司数据、供应商、客户信息做关联。 在数据层面CMS能使数据库存在多个物理CMDB中而后共同组成一个联合的CMDB。其他数据来源也可以加入CMS中。 3、配置管理数据库(CMDB) 所有配置项的信息都包括在配置管理数据库(CMDB)中。配置管理数据库(CMDB)对所有IT 组件、组件的不同版本和状态以及组件之间的相互关系进行跟踪。在其最基本的形式下，配置管理数据库(CMDB)可能仅由一些纸质表格或一套电子表格 (Spreadsheets)组成。 4、最终介质库(DML) DML是用来存储和保护所有已授权的被确认版本介质配置项。 他们存储经过质检的主拷贝版本。这个库可以有一个或多个软件库或存放区来存放开发、测试和实时存储文件。他们包含组织所有软件的主拷贝、购买软件的副本及 受控文件的电子版。DML包含物理的拷贝存储，DML是发布管理的基础。
**二、配置管理的目的： ** 1. 确定、控制、记录、报告、审计、验证服务资产和配置项包括版本、基线、组成成分、属性和相关关系。 2.通过服务生命周期管理保护资产完整、配置项等账户。确保只有已授权的组件被使用和已授权变更被执行。 3.通过服务生命周期保护服务资产、配置项的完整性。为了建立和维持一个准确和完整的配置管理系统，确保资产和控制服务、IT基础设施的配置需求的完整性。
三、资产、配置管理的活动
1、规划 2、识别 配置项识别过程： A) 定义和制定标准文件来选择配置项和他们的组件构成 B) 依据标准选择配置项及其组件并记录他们 C) 给配置项分配唯一的标识符 D) 指定每个配置项相关属性 E) 确认每个配置项是受配置项管理来管理 F) 确定每个配置项的责任人 3、控制 必须有效控制信息以维持配置管理数据库(CMDB)的及时更新。一旦某项活动改变了配置项已记录的特征或配置项之间的关系，则必须在配置管理数据库 (CMDB)中记录该项变动。需注意的是：只有变更管理才有权批准对配置项的特征进行变动，事件管理只能改变某个现有的配置项的状态来反映现实状况。 配置管理负责控制组织接收到的所有IT 组件并需确保这些组件被记录在系统中。硬件可在其已订购或已交付时进行记录，而软件则通常在其被纳入DML时进行记录。 4、记录 组件的生命周期可被划分成多个阶段，每个阶段都可以分配一个状态代码，但具体分成几个阶段则取决于公希望记录IT 基础设施的哪些特征。保持对每次状态变化日期的记录可以提供关于一个产品的生命周期的有用信息，如订购时间、安装时间以及所需的维护和支持。组件的状态决 定了可以对其进行操作的余地。 5、审核和报告 执行审计是为了核实配置管理数据库(CMDB)中记录的信息是否仍然反映了当前的现实状况。这些信息可用来检查和更新配置管理数据库(CMDB)。 在下列情形下需要执行审计： A) 在建立了新的配置管理数据库(CMDB)之后； B) 建立配置管理数据库(CMDB)一段时间之后； C) 重大变更之前或之后； D) 灾难恢复之后； E) 其他任何方便的时候。 审计也可以随机地或在配置经理认为配置管理数据库(CMDB)中的信息不正确时进行。如果配置管理系统与审计工具之间存在关联，则可以每天生成针对某个相 关领域的审计报告。在发现差异时，不应该允许审计工具自动更新配置管理数据库(CMDB)。所有的差异都表明变更管理流程可能被忽视了，所以应该对这些差 异进行调查并通过变更管理对这些差异进行追溯性处理。 三、配置管理管理报告 配置管理流程的管理报告可能包括下列信息： a) 有关流程质量的信息； b) 在审计中发现的记录与实际情形不符的次数； c) 发现未经批准的配置的次数； d) 出现已记录的配置不能被找到情形的次数； e) 审计中发现的有关配置项属性详细程度方面的差异； f) 处理信息记录请求所需的时间； g) 超过给定事件或变更次数的配置项的列表； h) 有关 IT 基础设施的结构和组成的统计信息； i) 有关 IT 基础设施发展情况及其他方面的信息； j) 有关改进措施的总结、报告和建议，例如，针对由于业务、技术、市场价格和其他相关变化所导致的配置管理追踪记录的配置项的范围和详细程度的变更所提出建议； k) 有关实施流程所耗费的人力成本的清单。</description></item><item><title>如何阻止员工上班时间聊QQ的免费解决方案</title><link>https://martinliu.cn/2010/11/06/qq-v-360/</link><pubDate>Sat, 06 Nov 2010 09:59:01 +0000</pubDate><guid>https://martinliu.cn/2010/11/06/qq-v-360/</guid><description>最近听说有些公司的IT部门已经发文，要求公司员工所使用的电脑必须尽快安装360软件。嗯，这还真是一个法子，值得推广哈哈哈</description></item><item><title>八月十五月儿圆，我和兄弟们装AR</title><link>https://martinliu.cn/2010/09/22/install-remedy-ars-itsm-on-aix-oracle/</link><pubDate>Wed, 22 Sep 2010 13:51:14 +0000</pubDate><guid>https://martinliu.cn/2010/09/22/install-remedy-ars-itsm-on-aix-oracle/</guid><description>经过几天的奋战，我们终于在中秋月圆之夜，在黑山扈的百望山脚下为客户成功地安装了Remedy ITSM 7.6.03 每当安装程序一次次挂死、安装程序界面不正常显示、安装不完全、安装失败，都让在场的人达到抓狂的后期，无语~~ 这里总结一下这几天的失败安装的血泪史，供后来人参考学习。
版本的确认：所有操作系统，JVM，JDK，数据库，数据库客户端，和以上软件的位数都需要查明，都需要在Remedy的兼容文档中一一确认。
AIX操作系统的字符集：需要同时安装中英文的UTF8字符集。安装方法smitty，需要有操作系统的安装盘，安装完成之后，locale -a ，需要能看到 ZH_CN, ZH_CN.UTF-8,EN_US, EN_US.UTF-8 这四种字符集缺一不可。否则无法以中文方式安装成功，也无法让操作系统已中文utf8来启动AR服务。
XManager需要安装在于AR同一网段的Windows服务器上，例如Mid-tier可能安装在Windows上，并与AR在同以网段，那么安装程序最好在该服务器的Xmanager的客户端中安装，从哪里连接AIX服务器并运行安装程序。如果不在同一个网段，安装程序很有可能安装了一半或者无名的消失，安装进程会立刻中断，需要把系统推到重来。
AIX系统上font server的安装：使用netstat -na|grep 7100， 如果没有结果则需要从AIX的光盘中在AIX的服务器上安装font server和相关的包，并且启动它。如果不装的话，remedy安装程序可能界面显示不正常，或者不显示。
Oracle上众多僵尸进程：如果在安装CMDB或者ITSM套件的时候，安装界面挂死或者消失，这会是Oracle服务器上产生上百个僵尸进程，这些进程会吃光Oracle服务器的所有物理内存。我们的oracle服务器的16GB内存被吃光之后，ITSM安装界面几乎停止，20~30分钟才能安装完一个定义文件。解决方法是：随时监控Oracle服务器的内存使用情况，当出现内存被僵尸进程吃光的情况，可以考虑使用IT行里无人不知的无敌重启方案，重启Oracle服务器的操作系统，从启动Oracle数据库实例，重启ARS服务，然后再次安装Remedy ITSM。
Remedy安装之备份：如果是在AIX+Oracle的数据库上安装。Remedy还是非常绿色的软件，需要在安装完AR，CMDB，ITSM套件后各做一个Remedy安装文件目录的备份，在AIX上可以把这个文件夹tar起来备用。Oracle数据库还是非常容易备份的，使用imp和exp命了就可以搞定，具体语句咨询DBA。切忌在安装CMDB和ITSM之前一定要对Remedy系统的安装文件和数据库做备份，一旦安装失败，可以恢复文件，恢复数据库，排错后重新再来。</description></item><item><title>[ZT] Old BSM is dead</title><link>https://martinliu.cn/2010/09/17/zt-bsm-dead/</link><pubDate>Fri, 17 Sep 2010 18:46:09 +0000</pubDate><guid>https://martinliu.cn/2010/09/17/zt-bsm-dead/</guid><description>随着云计算和虚拟化的来临，IT架构愈加复杂，老一套的IT管理方案只能监控静态的基础架构。老一套的CMDB和BSM给运维无法带来实质性的帮助，需要能够具有自适应、自学习IT环境的能力，管理工具需要对IT环境的变化有感知，有学习功能，否则无法对业务故障的处理给予应有的支持。转帖自学一下这个文章，老外从IT架构的历史讲起，横跨跨服务保证和CMDB等领域，讲的还是很不错的。 The Significance of the VMware Integrien Acquisition While it may seem that with Integrien VMware has acquired yet one more piece of the puzzle (a puzzle whose final form no one knows), this acquisition is perhaps one of the most significant if not the most significant that VMware has done. To understand the significance of this acquisition, one has to step back and examine a bit of history in the Systems Management business.</description></item><item><title>Open source software box dot net launch</title><link>https://martinliu.cn/2010/09/15/open-source-software-box-dot-net-lunch/</link><pubDate>Wed, 15 Sep 2010 16:47:22 +0000</pubDate><guid>https://martinliu.cn/2010/09/15/open-source-software-box-dot-net-lunch/</guid><description>My another new domain name ossbox.net is launching. This site will move into as soon as martinliu.cn could be finally blocked due to IDC domain registration process failed.
I am almost giving up this blog sometimes, just because .cn domain name is hopeless. I am done with this game. For the past few months, I did everything that I could do for keeping this domain alive. But, martinliu.cn is still under the risk; you could not reach this site for any moment.</description></item><item><title>Remedy Server Group及负载均衡配置参考步骤</title><link>https://martinliu.cn/2010/08/09/remedy-lb-midtier-server-group-configure/</link><pubDate>Mon, 09 Aug 2010 01:08:31 +0000</pubDate><guid>https://martinliu.cn/2010/08/09/remedy-lb-midtier-server-group-configure/</guid><description>上图为大型用户环境下Remedy ITSM的部署架构，作为本安装步骤参考模型。所不同的是，如下配置步骤只应用了一个最上面的负载均衡器，每个Web对应连接一个ARS服务器，简化掉了中间放在ARS前的负载均衡器。
第一步 安装前的准备工作。 确定Remedy ARS的服务别名，例如“AtriumCMDB”。在所有的Web服务器（Mid-tier所安装的服务器）的host文件中加入一条Ip地址解析，例如：
192.168.10.11 AtriumCMDB 此ARS服务别名指向的是该Web服务器所对应的ARS服务器，例如：Web1中AtriumCMDB对应的ip为ARS1，Web2对应ARS2，Web3对应ARS3，以此类推。
第二步安装第一台ARS服务器 默认所有的ARS都安装了数据库客户端程序，如果是Oracle数据库，ARS上的客户端程序的大小版本号必须和远程数据库的大小版本号完全一致。Windows平台的Oracle客户端只支持32位的程序。在所有ARS服务器的host文件中加入一条Ip地址解析，例如：
192.168.10.11 AtriumCMDB 此IP地址为每台ARS自己的对外提供ARS服务的IP。ARS上安装完JDK之后，开始安装ARS，安装过程中服务器别名输入AtriumCMDB，其他的选项都按需要配置，所有有关服务器端组件、服务端口、密码、安装路径的信息都要做详细记录，用来安装Server Group中其他成员使用。安装完第一台服务器的ARS之后，申请Remedy License，打License，包括其他所有CMDB、ITSM相关应用模块的License，打完License后导出成文件备用。ARS安装成功之后，顺序安装其他应用，顺序时CMDB 》ITSM 其他。安装完毕后，通过Remedy User来确认所有应用功能是否正常。
**第三步 **配置第一台ARS服务器为Server Group中的管理服务器 配置方法参照，ARS Configuration Guide中的Server Group的相关章节。配置完毕之后打开Server Group的Log，从启动ARS服务之后，查看该Log看Server Group工作是否正常。
第四步 安装Server Group中的成员ARS服务器 准备工作参考第一台ARS服务器。运行ARS安装程序，选择Server Group，选择输入AtriumCMDB别名，选择共享的数据库，其他参数与第一台保持一致。安装完毕之后。使用ARS自带的Sample应用新增一个city，在ARS1上查询ARS2上新增的记录。同样参考的Server Group的相关章节，对ARS2进行配置。在ARS2上查看Server Group的日志，确认该ARS已经加入了以第一台ARS为管理服务器的群集中。为第二台ARS服务器打License。在确认第二台ARS服务器成功加入之后，安装CMDB应用。安装完毕之后，在第二台ARS服务器上，使用Remedy User客户端，打开CMDB的相关表单进行新增和查询操作；然后在ARS1上检查操作结果，保证两边一致。安装ITSM：直接把第一台ARS服务器的ar.cfg文件覆盖到第二台ARS的ar.cfg上，一定要修改第一台ARS服务器主机名的哪一行，把它修改为第二台ARS的主机名。复制第一台ARS的ITSM安装目录到第二台ARS的相同路径中，重启ARS服务。查看arerror.log文件看看ARS启动的是否正常。在第二台ARS上使用Remedy User确认ITSM应用是否工作正常，如果一切工作正常，则第二台ARS服务器安装完毕。按照相同的方式安装其他的ARS服务器。
第五步 配置每台ARS的ranking 按照ARS Configuration Guide中的Server Group的相关章节配置每台ARS服务器处理不同后台工作流的ranking。
第六步 安装配置所有Web服务器的Remedy Mid-tier 安装Remedy Mid-tier软件，都指向相同的ARS服务别名AtriumCMDB，当然该别名被解析为它所对应的ARS服务器的IP地址。使用浏览器测试每台Web服务器，保证Remedy Mid-tier都能正常工作。
第七步 配置F5负载均衡 配置F5的分发策略，按不同ARS服务器的用途，来分别不同的用户请求。考虑管理和接口功能的ARS负担少量的用户交互。开发一个jsp的程序部署在Mid-tier的shared目录中，用它来判断Web所对应的ARS的可用性，以此作为唯一判断条件来分发用户请求给可用的web服务器。</description></item><item><title>OTRS 3.0.0 beta1 发布</title><link>https://martinliu.cn/2010/08/03/otrs-300-beta1/</link><pubDate>Tue, 03 Aug 2010 05:04:46 +0000</pubDate><guid>https://martinliu.cn/2010/08/03/otrs-300-beta1/</guid><description>这个产品被重命名为OTRS Help Desk，从名字上看出它变的更加成熟，更加符合ITIL了。OTRS界面是很土的，比RT3差很多，一直以来我都被它完善的ITIL概念所吸引而无暇顾及它丑陋的界面，这个版本将在界面和新的功能上给我们更多惊喜。下面是3.0时代的第一个release notes，偷懒一下，英翻中的工作让google代劳了。
RN原文：http://lists.otrs.org/pipermail/announce/2010/000133.html
时间已经到了 一个全新的欢迎开放源码OTRS的世界领先的新一代帮助台解决方案。新的OTRS的帮助台3.0主要版本附带了一个全新的图形用户界面上完全重新设计信息的基 础 架构。您将受益于更快获取相关信息，具有较高的透明度和增加在日常工作效率。 OTRS的帮助台3.0设计的基础 上与来自不同行业的电力用户访问种类繁多以及在与用户体验领先的专业机构密切合作。今天我们很自豪地介绍美妙的结果：
最值得关注的新功能如下：
（1）用户为中心的图形用户界面，在一个戏剧 性的转变从结果重新设计一个全面的，但一个更强大的静态和动态的应用程序使用的，类似的Ajax，XHTML和优化的最先进的技术状态的CSS。
（2）新工单和文章指示器 - 这一新的功能已被两票和文章一级执行。它允许在一个表面上是为代理人在 票或任何更新的文章水平检查，以检查新的和未读文章。您将受益于增加透明度和减少响应时间。
（3）优化全 文搜索 - 新的搜索功能，您可以灵活定制的方式来浏览信息库。选择新的搜索功能提供了从单一的搜索字符串的搜索范围，复杂的多字符串布尔搜索行动，包括 各经营者。您受益于完全可定制的搜索根据您的需要。
（4）工单缩放视图 - 关于Ajax技术让代理商来显示实时链接的信息结构复杂，同时让代理商目前的工作环境为基础的重新设计。这些公司会受益于增加的方向，提高工 作流程效率。
（5）全局工单一览 - 知名的OTRS2.4全局工单概述已经得到了优化，以达到增加跨活动。根据不同的使用情况和您的代理人的喜好，他们可以轻松地更改机票概览布局根据自己的特殊需要。期权是小型，中型和大型，每个细节提供了不同程度的信息。
（6）可用性 - 包括重新设计的共同普及标准条WCAG和炜也让弱能ARIA的用户能够更好地互动与OTRS的服务台。美国康复法案第508条已经实现。
（7）新客户界面 - 客户网络前端可集成到您的组织机构内部网，并充分考虑重新设计的桌面帮助系统集成。
（8）存档功能 - OTRS的3.0现在提供一个新的归档功能。有了你分开存档受益于搜索，并增加结果显示花了时间却缩短。
Google的翻译效果不佳，请直接看官方发布说明。另外此版本为beta版本，OTRS并不建议用于生产环境。</description></item><item><title>BMC课程通知: BMC Remedy AR 7.5 管理员培训</title><link>https://martinliu.cn/2010/07/30/bmc-training-schedule01/</link><pubDate>Fri, 30 Jul 2010 06:28:19 +0000</pubDate><guid>https://martinliu.cn/2010/07/30/bmc-training-schedule01/</guid><description>课程适用于Remedy AR管理员和开发人员，讲授AR系统的功能、架构、日常运维和创建应用。 学员可以选择课后参加上机考试，获得BMC Certified Administrator: BMC Remedy AR System 7.5认证。不参加考试的学员将会获得结课证书 点 击查看详情
课程目标
认识AR System 7.5 的用途和优势 认识AR System 7.5的架构 使用Remedy User和Web浏览器创建和查询请求 使用Remedy User和Web浏览器创建AR系统报告 使用BMC Remedy Alert 和Web接收通知 描述BMC Remedy Administrator工具的基本维护任务 了解AR系统的访问控制概念 了解不同的AR System角色 理解 AR System 的系统架构 了解AR System 的开发工具 权限管理和 AR System许可管理 使用Administration Console执行统一的管理任务. 使用Developer Studio 创建AR System 对象 创建AR System 表单, 控件和 菜单来满足业务需求 创建AR System active links 创建AR System filters 创建基于时间的 escalations 定制一个web的应用 使用log日志来评估性能和识别性能问题 了解AR System 最佳实践</description></item><item><title>ITIL v3 MindMap脑图</title><link>https://martinliu.cn/2010/07/29/itil-v3-mindmap/</link><pubDate>Thu, 29 Jul 2010 03:25:35 +0000</pubDate><guid>https://martinliu.cn/2010/07/29/itil-v3-mindmap/</guid><description>
下载ITIL v3核心概念介绍，脑图版：http://www.box.net/shared/fve6vvasvt
这份资料对于新手学习，或者ITILv3老手做参考都比较适合。为了为一些朋友突破一下语言的障碍，我把它翻译成了简体中文版，使用开源软件FindMind进行的翻译。
文档下载 正在翻译中，稍后提供中文完整版本。翻译状态：
服务策略 100%
服务设计 100%
服务转换 0%
服务运往 0%
服务持续性改进 0%</description></item><item><title>Make Cacti more easier</title><link>https://martinliu.cn/2010/07/23/cacti-easier/</link><pubDate>Fri, 23 Jul 2010 01:46:33 +0000</pubDate><guid>https://martinliu.cn/2010/07/23/cacti-easier/</guid><description>Cacti是我最喜爱的一个网管软件之一。网站http://cactiez.cactiusers.org/ ；该网站的主人吧Cacti嵌入到了Linux的安装光盘中，实现了Cacti的一键式安装，这正是我所关注的关于开源应用的重要的一个步骤。我称之这是在解决开源软件应用的“last mile”问题。开源软件的潜在用户往往有这样几个特点：
技术力量弱，有些可能根本就不知道什么是Linux，什么是open source
需求相对明确和简单
无法获得中文的技术支持和培训
CactiEz让人能在30分钟之内上手开始使用Cacti，从根本上解决了整套软件的安装和配置工作。
英文版下载地址：http://cactiez.cactiusers.org/
中文版下载地址：http://linux.chinaunix.net/bbs/thread-1049886-1-1.html</description></item><item><title>规划CMDB数据填充-003</title><link>https://martinliu.cn/2010/07/20/cmdb003/</link><pubDate>Tue, 20 Jul 2010 11:35:44 +0000</pubDate><guid>https://martinliu.cn/2010/07/20/cmdb003/</guid><description>From 《Step by step to build a CMDB》步骤17-规划CMDB数据填充
本文描述填充过程的任务3到任务4：
任务3 映射CI和数据源 现在拿出您的CI清单，并把每一类CI与具有相关信息的数据源映射起来。一个简单的电子数据表格，像图17.2一样的就足够了。有更复杂数据需求的大一点的企业可能需要多个数据页或者通过CI分类来连接到不同的数据页。
这项工作的最终目标不仅是识别用以填充CMDB数据源，而且还识别了流程和平台的接触点，有些平台对数据填充是有影响的。这项工作也是至关重要，用来定义数据调和规则，定义数据优先度，这些会在下面的步骤，任务7“建立调和规则”中用的。 工具映射如下图17.2所示，包括了每一个CI类，相关的属性，相关的关系数据，和数据源。 图17.2 Ci和数据源之间的对照关系图样例 您可能会发现一些s数据源之间的重叠，特别是CI库存清单的属性数据。这些数据通常包括唯一物理特性和CI的地点的说明 ，例如：型号、序列号、地点和所有者。此信息可能被存储在其他多个地方，它们也可用于CI数据填充的来源和日常维护的来源。 多种的资产和库存清单数据来源可能包括如下：
审计（资产清单或者配置发现数据库；无代理和有代理方式）
资产管理系统
采购系统和许可证管理
财会系统（采购或者收货）
合同管理系统
变更管理系统
其他财务应用和系统
任务4 访问数据源环境 为了确保数据质量，你应该访问所有的数据源环境，而不仅仅只是CMDB，还包括连接工具和相关技术，要逐一访问查看每一个数据源。在这里，“进来的是垃圾，出去的就是垃圾”这个俗语是适用的。CMDB项目的成功可能依赖于对系统或者基础架构的更新，以适应网络流量和数据量，还依赖于确保每一个数据源的数据质量。
当你规划CMDB数据填充的时候，要自问这样几个问题，是有关外部映射数据源质量的：
现在那些信息在那里、怎样被存储的？ &amp;ndash;数据库、电子表格、Word文档？
当前环境中有没有审计（发现）工具、软件分发、配置管理或者采购系统，用来自动的跟踪和存储这些信息？ 或者数据时被手工地收集和更新的？
这些系统是基于开放标准还是私有技术的？
这些系统的厂商有没有标准化的工具？或者CMDB厂商？
需要被继承的数据源的物理位置在那里？
在CMDB和数据源之间，通讯的方式是双向的还是单向的？
还要考虑有关映射数据源性能相关的问题：
就当前的数据源来说，现实的性能、容量和可靠性是怎样的？</description></item><item><title>规划CMDB数据填充-002</title><link>https://martinliu.cn/2010/07/20/plan-cmdb-population-002/</link><pubDate>Tue, 20 Jul 2010 11:25:18 +0000</pubDate><guid>https://martinliu.cn/2010/07/20/plan-cmdb-population-002/</guid><description>From 《Step by step to build a CMDB》步骤17-规划CMDB数据填充
本文描述填充过程的任务1到任务2：
任务1 再次回顾CMDB范围 现在进行现实检验。你能否确实交付在第2阶段即“定义需求和创建IT服务模型蓝图”中定义的CI范围涉及的相关数据？你在CI数据一旦交付以后，能否有足够的资源来维护整个系统和所有数据？这些都是重要的问题，因为您所选择的CMDB解决方案，可能很容易地就超越了您需要的范围，超出了你可以能容易维护的程度。
在规划CMDB数据填充时，您的思想应该是“少即是多“。先学会走再跑。让CMDB的首次推广得到充分验证后在考虑扩大范围。您需要帮助保持 CMDB的团队和CMDB数据用户的积极性。同时避免项目范围的蔓延，否则可能破坏的实施的效果，以及用户对新的解决方案的接受度。
请谨记这样几个考虑因素，从而来帮助您始终专注于那些核心需求上，并能对关键的限制作出反应：
成本 – 每个人都必须面对业务现实，包括预算和费用的现实。因此，在您的CMDB项目预算范围里，对主要需求排列优先级。如果出现新的想法，那么也只是在新的预算来下了以后才考虑。 时间 &amp;ndash; 您可能需要在给定的时间内实施CMDB，来使您企业在此方面的业务需求得到满足，如 Sarbanes-Oxley 法规，或支持一个非常关键的新流程。当您计划了CI数据填充的顺序后（后面介绍的这一步），不仅要对CI数据排优先级，而且还要明确时间的限制。 实用性 – 如果没有足够的资源用来实施和维持CMDB，以满足CMDB要求，那么您可能需要缩小实施范围，以便您可以在您实际有限的资源里运作项目。你还可以考虑分两个阶段进行实施，把非关键的要求放到第二个阶段中。 外部强加的优先事项 – 有些业务的运作，例如企业治理、数据保护和信息自由，可能会影响您既定的优先次序。您可以通过分阶段实施CMDB数据填充来减少外部因素的影响。如果你没有从一开始就计划足够的时间来达成最后期限，那么你可以尝试投入更多的资源来克服时间上的限制。然而，还要意识到，以后你要申请更多的资源，没有资源的保证，你可能无法充分管理好项目。 所有权 – 有时IT资产的负责人并不属于IT组织。如果资产所有者决定不参与的CMDB，这会严重限制了CI数据内容的提供。您可以提供CMDB部分功能的有限的访问给他们，用来消除他们顾虑，并参与进来。 地区 – 地理区域上的边界，可能会限制建立企业范围的CMDB。由于地理或行政上可能的边界，我们可能听过“最好再也不要从总部传来这样神经质数据库方案”。最好预防这种情况的办法是，尽可能早的让所有地区的相关人员参与到CMDB项目里来。 组织架构 – 很多企业把IT划分成为清晰地、各自为政的独立部门，通过这种方式来对CMDB里的不同范围负责。例如：通信部门的人可能是一个单独的组织结构，他们可能拒绝参与到项目中来，因为他们觉得这超出了他们的控制范围。这时候就要让其他的IT组织参与其中，让每个人都知道谁是项目负责人。 当你计划你的CMDB数据填充的时候，越能专注于关键受益人的需求，就越能够达成项目的业务目标，就越能让您的项目顺利。您需要就已经确定的 CMDB范围，与所有的利益方沟通它可能的影响和效果。收集他们的反馈，并对有必要方面做进一步讨论。
任务2 识别CI 使用在第15步即“设计IT服务模型蓝图”中设计的IT服务模型蓝图为基础，来生成用于CMDB数据填充的CI以及相关属性和关系数据的清单。这个清单的细节应该到数据字段级别，以便，你能够识别并且映射一个或者多个数据源到特定的CI数据。 例如，如果你把一个实际的服务器CI的属性和关系数据都列出清单，你就可以找出一些现有的能提供属性数据的数据源，可能包括库存管理的数据库和发现或者网络管理工具。但是另外一些数据字段可能没有现成的数据源。你将在第18步“选择自动化CMDB数据填充工具”中用到以上差距分析。或者您可能决定使用手工的方式来填充和更新这个字段，这里还需要仔细的考虑到数据的负责人，和在21步“建立CI生命周期管理流程”中需要支持的流程。 至此，你需要专注于用来满足项目目标的要求。在步骤11到14，你定义了与其他流程的结合点，明确的CI需求。专注于那些能直接对流程收益人产生直接影响的CI数据。</description></item><item><title>RT3 Request Tacker或让你摆脱束缚</title><link>https://martinliu.cn/2010/07/18/rt3-request-tracker/</link><pubDate>Sun, 18 Jul 2010 13:54:54 +0000</pubDate><guid>https://martinliu.cn/2010/07/18/rt3-request-tracker/</guid><description>What&amp;rsquo;s new in 3.8+?
清晰易用的图形界面
仪表板Dashboards
流程单关系图 Ticket relationship graphs
与PGPemail无缝集成 Seamless PGP support for email
富文本编辑 Richtext editing (WYSIWYG)
预定义用户首选项 Per-user preferences for common options
单据按日历feed：Calendar feeds for ticket due dates
标记单据 Bookmarking tickets
新的邮件设置 New email delivery settings
更容易的升级工具 Easier upgrade tools
性能提高 Loads of performance improvements and bug fixes</description></item><item><title>OCS inventory NG 两三事</title><link>https://martinliu.cn/2010/07/16/ocs-inventory-ng/</link><pubDate>Fri, 16 Jul 2010 19:03:17 +0000</pubDate><guid>https://martinliu.cn/2010/07/16/ocs-inventory-ng/</guid><description>头等大事是有关于OCSNG很快就要出UTF8多语言支持版的Windows采集代理程序。新闻如下： ** 新版windows采集代理被彻底重写，它将包括下面的新特性：**
全Unicode代理，多语言UTF-8支持 Native 32 and 64 bits agent BIOS AssetTag 收集 硬盘序列号收集 部署返回码收集 全 HTTPS 支持 Socks 4 、5 HTTP 代理支持 FTP, FTPS 和SMB 包部署支持 二进制插件支持 另外，是一本新书的发布，这是我见到的第一本系统介绍OCSNG的图书。可能是由于我写过一些相关的post，该书的出版社发邮件给我，想请我review，并写写书评。处于对OCSNG和GLPI的喜爱，忍不住诱惑，就答应了。很快的我得到了这本书的电子版。虽然没有时间看完，浏览了几章后，还是可以说这本书写的是非常实用。特别是对系统的安装、配置、部署和使用都从系统管理员的角度写的非常到位。书上没什么废话，文字写的比较随意，很易懂的随意。可喜的是该书还捎带着把GLPI也给介绍了，包括如何与OCSNG做集成配置，以及GLPI的主要功能说明。对于这种偏门的开源软件系统能有如此细致使用的介绍实属难得，更何况我对OCSNG和GLPI的网站文档本身就不敢恭维。这里提供一个样章供参考 &amp;ldquo;Introduction to IT Inventory and Resource Management&amp;rdquo;
最后，还是期待新版OCSNG的Window采集代理程序能早点发布吧。期望它发布之时我有时间做这样一个虚机，以便分享给各位感兴趣的人。规划如下：
基于Fedora 10
安装OCSNG_UNIX_SERVER-1.3.2. + glpi-0.78-RC2
做一定系统的基本优化，配置OCSNG和GPLI的集成
期望该虚机能应用于实际的网络环境中</description></item><item><title>Upgraded to Wordpress 3.0</title><link>https://martinliu.cn/2010/06/20/upgraded-wordpress-30/</link><pubDate>Sun, 20 Jun 2010 11:13:44 +0000</pubDate><guid>https://martinliu.cn/2010/06/20/upgraded-wordpress-30/</guid><description>期待多时的3.0版本终于出现了，刚刚升级上来，还没有体验到她的新功能，先换上了最新的皮肤，看上去字体和布局都非常舒服。简单就是美，希望WordPress能够越来越好。它真可谓用户体验的典范之作！</description></item><item><title>BMC提供ITSM洋快餐</title><link>https://martinliu.cn/2010/06/07/bmc-remedy-ondemand/</link><pubDate>Mon, 07 Jun 2010 17:55:46 +0000</pubDate><guid>https://martinliu.cn/2010/06/07/bmc-remedy-ondemand/</guid><description>还有很多企业依然在寻找IT服务管理的方法论 还有很多企业依然在让内部开发团队打造ITSM流程平台 也还有很多企业在购买的成熟的ITSM管理平台套件上大搞研发和定制 也还有很多外国企业在拼命保持使用ITSM产品开箱即用的功能来减少开支和加快投资回报 也还有一些外国企业在尝试ITSM的KFC，BMC Remedy OnDemand，连系统也不建设了，直接拿标准的就来用吧。 回顾国内的ITSM用户，往往在探索期里花的时间和金钱成本太大，推广标准化ITSM的理念需和ITSM系统平台建设同行；目前国外的工具和ITIL标准已经够标准、成熟和进化了，我们的标准化理念也争取迎头赶上吧 Reduce Service Support Costs Quickly with BMC Remedy OnDemand
View Full Screen</description></item><item><title>规划CMDB数据填充-001</title><link>https://martinliu.cn/2010/06/04/plan-cmdb-population-001/</link><pubDate>Fri, 04 Jun 2010 06:13:20 +0000</pubDate><guid>https://martinliu.cn/2010/06/04/plan-cmdb-population-001/</guid><description>&lt;p>From 《Step by step to build a CMDB》步骤17-规划CMDB数据填充&lt;/p>
&lt;p>目标&lt;/p>
&lt;p>在这一CMDB关键的步骤中，会为CMDB的初始化CI数据填充，做精细的计划。需要考虑到所有CI数据，把不同CI类型对应到不同的数据集中，安排正确的顺序将这些数据集CMDB。其中定义对应的规则来调和重复数据是很重要的，不仅在CMDB初始化数据填充阶段重要，在以后的日常维护过程中也是非常重要的。做出了本阶段的详细规划后，这样在第18步即“选择自动化CMDB填充工具”时，就能考虑需要什么样的配置发现和自动化工具了。&lt;/p>
&lt;p>&lt;img src="http://pursuitmag.com/wp-content/uploads/2010/01/private-investigator-database.jpg" alt="">&lt;/p>
&lt;p>实际上，把数据填充到CMDB中是非常基础的工作，必须事前做好充分的数据范围和类型的分析。对于一个典型的CMDB数据填过程来说，将需要做如下工作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>建立里项目程碑和高阶项目计划，以及配套的支撑数据库和操作流程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安排项目启动会议，单周或者双周的项目进度沟通会。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>识别子项目（每个数据集分为一个子项目），建立每个子项目的目标和需求清单。识别和制定项目工作活动内容，确定项目的工作流程，并且按照项目计划排程所有活动。包括：
&amp;mdash;并行开展项目（用户界面定制，DSL数据填充）；
&amp;mdash;串行开展项目（发现工具，数据调和，等等）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为每个子项目分配项目负责人，让他们来负责汇报项目的进展、问题升级和下一步的工作。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为所有项目参与人员建立一个开放的沟通平台，包括所有内部、外部人员（邮件组方式，数据库、通报）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为可能出现的紧急事件预留至少10%的时间和预算的缓冲。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>ITSM实施精要-只讲2分钟</title><link>https://martinliu.cn/2010/06/01/itsm-implement-best-practice/</link><pubDate>Tue, 01 Jun 2010 16:37:51 +0000</pubDate><guid>https://martinliu.cn/2010/06/01/itsm-implement-best-practice/</guid><description>下面是我在过去ITSM项目实施中的一些经验和体会：
ITSM_implement best practice
下载
Credit：本ppt的原版为《the 60 second guide to Enterprise Innovation》</description></item><item><title>联邦的CMDB–神话/现实/需求/还是策略？</title><link>https://martinliu.cn/2010/05/31/federation-cmdb/</link><pubDate>Mon, 31 May 2010 03:53:06 +0000</pubDate><guid>https://martinliu.cn/2010/05/31/federation-cmdb/</guid><description>&lt;p>来自：Jonathan Markworth（CompuCom Systems有限公司管理顾问，探讨联邦数据库的优点）&lt;/p>
&lt;p>使用一个具有单一的、全知的、万能的和自维护功能的工具，来管理IT基础架的方方面面信息，是否是最好的方案呢？使用一个能做所有工作的全集成平台，来替换您积累下来的所有管理工具是否是最佳方式？现实情况是，大多数组织都已经实施了几十种应用程序、工具、实用程序、数据存储、硬件平台和管理框架，它们一起运行着一个或更多的IT服务管理功能。它们中的每一个应用都有自己的数据库，对当前环境中的一些关键管理功能提供信息支持。在CMDB应用场景中，这些工具相关的数据库中，其实也包含了大量关键的CI属性，这些属性可以用于识别CI之间的关系。重要的问题是，如何利用现有的投资和资源来建立一个底层共享的数据库，比如一个CMDB。&lt;/p>
&lt;p>&lt;img src="http://www.jevotrust.com/Site/graphics/cmdb_config_management.jpg" alt="">&lt;/p></description></item><item><title>CMDB配置采集工具部署之4大挑战</title><link>https://martinliu.cn/2010/04/26/cmdb-addm-tool-implement-good-practice/</link><pubDate>Mon, 26 Apr 2010 12:24:24 +0000</pubDate><guid>https://martinliu.cn/2010/04/26/cmdb-addm-tool-implement-good-practice/</guid><description>&lt;p>[singlepic id=84 w=320 h=240 mode=watermark float=left] &lt;em>&lt;strong>挑战1：沟通成本大&lt;/strong>&lt;/em>
项目的参与沟通方可能很多，最多的情况下，可能包括：网络部门、系统部门、安全部门和各个业务部门。沟通的内容主要是配置采集的实施技术方式。其中采集的安全性，风险分析是最重要的部分；在部门多的情况下，面对多种选择的时候，逐一给项目各方说清所有方案，特别是讲清楚利弊是非常耗时的。在充分沟通了所有技术可能性之后，才能做出倾向性选择。逐一这是第一轮沟通，搞清楚了倾向性而已。&lt;/p>
&lt;p>&lt;strong>&lt;em>挑战2：决策成本大&lt;/em>&lt;/strong>
特别是银行等金融企业，安全性要求特别高。安全风险方面的建议往往是最重要的，他们的建议对配置采集工具的实施具有决定性意义。在各方都充分理解了配置采集工具的架构和安全性之后，就是拍板定夺了。这种逐级的审批和决策是需要较长的周期。&lt;/p>
&lt;p>&lt;strong>&lt;em>挑战3：前导时间成本太大&lt;/em>&lt;/strong>
在前导时间里，可能还没有部署正式的ADDM采集服务器。在这个阶段里，要配置网络，让以后的采集服务器能够处于能够扫描到所有目标服务器设备。还可能需要在每台服务器上配置相关的准备工作，主要是坚持主机的操作系统的账户、采集协议和安全配置等是否满足配置采集工具的要求。这写工作是一个群众性运动，需要让所有的系统管理员配合。此项工作的设计人员设备多，最好能尽早的开始。&lt;/p></description></item><item><title>Naya-猫-周末</title><link>https://martinliu.cn/2010/04/18/naya_cat_weekend/</link><pubDate>Sun, 18 Apr 2010 06:50:02 +0000</pubDate><guid>https://martinliu.cn/2010/04/18/naya_cat_weekend/</guid><description>厦门持续的阴雨，这样的天气已经持续很久了，看来清明和谷雨前后没有什么好天气了，说实话不太适应南方这种鬼天气，比较怀念上周6北京的大晴天。今天的心情同天气一样，郁闷原因不说了。
匆忙吃过早饭，乘船来到岛上来寻找一处安静的地方，目的很简单啊，无聊出差的周末工作，还能做什么？今天感觉除了工作就是发呆了。在岛上七拐八拐的稍微溜达了一下，稍微逛了两个小店。想找一个地方能够提供舒适的桌椅、户外的环境，当然还有咖啡和午饭了。最后还是落脚在Naya，院落里有只有墙边的两个桌不淋雨，其他的都被雨水浇的稀里哗啦的。点上一杯咖啡，打开电脑开始工作吧。背后桌上的猫引来一些游客的观赏和拍照，烦！难得找个清静的地方，带上耳机，许巍熟悉的老歌旋即缭绕耳畔。趁没有人惹猫咪，我对它咪咪了几声，它没反应，我继续。过了一会我发现它走到我的长椅上，蹲在那里，正在看我，这猫看来也很无聊，需要人的陪伴，它也让我想到了某人。我摸了几下它的头，它很享受的眯上眼；这又让我想起了，小时候我样的那只大猫，比它颜色白。它坐的位置正好在我搭在椅背上的衣服后面，游客这下彻底看不到它了，我也可以安心地继续了。发文感谢一下这只猫义务陪伴我可爱的MIMI。今天主要的工作内容是CMDB解决方案需要和差距分析。</description></item><item><title>21世纪最缺的是什么？</title><link>https://martinliu.cn/2010/04/15/cmdb-project-need-talents/</link><pubDate>Thu, 15 Apr 2010 16:04:28 +0000</pubDate><guid>https://martinliu.cn/2010/04/15/cmdb-project-need-talents/</guid><description>21世纪最缺的是人才，在ITIL项目中更是重要。特别是CMDB项目，项目团队人员构成是呈金字塔型。
最顶端的人是Project Executive Board“项目执行委员会”，简称PEB，它就像是一个公司董事会；它对CMDB项目的目标、预算、工期、项目变更等负责。PEB人员数量应愈少愈好，不过下面的个角色也是缺一不可。首先，要请至少一个C level的人加入，比如数据中心的CIO。其次，关键利益干系人，它们是CMDB的价值的主要承载者，叫好和批评项目成果的都会是它们。然后是CMS/CMDB系统的负责人，它们对CMDB的规划、维护和之后的发展最重要。最后是项目实施资源的主要提供方领导，说白了他就是出人出力的部门，今后项目的执行和实施都靠他们。所以PEB的人数在4人左右。他们是相关部门的领导。我在最近的项目实施中，也遇到了几个问题，需要去找客户的老板来拍，也就是找到PEB的人决策。其实之前也听到其他同事在项目过程中，曾经感慨道“客户的领导还真辛苦，大事小情都需要替下面做决策，他们的脑袋真禁拍！”。国内的管理者的确挺辛苦的，毕竟所带领的团队都还比较的年轻，这也是国内IT管理的成熟度低的一个体现。
金字塔下面的人就是都是我们的天天加班、做牛做马的辛劳工作的实施人员了。没有规矩不能成方圆，实施团队的技术素质和构成、团队沟通等都是至关重要的。对项目的质量，项目工期都有非常重要的影响。金字塔下面的兄弟姐妹都是一条船上的人，大家要互相配合才能完成项目的各项工作；在这个过程中没有一个船老大也是不行的，船老大就是项目经理。对CMDB的项目经理的要求可不低，重要有以下几点：
Planning skills
IT service management background
Previous involvement in building a database
ITIL Manager’s certification
Ability to make decisions
Capabilities to motivate staff
Ability to blend a team
Strength of character to lead a team
Capacity to present results and status of project to sponsors and stakeholders</description></item><item><title>Alice in Wonderland</title><link>https://martinliu.cn/2010/04/04/alice-wonderland/</link><pubDate>Sun, 04 Apr 2010 14:23:17 +0000</pubDate><guid>https://martinliu.cn/2010/04/04/alice-wonderland/</guid><description>今天在厦门看了一次电影，是3D版的，总的来说影片非常好看，可谓是老少皆宜的佳品制作。可惜3D眼镜还是太沉了，脖子看完了很痛。红色皇后的真残酷，还有白色皇后的真伪善，还有很多卡通角色的搞笑，包括最后于怪龙的决斗。整个片子内容饱满而有趣，丝毫不觉得拖沓和无聊。让我又一次的回到童年的感觉。清明节前后真不是出游的好季节，厦门整日阴沉着天，只能当是休息了。</description></item><item><title>项目实施之鬼见愁@需求变更@</title><link>https://martinliu.cn/2010/04/02/project-failed-by-requirements-change/</link><pubDate>Fri, 02 Apr 2010 14:59:12 +0000</pubDate><guid>https://martinliu.cn/2010/04/02/project-failed-by-requirements-change/</guid><description>[singlepic id=34 w=320 h=240 mode=watermark float=right]不经意间听到的让我深思的一段对话。 甲：咦，这个功能是什么时候加的？ 乙：哦，我也不知道还有这个功能 丙：那是我加的 甲：需求是谁提的？ 丙：他们那天给我打了一个电话说需要这个功能
都说ITSM项目是非常难实施的项目，成功率低；特别是CMDB项目，实施难度大，失败案例比比皆是。首先我觉得ITSM项目的实施有它的特殊性，特殊在于实施顾问对客户需求的理解，在于实施顾问对ITIL最佳实践的经验，在于对产品工具的把握。其中任何一个环节拿捏不准都会到导致需求的泛滥、需求混乱、需求的飘忽不定。
可见需求管理是项目实施和执行的灵魂，失去了对灵魂的掌控，需求讨论会就将可能进入走火入魔的地步，需求各方争执不下，整个会议室炸开了锅，每个人都争抢着发言，我的脑也几乎要眩晕；我说的这一点也不夸张，没见过只能是你的幸运。
需求管理包括需求的分析和整理，应该是有层次的，在不同的层次里讲不同的语言，达成共识的讨论结果。层次可以分为这样三层
业务需求
用户需求
功能需求
所谓业务需求是说站在公司的高度，从最high level角度描述需求之所在。它的语言像是项目使命的宣言，指出为什么要做这个项目，项目的价值点落在哪里。最概况的项目范围。业务需求告诉我们：为什么会有这些需求。
用户需求是指从项目利益相关人的角度出发。逐一描述各个业务操作环节，这些业务操作由每个可独立执行的条目为单位，每个业务操作中说明业务规则、输入和结果。切忌在这一阶段就进入详细的功能界面或者功能操作上细节的任何讨论。原因很简单：我们在这里还没有进入技术实现环节，依然在以客户或者系统使用者的角度来描述它的需求。系统用户和客户是不需要理解每一个页面跳转和鼠标点击的意义的。在我的经验看来客户在这里最容易陷入技术细节讨论的泥沼，反而可能浪费需求讨论的时间，可能导致项目的延期，需求点难以确定。用户需求告诉我们：用户的需要什么。
功能需求则需要告诉我们：为了能满足用户需求，我们的系统是怎么做的。这里将用技术的语言，进入系统层面说明系统应该怎么做。功能需求最终将导出概要设计和详细设计。
业务需求的满足=用户需求的满足+功能需求的满足；用户需求是能推倒出功能需求的，用户需求和功能需求可以是一对一、一对多和多对多的关系。
以上三个需求是有层次的并与客户递进沟通的产物，既然是沟通，那么在每个层次上都伴随着矛盾、争论、妥协。在任一层次上理不出头绪时，一定要追溯到上一层，通过上一层来指导解决。但是这往往也是很难把握和执行的，最终最可能的结果是在以上三个沟通层次中都伴随着需求的变化、需求的扩大、需求的混乱。甚至于进入了测试阶段还能产生出新的需求和理解的偏差，谁人能不说“需求变更”是项目实施的鬼见愁呢？
如何解决这个“鬼见愁”？一方面需要时刻对项目预算和时间资源保持清醒的头脑，项目实施比较是那时间和金钱换需求。还有就是通过项目变更委员会来控制需求变更。</description></item><item><title>掀起CMDB的盖头来</title><link>https://martinliu.cn/2010/03/30/phase-roll-out-cmdb-implement/</link><pubDate>Tue, 30 Mar 2010 14:00:01 +0000</pubDate><guid>https://martinliu.cn/2010/03/30/phase-roll-out-cmdb-implement/</guid><description>今天是项目计划提交后的第二天，客户方项目经理对项目的推迟表示感到非常吃惊，期望能让我们给出一个合理的解释。其实这也同样的超出了我的预料，难道软件项目管理和运作都是所谓的人月神话么？
[singlepic id=22 w=320 h=240 mode=watermark float=left]在我看来CMDB项目的实施和运作有是有可能分阶段、逐步地交付项目成果的。简单的来说首先交付的当然是CMDB和配套发现工具系统本身，丑媳妇不要怕见公婆，把这个不加粉饰的原型系统拿出来，让项目各方包括最终用户来试用和评估。接着按照CMDB配置数据的来源的不同，把数据顺序的导入CMDB，并且开展数据的调和工作，完成基础数据的初始化。在基础数据的基础上，需要对CMDB服务模型加以验证，选取重点的系统来验证，让系统经理和CMDB相关用户也参与进来，用事实和数据讲话，对模型和工具做最终的确认。这个其实是一个小范围内的推广，它的经验可以直接应用于下一个阶段。接下来是对其他所有被采集对象的普遍扫描和CI数据同步，在这个阶段里还需要实现CMDB和所有ITIL流程的集成，ITIL流程是CMDB的主要消费者 ，这个集成往往是两家不同的产品，这种情况下，如果集成的效果欠佳，CMDB的实施成果也会打折扣。最后结尾的交付物可以是CMDB的审核和报表等产品。
正如ITIL的实施一样，没有两个国内公司的ITSM实施是相似的，就像国内不存在两片相同的树叶一样。那么国外的树叶又如何呢？从ITSM实施方面来看，相同的树叶在国外还是非常多的。相同的原因在于，往往用户选择了相同的产品如Remedy ITSM套件，往往由于定制化的人力成本很多用户也在尽量避免对产品的定制，如果通过配置可以实现的需求，绝不定制或者开发。我们也应该多走工业化标准生产的道路，少以中国特色为借口来实施个性化二次开发。</description></item><item><title>CMDB需求分析之最佳实践</title><link>https://martinliu.cn/2010/03/29/cmdb-requirement-analysis-practice/</link><pubDate>Mon, 29 Mar 2010 15:19:20 +0000</pubDate><guid>https://martinliu.cn/2010/03/29/cmdb-requirement-analysis-practice/</guid><description>[singlepic id=4 w=320 h=240 mode=watermark float=right]今天终于移师厦门开发中心，这意味着我所经历的史上最长CMDB需求分析基本告一阶段，也意味着CMDB的构建、集成、定制和 测试工作也徐徐拉开了大幕。
回忆前三个月所做的的需求分析工作，虽然各项调研和讨论工作进行的缓慢，不过细致的工作最终还是换回了令人满意的成果，起码我是这么认为。
需求分析的过程是对需求的重新整理、重新定义和梳理。项目的立项并不意味着项目目标树立的精准，项目范围控制的合理。实际需求可以在实施的初期阶段来重定义，从新分析，着觉得不是浪费时间。而且这一点对于中国用户至关重要。国内很多项目都是资金或者预算驱动的，先有需求，通过需求推到出项目的价值，在通过项目的投资回报率申报项目预算的过程在国内是很少见得。国内的项目往往是有多少钱需要花，那么大家在来看，如何把需求花到极致，达到最大的产出。这也是很多需求分析做的贪多、贪大、求全的根源，这样做的好处是在一个项目周期内就把需求实现的尽善尽美（愿望是这样），坏处是：可能导致厂商和服务商的服务成本超支，从而造成的项目质量降低，从用户角度来说一次性接受一大堆的系统功能，负担重，接受度低，同时客户满意度低，项目满意度差。
我认为较好的最佳实践还要抓项目的主要目标，抓需要实现的主要价值点，抓重点放弃那些可做可不做的功能。懂得放弃的人才懂得获得。把所有的功能需求做成能够分批、分期上线的成果；确保让系统用户能buy in每一个阶段性成果，不要奢望给用户带来革命性的提高，由于那样也意味着，你对他们当前工作方式的影响是巨大的，没有用户愿意接受巨变。
需求分析时，从技术上讲，对会议组织人要求很高。需要此人能非常熟悉CMDB项目实施的方法论，需要此人能够非常熟悉产品的各个功能点，需要引导有效的需求分析会议。在白板上尽可能多的画图，用Visio或者ppt等工具尽量多的讲解各种架构图、功能图、流程图具有事半功倍的效果。不管会议上您可能收到怎样的抱怨、抵制、反对；stakeholder的反馈将是你最宝贵的收获。没有互动和反馈的需求分析会是相当无聊和浪费时间的。切忌在大型的企业中，要慎重地计划每一次需求分析会，理由也很简单，企业组织越大，沟通的成本也越高。需求分析沟通的效率和成功完全取决于CMDB项目执行的方法论，取决于分析引导人的各种项目背景经验，还取决于对客户状况了解和上手的速度。</description></item><item><title>OpenNMS 1.6.1 to 1.6.10</title><link>https://martinliu.cn/2010/03/28/opennms-161-1610/</link><pubDate>Sun, 28 Mar 2010 05:37:04 +0000</pubDate><guid>https://martinliu.cn/2010/03/28/opennms-161-1610/</guid><description>[singlepic id=35 w=320 h=240 float=left]在最近的一年里，我基本上忙于CMDB的工作，没有什么业余时间来看看OpenNMS的情况。其实OpenNMS是最初引入我深入了解开源软件世界的东东。时隔1年之久，我上一篇关于opennms的文章是它是1.6.1版本，刚才查了一下，它最新的稳定版本是1.6.10.
看似它这一年里发展的比较慢，这让我感到些许地失望，大概地看一下一堆相关的release notes。功能性的变化如下：
新增和增强了一些monitor的和功能，主要有http，dns，ldap，ssh，jmx等，从最初的snmp采集，都这些采集功能；采集能力的增强是它这样的无代理监控程序永远的话题
UI的功能的增强了一些
SNMP采集仍然是他的主要能力，在这方面也有了一些改进
新增了一些网络设备品牌的支持
阀值配置也有改进
总的来说，作为一款能够采集各种snmp mib信息，能够出好看的性能报表，能够作为统一的告警事件平台，能够有简单易用的UI，OpenNMS做的显然是非常不错的。至今还行它还没有提出什么云计算相关的话题，可见他们还是一般比较稳健发展，不爱赶时髦的人。希望他们能做的更好。
对于我的这个blog来说，之前写的OpenNMS和网管相关的东西比较多，以后可能会越来越少，就此和OpenNMS做一个总结。以后本blog可能会和目前做的cmdb和itsm相关这些内容为主了。</description></item><item><title>重整旗鼓</title><link>https://martinliu.cn/2010/03/27/martinliucnblog/</link><pubDate>Sat, 27 Mar 2010 07:09:42 +0000</pubDate><guid>https://martinliu.cn/2010/03/27/martinliucnblog/</guid><description>还是不能下决心把blog彻底迁移到国内的免费blog，所以在此选择新的地方来安置它。最后决定这次把它放到美国的一个收费空间中。之前使用免费空间的时候，多是美国的免费空间。这次也走上了收费空间之路。不过昨晚和一个博友聊了一下，觉得.cn域名真的是个没有前途的域名。所以我也不知道martinliu.cn能走多远，所以我还是秉持着一颗平常心，不烦不燥，翻墙并快乐着。毕竟blog是以娱乐为主，能看到martinliu.cn在线一天，也是个乐子。</description></item><item><title>Pick a car</title><link>https://martinliu.cn/2010/03/27/pick-car/</link><pubDate>Sat, 27 Mar 2010 02:22:47 +0000</pubDate><guid>https://martinliu.cn/2010/03/27/pick-car/</guid><description>我是个慢性子，上个驾校，考个驾驶本也让我耗了将近一个初中的时间，前后历时三年，我在驾校2年有效期的最后一周内考完实际道路，本周最后一次去驾校领取到了驾驶本。
拿到驾驶本后，接下来的事情需要考虑的事情是买一辆什么样的车了。目前有三个候选出现在我的选择范围内：速腾、明锐和高尔夫6。本人不是什么车迷或者玩家，为的是能够买车作为代步工具，增加生活的方便性，和出行舒适度。
在车论坛上面也初步看了一下最终还是没有能确定究竟该选哪个车。很显然这三个车都是大众车系。下面是我对这三款车优缺点的分析。
首先是“明锐”，它是我最初了解的车型。优点为：该车的口碑较好，主要是周边有一些开明锐朋友都对它比较认可，有的是明锐的第一批车主，他们说第一批车不该做的太差否则对比起观众。我也去店里看过样车，在先入为主的心理驱使下，逐渐认为该车确实还是不错的。主要是外形稳重大气、车内空间和后掀式后备箱的空间都比较大、6档手自一体的发动机也不错，总体看来性价比非常好。缺点：全系列车没有ESP、地盘离地间隙太小。
其次是“速腾”，选择速腾的理由主要在于，该车的舒适度和空间都还不错，用户基础大。缺点：技术太老了，08年的车一直买到如今还这么火，真有点让我丈二和尚。性价比低于明锐。
最后，也是我最纠结的车型“高尔夫6”，高6一出，在各大车论坛中，高6板卡就成为热点，从大家对它的热情来看，高6有很多魅力。我比较看重的有，该车所采用的发动机和离合的技术是大众最新的技术。该车的安全性装备较前两车稍优一些。我去南三环的4s店看过，那做工真是没说的。缺点也是比较致命的：空间小，预定等车需要5~6各月。
在选车同时，最要紧的是约陪练练习，然后租车练习。总的来说对车并没有太大热情，不过能尽早的开上自己的车也是目前的头等大事。</description></item><item><title>AVATAR</title><link>https://martinliu.cn/2010/01/09/avatar/</link><pubDate>Sat, 09 Jan 2010 11:07:36 +0000</pubDate><guid>https://martinliu.cn/2010/01/09/avatar/</guid><description>观后感：开发一个世界时，切勿牺牲另一个世界，原来地球人比外星人还狠。
We don't need to sacrifice any world for anything; E.T. should watch out the Earthling !!!</description></item><item><title>图文阐释-DAS-NAS-SAN</title><link>https://martinliu.cn/2010/01/07/what-is-das-nas-san/</link><pubDate>Thu, 07 Jan 2010 05:20:06 +0000</pubDate><guid>https://martinliu.cn/2010/01/07/what-is-das-nas-san/</guid><description>转帖自学. 目前磁盘存储市场上，存储分类（如下表一）根据服务器类型分为：封闭系统的存储和开放系统的存储，封闭系统主要指大型机，AS400等服务器， 开放系统指基于包括Windows、UNIX、Linux等操作系统的服务器；开放系统的存储分为：内置存储和外挂存储；开放系统的外挂存储根据连接的方 式分为：直连式存储（Direct-Attached Storage，简称DAS）和网络化存储（Fabric-Attached Storage，简称FAS）；开放系统的网络化存储根据传输协议又分为：网络接入存储（Network-Attached Storage，简称NAS）和存储区域网络（Storage Area Network，简称SAN）。由于目前绝大部分用户采用的是开放系统，其外挂存储占有目前磁盘存储市场的70%以上，因此本文主要针对开放系统的外挂存 储进行论述说明。 表一：
[singlepic id=97 w=570 h=250 float=]
今天的存储解决方案主要为：直连式存储（DAS）、存储区域网络（SAN）、网络接入存储（NAS）。如下表二：
[singlepic id=98 w=533 h=352 float=]
开放系统的直连式存储（Direct-Attached Storage，简称DAS）已经有近四十年的使用历史，随着用户数据的不断增长，尤其是数百GB以上时，其在备份、恢复、扩展、灾备等方面的问题变得日益困扰系统管理员。 主要问题和不足为：
直连式存储依赖服务器主机操作系统进行数据的IO读写和存储维护管理，数据备份和恢复要求占用服务器主机资源（包括CPU、系统IO等），数据流需要回流 主机再到服务器连接着的磁带机（库），数据备份通常占用服务器主机资源20-30%，因此许多企业用户的日常数据备份常常在深夜或业务系统不繁忙时进行， 以免影响正常业务系统的运行。直连式存储的数据量越大，备份和恢复的时间就越长，对服务器硬件的依赖性和影响就越大。 直连式存储与服务器主机之间的连接通道通常采用SCSI连接，带宽为10MB/s、20MB/s、40MB/s、80MB/s等，随着服务器CPU的处理 能力越来越强，存储硬盘空间越来越大，阵列的硬盘数量越来越多，SCSI通道将会成为IO瓶颈；服务器主机SCSI ID资源有限，能够建立的SCSI通道连接有限。 无论直连式存储还是服务器主机的扩展，从一台服务器扩展为多台服务器组成的群集(Cluster)，或存储阵列容量的扩展，都会造成业务系统的停机，从而 给企业带来经济损失，对于银行、电信、传媒等行业7×24小时服务的关键业务系统，这是不可接受的。并且直连式存储或服务器主机的升级扩展，只能由原设备 厂商提供，往往受原设备厂商限制。 存储区域网络（Storage Area Network，简称SAN）采用光纤通道（Fibre Channel）技术，通过光纤通道交换机连接存储阵列和服务器主机，建立专用于数据存储的区域网络。SAN经过十多年历史的发展，已经相当成熟，成为业 界的事实标准（但各个厂商的光纤交换技术不完全相同，其服务器和SAN存储有兼容性的要求）。SAN娲⒉捎玫拇?宽??00MB/s、200MB/s，发 展到目前的1Gbps、2Gbps。 网络接入存储（Network-Attached Storage，简称NAS）采用网络（TCP/IP、ATM、FDDI）技术，通过网络交换机连接存储系统和服务器主机，建立专用于数据存储的存储私 网。随着IP网络技术的发展，网络接入存储（NAS）技术发生质的飞跃。早期80年代末到90年代初的10Mbps带宽，网络接入存储作为文件服务器存 储，性能受带宽影响；后来快速以太网（100Mbps）、VLAN虚网、Trunk(Ethernet Channel) 以太网通道的出现，网络接入存储的读写性能得到改善；1998年千兆以太网（1000Mbps）的出现和投入商用，为网络接入存储（NAS）带来质的变化 和市场广泛认可。由于网络接入存储采用TCP/IP网络进行数据交换，TCP/IP是IT业界的标准协议，不同厂商的产品（服务器、交换机、NAS存储） 只要满足协议标准就能够实现互连互通，无兼容性的要求；并且2002年万兆以太网（10000Mbps）的出现和投入商用，存储网络带宽将大大提高NAS 存储的性能。NAS需求旺盛已经成为事实。首先NAS几乎继承了磁盘列阵的所有优点，可以将设备通过标准的网络拓扑结构连接，摆脱了服务器和异构化构架的 桎梏；其次，在企业数据量飞速膨胀中，SAN、大型磁带库、磁盘柜等产品虽然都是很好的存储解决方案，但他们那高贵的身份和复杂的操作是资金和技术实力有 限的中小企业无论如何也不能接受的。NAS正是满足这种需求的产品，在解决足够的存储和扩展空间的同时，还提供极高的性价比。因此，无论是从适用性还是 TCO的角度来说，NAS自然成为多数企业，尤其是大中小企业的最佳选择。 NAS与SAN的分析与比较 针对I/O是整个网络系统效率低下的瓶颈问题，专家们提出了许多种解决办法。其中抓住症结并经过实践检验为最有效的办法是：将数据从通用的应用服务器中分离出来以简化存储管理。
[singlepic id=99 w=410 h=220 float=]
由图1可知原来存在的问题：每个新的应用服务器都要有它自己的存储器。这样造成数据处理复杂，随着应用服务器的不断增加，网络系统效率会急剧下降。 图 2
[singlepic id=100 w=398 h=168 float=]
从图2可看出：将存储器从应用服务器中分离出来，进行集中管理。这就是所说的存储网络（Storage Networks）。 使用存储网络的好处： 统一性：形散神不散，在逻辑上是完全一体的。 实现数据集中管理，因为它们才是企业真正的命脉。 容易扩充，即收缩性很强。 具有容错功能，整个网络无单点故障。 专家们针对这一办法又采取了两种不同的实现手段，即NAS（Network Attached Storage）网络接入存储和SAN(Storage Area Networks)存储区域网络。 NAS：用户通过TCP/IP协议访问数据，采用业界标准文件共享协议如：NFS、HTTP、CIFS实现共享。 SAN：通过专用光纤通道交换机访问数据，采用SCSI、FC-AL接口。</description></item><item><title>CMDB Value Points 价值点</title><link>https://martinliu.cn/2010/01/01/cmdb-value-points/</link><pubDate>Fri, 01 Jan 2010 05:23:06 +0000</pubDate><guid>https://martinliu.cn/2010/01/01/cmdb-value-points/</guid><description>&lt;p>&lt;a href="http://www.flickr.com/photos/waywardsheep/682513568/">&lt;img src="http://farm2.static.flickr.com/1296/682513568_4476244046.jpg" alt="The point value">&lt;/a>&lt;br />&lt;br />CMDB的价值点分为两类：硬收益和软收益。从硬收益的角度，CMDB的用户可能会让你来描述CMDB对他们的价值点。下面的几个轶事可以作为收集CMDB可能为你的企业带来价值点的几个方向：&lt;br />&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;ul>
&lt;li>&lt;strong>把IT环境的可视化带到更高程度&lt;/strong> &amp;ndash;一领先的制热和冷却系统供应商指出，他们始终无法很好的理解一个计划外停机时间对用户所造成影响。例如，当只有25个用户受到了网络中断问题的影响，IT部门必须通知用户群中的全部100个用户。这会导致一个客户满意度低的反馈。CMDB使该公司能够理解配置项之间的关系，并确切地知道在任何确定时刻什么用户会受到影响。现在用户间可信的沟通能够来自于各个IT部门，并且使IT成为业务不可分割的一部分。
&lt;br />&lt;/li>
&lt;li>&lt;strong>按业务目标来安排系统变更的优先度&lt;/strong>&amp;ndash;大型设备制造商不得不关闭了其所有的系统，后来发现不知道哪些服务器应该先启动。CMDB使公司能区分关键业务元素的优先度，确保减少计划外的停机时间，无形中降低了收入损失的风险。
&lt;br />&lt;/li>
&lt;li>&lt;strong>减少软件许可证的费用的同时确保用户和服务器能整体的满足许可证遵从性&lt;/strong> &amp;ndash; -的半导体制造商开展了一个审计，结果另他们感到震惊：该公司支持在为大量已经报废的服务器支付支持和维护费用。实际上，该公司关于报废资产的数量已经长期和实际不符了。CMDB有助于该公司发现这一问题，并重新分配预算资金，以更好地支持现有的基础设施。
&lt;br />&lt;/li>
&lt;li>&lt;strong>为加快服务器整合提供更深层次的资产和关系信息&lt;/strong> &amp;ndash; 一大型的金融服务提供商注意到，在其行业的公司通常在一个较短的时间内，会进行几次成功并购和整合。对于如何整合所有的IT部门是一个重大挑战（有时是次要的），他们往往是停留在相互隔离的工作状态下。然而，使用CMDB的公司就能够有效地集成新的收购，从而节省资金和为公司内部建立统一的IT业务形象。
&lt;br />&lt;br />IT要实现CMDB的硬收益，一般通过降低以下对象的相关成本来实现：人、第三方服务、软件、硬件和设施。这些方面的价值点可以通过财务方面的分析报表来反映出来。&lt;br />&lt;br />&lt;/li>
&lt;/ul></description></item><item><title>At end of 2009</title><link>https://martinliu.cn/2009/12/31/at-end-of-2009/</link><pubDate>Thu, 31 Dec 2009 09:26:10 +0000</pubDate><guid>https://martinliu.cn/2009/12/31/at-end-of-2009/</guid><description>Martin Liu&amp;rsquo;s blog move to 72pines. I will see how long I could still here. Let&amp;rsquo;s say 6 months.
[fergcorp_cdt_single date=&amp;ldquo;1 June 2010&amp;rdquo;]
To do list
[add] I&amp;rsquo;d like to blog more about C-Bank CMDB project implement.
[add] I hope I could have sometime for playing with open source software, like opennms, zenoss, otrs, etc&amp;hellip;
[del] All of duplicate blog post will be deleted from some of my old blog site, including blogspot, chinaunix, msn space etc&amp;hellip;</description></item><item><title>垃圾网站的殉葬品-个人博客</title><link>https://martinliu.cn/2009/12/30/e59e83e59cbee7bd91e7ab99e79a84e6ae89e891ace59381-e4b8aae4babae58d9ae5aea2/</link><pubDate>Wed, 30 Dec 2009 15:41:53 +0000</pubDate><guid>https://martinliu.cn/2009/12/30/e59e83e59cbee7bd91e7ab99e79a84e6ae89e891ace59381-e4b8aae4babae58d9ae5aea2/</guid><description>如果拥有个人博客，并且拥有个人域名，正在租用一个小服务商的虚拟机，那么你的网站可能已经无法访问，由于域名为注册被封，或者由于服务商的机器干 脆被连窝端而无法访问。如果你是我的blog的读者的话，我想你已经发现，我的blog已经无法访问两天了。我已经可以想象今天的国内互联网上，国内的自 由博主们，已经是哀鸿遍地了！！！
更有甚者成，我国之互联网正进入全球最大的局域网时代。对垃圾网站的严打可以，但是打到这个程度，究竟打击了谁，我相信那些害群只马一定会转移到国 外，继续他们的活动。所以，倒霉的还是很多自由博主，还是那些提供小型博客服务的小服务商。我想新浪、搜狐、百度他们的blog的注册量这几天肯定在节节 攀升吧~那就透着乐吧，我想他们肯定在唱“我们的生活充满了阳光~~~~”国内博客的行业亟待实名制管理，自由博主们也需要阳光。我的博客还无法还原两个 月的内容丢失，阴霾笼罩着我。</description></item><item><title>十月围城</title><link>https://martinliu.cn/2009/12/24/e58d81e69c88e59bb4e59f8e/</link><pubDate>Thu, 24 Dec 2009 13:49:39 +0000</pubDate><guid>https://martinliu.cn/2009/12/24/e58d81e69c88e59bb4e59f8e/</guid><description>港片也能这么拍的如此严肃，港人爱国，武打片打到这么痛楚，普通人普通情感才感人，师徒，父子，领袖和革命党，朋友，夫妻，宏大的历史背景下，平常市井生活里，对最关心的人，关心到底有多少，想爱趁早多一点！</description></item><item><title>老美真的很扯，一个职位的帖子被顶了22次</title><link>https://martinliu.cn/2009/12/24/is-that-a-joke-of-remedy-developer/</link><pubDate>Thu, 24 Dec 2009 13:35:26 +0000</pubDate><guid>https://martinliu.cn/2009/12/24/is-that-a-joke-of-remedy-developer/</guid><description>Remedy的开发人员或许熟悉这个邮件列表，ARSlist.org；如果没注册的话，一定需要注册一下啊，不为别的，学学英语，看看其他人都聊什么，有什么问题总是不错的。下面这个段子就是最近我看过的最扯的讨论。关键词：Remedy, 职位， OH州，辛辛那提，Developer，伊拉克，ARS 6.3, ARS 7.5, ITSM 7.5, 巴格达， AK 47，武器，活动链，过滤器，阿富汗，薪水，简历，顾问&amp;hellip;&amp;hellip;. engoy！！！！
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
Job: Permanent - Lead Remedy Developer - Cincinnati, OH
Dear List,
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;1&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
Merry Christmas!
Title: Lead Remedy Developer
Location: Cincinnati, OH
Duration: Permanent (Relocation is offered)
Start Date: 2-4 Weeks
Must haves:
- 5+ Years experience with Remedy
- Experience with 7.x
- Stable Resume (No Consultant Resume’s) (Client does not like job hoppers and will reject)</description></item><item><title>资产CI的一生</title><link>https://martinliu.cn/2009/12/13/service-asset-ci-life-cycle/</link><pubDate>Sun, 13 Dec 2009 07:45:00 +0000</pubDate><guid>https://martinliu.cn/2009/12/13/service-asset-ci-life-cycle/</guid><description>在ITIL v3以后，配置管理进化为“服务资产和配置管理SACM”，换句话说，资产和配置管理不分家。两个流程应该是融合的。从微观上看资产管理设计到CI的所有生命周期状态，而这个服务资产在CMDB中出现的状态为整个生命周期中的一部分。
最好能通过资产管理为统一入口，来完成对CMDB中资产的生命周期管理。例如：一台服务器在到货以后，完成资产入库后，就应该在CMDB中自动创建CI，在上架部署了软件后，有配置资产自动采集工具，采集回详细配置信息后，资产状态就自动变为“部署”，当在运行维护中服务器宕机或者维护时，在资产管理中也能看到更新的信息。下面是建议的服务资产的生命周期状态:
编号
状态名称
状态描述
1
到货
表示为CI的物品在采购以后，被相关部门签收。
2
组装
设备的组件在被组装的过程中
3
维护
该设备处于宕机后的维护状态
4
宕机
该设备处于宕机状态，还未对其进行维护
5
终止
不在处于被部署的状态
6
转移
该设备正在被转移到其它的地点或者机房途中
7
删除
配置项被标记为删除状态
8
库存
设备处于库存中，还没有被部署
9
借出</description></item><item><title>Remedy ITSM 7.6 installation Tips</title><link>https://martinliu.cn/2009/11/28/remedy-itsm-76-installation-tips/</link><pubDate>Sat, 28 Nov 2009 09:29:04 +0000</pubDate><guid>https://martinliu.cn/2009/11/28/remedy-itsm-76-installation-tips/</guid><description>自从7.6发布和以后一直没有时间安装，通过最近的几次安装，积累了一些经验，供大家参考。在安装开始之前请一定查看ARS_7500_Comp_Matrixv1001.pdf文档，保证操作系统、数据库、中间件和JDK的版本都符合要求。如果是安装生产系统的话，建议把数据库和应用服务器分开，硬件配置也一定参考Remedy ITSM安装手册中的建议硬件配置要求。
最近在Linux的虚拟机上做了一次安装，相关细节如下:
Suse Linux Enterprise server 10 sp2 64 bit
Oracle 10G 64bit (10201_database_linux_x86_64.cpio.gz)
JDK 1.6(jdk-6u6-linux-i586.bin)
在Suse Linux上安装Oracle还是比较容易的，可以参考这个安装手册进行，下载。数据库安最好按照成utf8字符集，如下图所示：
Remedy ITSM套件的安装分为三个步骤：1）ARS 7.5 SP3 的安装；2）Atrium CMDB7.6安装；3）ITSM 7.6安装；其中第一步是最重要的，第二步骤如果安装产品目录数据的话时间花费比正常多一点。Remedy ARS 7.5是最新的补丁包，它修复了sp2的很多bug；是Remedy ITSM 7.6安装的必须版本。在安装ARS的时候需要准确的导出相关的环境变量，如果环境变量没有或者不够的话，安装程序则无法正确地连接数据库，下面的例子可以参考一下。
每一步安装完成之后都需要详细查看相关的日志，确保每一步都安装完全正确。在安装完ARS之后一定要为服务器添加所有相关License。</description></item><item><title>2012</title><link>https://martinliu.cn/2009/11/23/2012/</link><pubDate>Mon, 23 Nov 2009 04:54:19 +0000</pubDate><guid>https://martinliu.cn/2009/11/23/2012/</guid><description>妹妹问：那么2012年的奥运会还办不办了？无语&amp;hellip;..这个电影中有很多情节与中国相关，特效不错，这可能是吸引人去电影院看的原因吧。
这个电影倒是让人对玛雅文化产生了兴趣，有空可以看看。</description></item><item><title>What's Google Chrome OS</title><link>https://martinliu.cn/2009/11/23/whats-google-chrome-os/</link><pubDate>Mon, 23 Nov 2009 04:38:51 +0000</pubDate><guid>https://martinliu.cn/2009/11/23/whats-google-chrome-os/</guid><description>看完这个视频之后，还是没搞清楚：它到是一个快速的浏览器，还是一个快速启动的OS加浏览器，如果它仍然需要OS的话，那么它不过是一个Redesigned的OS+操作系统。说白了就是瘦客户端加肥浏览器的组合吧！
您用Google的浏览器么？我用了一次就删除了，至今没有尝试装Google的操作系统。</description></item><item><title>CMDB选型解密</title><link>https://martinliu.cn/2009/11/19/how-to-select-a-cmdb/</link><pubDate>Thu, 19 Nov 2009 16:32:22 +0000</pubDate><guid>https://martinliu.cn/2009/11/19/how-to-select-a-cmdb/</guid><description>自打承接了《Step by Step Guide to Building a CMDB (Updated for ITIL V3)》的翻译工作之后，由于平时工作太忙，翻译工程只能在业余时间完成；现在渐渐感到了此项工作的压力，每每想到读者对英文翻译版本读物的高期望和要求时，就愈加感到此项工作责任之重。不过本书对我来说还是一剂很好的补品，对我最近的ITSM项目都有直接的借鉴和指导作用。
说来此书有很多实用且精彩之处，相信读了英文原版的人更能有所体会。我忍不住想把其中的部分内容提前与你们探讨，这里想与你们分享如下两个内容。
上图还给所有CMDB用户一个清晰地CMDB功能点考察点，CMDB作为业务服务管理的核心，各个厂商其实并没有达成解决方案功能的标准和共识。通常情况下厂商提供的CMDB产品的发展和起源有以下几种情况：1）按照ITIL中对CMDB的需求和标准从无到有开发的标准CMDB产品；2）伴随变更流程或者业务影响管理而开发的CMDB功能模块；3）伴随配置自动化发现工具而开发的相应CMDB功能模块；4）应资产管理或者监控工具扩展而生的CMDB功能产品。用户在挑选CMDB产品的时候一定要明确CMDB的核心功能，除了以上功能外，其他的附加功能可能是nice to have的功能，而非必须。本图位于原版书的134页，如果您对我的翻译有建议请留言，多谢！
上表为评估一个CMDB产品厂商的综合打分评价表样例。在选择并且评测一个CMDB厂商时，需要仔细考察的产品功能共有8点。用户需要注意的是一定要搞清楚其中的每一个功能是否是由厂商的CMDB产品的相关模块所提供的，如果不是的话需要搞清楚，每个功能是否是CMDB的外围或者其他产品模块，或者二次开发实现的。如果是这样的话，这种解决方案可能不是一套集成统一的解决方案，可能出现其他附加非CMDB产品的采购，可能在实施阶段付出不必要的集成和开发费用。虽然这些潜在因素在采购和实施阶段可能是隐形出现的。征集上表中相关术语的中文翻译：Weighted ，Weighted Rating Score，Total Weighted Score。有好的建议请留言。本图位于原版书籍的141页。</description></item><item><title>下雪了</title><link>https://martinliu.cn/2009/11/10/e4b88be99baae4ba86/</link><pubDate>Tue, 10 Nov 2009 06:42:20 +0000</pubDate><guid>https://martinliu.cn/2009/11/10/e4b88be99baae4ba86/</guid><description>二零零九年的第二场雪，比以往的都来的大一点。
昨天晚上的大雪让我感到惊喜，今天早晨空气非常好，不过地铁里的人很多。</description></item><item><title>Knowing</title><link>https://martinliu.cn/2009/11/09/knowing/</link><pubDate>Mon, 09 Nov 2009 02:52:10 +0000</pubDate><guid>https://martinliu.cn/2009/11/09/knowing/</guid><description>这个电影的官方网站是很炫的，但是看后感觉真的不怎么样。http://www.knowing-themovie.com/ 看是感觉有点悬疑，接着又一点点的惊悚，然后算是带点科幻吧，地球被一个太阳的耀斑给毁灭。俩小屁孩被什么人/外星人接到了另外的一个星球上。难道这就是传说中的亚当与夏娃么？</description></item><item><title>汝亦知射乎</title><link>https://martinliu.cn/2009/11/03/how-to-get-smart/</link><pubDate>Tue, 03 Nov 2009 02:25:50 +0000</pubDate><guid>https://martinliu.cn/2009/11/03/how-to-get-smart/</guid><description>康肃问曰：“汝亦知射乎？吾射不亦精乎？”翁曰：“无他，但手熟尔。”康肃忿然曰：“尔安敢轻吾射！”翁曰：“以我酌油知之。”乃取一葫芦置于地，以钱覆其口，徐以杓酌油沥之，自钱孔入，而钱不湿。因曰：“我亦无他，惟手熟尔。”康肃笑而遣之。
ZT&amp;ndash; 欧阳修《卖油翁》
MY VIEWPOINT：IT管理的好坏与否，不是依靠个体的技术能力和熟悉程度。铜钱上的孔，是衡量能力和筛选智慧的重要工具。智慧获取数据抽取-&amp;gt;分析-&amp;gt;转化的能力和工具。这三个过程中越往后对工具的依赖程度越低。
如图所示，“数据包”是从一个层次传递到下一个层次。“智慧”层次具有作出明智决策必需的所有组成部分 —
数据、信息和知识。当然，可以在任意层次作出决策，这取决于现有的结果和条件。下面的例子用于说明在各个层次进
行决策的过程：
**数据层：**服务台经理发现有二十位客户等待打入电话。他可能会决定临时增加一线客户服务人员的数量，这是根据
一条数据制定的决策。
信息层：在另一类似的情况下，有 20 位客户等待打入电话，但这次经理掌握了更多的数据。他知道有一台目前已
停机但马上将恢复正常的服务器。在这种情况下，经理可能决定稍后再增加一线客户服务人员的数量，因为他（或她）
怀疑这两个问题是相关的。在拥有多个数据源的情况下，经理掌握的信息更多，并将根据可用信息作出决策。
**知识层：**服务台经理发现等待打入电话的客户不断增多，而且某台服务器即将接近满负荷运转。因为她拥有用以
说明如何应对此情况的信息，所以可以立即采取适当的行动隔离并解决问题。这个决策是基于知识作出的。
**智慧层：**IT 执行官正在温习上个月的知识，并发现某一供应商提供的几台服务器出了问题。他们将决定要求供应
商评估其所有服务器，以确定其他服务器是否会出现同样的问题。这个决策是基于智慧作出的。
尽管这些例子可能过于简单，但它们可作为理解“智慧分层体系”的参考。
来源：行业外网</description></item><item><title>选书名</title><link>https://martinliu.cn/2009/10/29/pick-a-book-name-for-step-by-step-guide-to-building-a-cmdb/</link><pubDate>Thu, 29 Oct 2009 01:48:58 +0000</pubDate><guid>https://martinliu.cn/2009/10/29/pick-a-book-name-for-step-by-step-guide-to-building-a-cmdb/</guid><description>好消息《Step by Step Guide to Building a CMDB (Updated for ITIL V3)》即将翻译成中文出版。市场里ITIL的书越来越多，但是讲CMDB的书却一直很少，能讲解清楚CMDB建设过程的的书就更少。可是国内ITIL用户CMDB建设之瓶颈却越来越明显，我们希望有一本好的书作为这项重要工作的参考指南。
给此书起一个好的名字是头等大事，目前能想到的书名如下：
Step by Step Guide to Building a CMDB 中文书名？(polls)
寻求前100名投票者，请对以上书名投票，并评论；如果您有更好的书名，欢迎推荐；请在下面留言，请正确填写邮箱，您推荐书名一旦被选用必有感谢送上。</description></item><item><title>小人物大英雄</title><link>https://martinliu.cn/2009/10/22/small-person-big-hero/</link><pubDate>Thu, 22 Oct 2009 14:12:47 +0000</pubDate><guid>https://martinliu.cn/2009/10/22/small-person-big-hero/</guid><description>又一个小人物大英雄的美国片。10-1前后红色电影充斥所有影院，这是近期看过的最好看的一部电影了。比较好的刻画了一个人物的多面性。影片中描写了很多耐人寻味的小概率事件。这个情节比较紧凑，高潮出现在主角被迫送钱。故事结尾他乘坐地铁，带着一加仑牛奶平安回家，看似一个小市民平常的一天。
电影海报如下图所示。</description></item><item><title>何谓云？</title><link>https://martinliu.cn/2009/10/21/what-is-cloud-computing/</link><pubDate>Wed, 21 Oct 2009 04:36:11 +0000</pubDate><guid>https://martinliu.cn/2009/10/21/what-is-cloud-computing/</guid><description>下面是两个Youtube上的视频，短短5分钟的视频就把云计算的相关核心概念解释的很清楚。
好像国内吧Youtube给屏蔽了，上面的视频可能看不到，Google真的应该和中国政府把关系搞好，哎~~</description></item><item><title>DELL如何管理IT？</title><link>https://martinliu.cn/2009/10/20/how-dell-does-it/</link><pubDate>Tue, 20 Oct 2009 03:17:01 +0000</pubDate><guid>https://martinliu.cn/2009/10/20/how-dell-does-it/</guid><description>Dell is a big company, if you wants to know how DELL does IT management with BMC, please check out this vide form Dell website.
DELL是一个家喻户晓的公司，它是如何做IT管理的呢？请查看这段来自DELL网站的视频。视频中谈到DELL采用的是全套ITSM套件，提到很多的是相关流程是如何使用CMDB的配置信息的，从一个侧面我们可以看到配置管理的重要性。CMDB可以看着成熟客户的标志。</description></item><item><title>手把手教您构建CMDB/CMS</title><link>https://martinliu.cn/2009/10/17/step-by-step-guide-to-building-a-cmdb/</link><pubDate>Sat, 17 Oct 2009 09:37:08 +0000</pubDate><guid>https://martinliu.cn/2009/10/17/step-by-step-guide-to-building-a-cmdb/</guid><description>If you have no idea about how to build a CMDB, you should check out this document. It come from http://www.bmc.com/products/product-listing/53556216-141391-2117.html
Download it: Step by Step Guide to Building a CMDB (Updated for ITIL V3) (pdf)
该《手把手CMDB/CMS构建指导手册》包括了配置管理数据库/系统建设的所有相关流程、技术和指导性建议。如果你有CMDB的建设意向，该手册非常值得仔细阅读。
欢迎留下一个反馈，投票或者留言都行。
[poll id=&amp;ldquo;8&amp;rdquo;]</description></item><item><title>CMDB中存什么？</title><link>https://martinliu.cn/2009/10/05/what-does-cmdb-store/</link><pubDate>Mon, 05 Oct 2009 15:21:24 +0000</pubDate><guid>https://martinliu.cn/2009/10/05/what-does-cmdb-store/</guid><description>[caption id=&amp;quot;&amp;quot; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;406&amp;rdquo; caption=&amp;ldquo;dmtf.org&amp;rdquo;][/caption]
当然是配置项和它们之间的关系，即：CI 和 Relationship。 那么如何规划那些类型的CI和Relationship需要保存到CMDB中呢？可以参考的数据模型是DMTF的通用信息模型，它是以面相对象的方式来描述各类CI和关系。它是一个工具用来帮你对环境中的各种物理和逻辑的CI和关系进行分类，参考这个模型选择一些有用的类（广度），然后在参考它对每个类属性的描述（粒度）。这些类的选择只是一个初步的研究，每个CMDB厂商和工具对其实施和参考的力度都不同，也需要看您具体实施的是什么工具。例如：你需要描述银行基金业务系统，你可能选择的CI类包括：客户群、业务流程、业务活动、业务服务、IT服务、应用系统、应用、软件服务器、服务器、网络、存储等；关系包括：组件、依赖和影响。CI类和关系的选择也基本上遵循够用就好的原则；而且每个类对应的CI实例都需要有人负责管理维护，需遵循，谁负责、谁维护的原则保障其属性的精确性。对于整个CMDB来说如果存在没有Onwer的CI或者关系，如果它是由自动化配置发现工具来更新的；那么它可以存在，如果不是的话，它可能根本就不该存在。所以CMDB中保存的数据不是越多，越细越好；而是够用就好，能保证更新就好。由于数据根本就不是免费的，即使国内的人力成本低，也不应该雇用一帮专职更新CMDB的人。 综上所述：我们说明了CMDB中数据选取和存放的最基本原则和方法，在CMDB产品选型过程中需要着重考察产品的数据模型本身和其管理的能力，还包括其CI和关系的扩展和定制能力；包括数据类型的支持和界面定制的程度。那么CMDB中的CI和关系有该如何展现呢？这是CMDB系统的另外一个功能：可视化。下面是一个CI和关系展示的实例供参考：
[http://media-001.yo2cdn.com/wp-content/uploads/266/26670/2009/10/s1-4-blog.swf#swf&amp;amp;width=320&amp;amp;height=320]
全屏查看或者下载Flash文件
第一代的配置展示方式是，纯数据表格方式。第二代具有一种固定格式的图形展示方式，除了那几张视图外，别的需要单独开发。下一代的具有各种视图定制功能，并且支持关系和ci的过滤等等。</description></item><item><title>博客再次搬家回国</title><link>https://martinliu.cn/2009/10/05/bo-ke-zai-ci-ban-jia-hui-guo/</link><pubDate>Mon, 05 Oct 2009 09:16:20 +0000</pubDate><guid>https://martinliu.cn/2009/10/05/bo-ke-zai-ci-ban-jia-hui-guo/</guid><description>趁着国庆长假，我有空吧Blog从国外的免费虚拟主机搬回国，搬到了yo2.cn。原因意外，不知道为啥，访问martinliu.cn首页时，总是被重定向到myfacebook.net上，访问其它二级页面没有问题。这个问题让我着实抓狂了好几周，国庆前的几周一直在上海出差，比较忙，基本上9月九荒废了，别说解决这个问题，就连一篇blog也没有时间写啊！想到现在还是没有想清楚，被重定向的原因到底为何？可能是被黑了，可能是被强制添加了广告。
不过这个事件也不全是我搬回国的原因，其它原因：
国内读者居多，从google的统计上可以看出，本blog的主要读者都在国内。 域名已经备案了，上次转到国外的原因是域名未备案 实在懒得自己维护插件和blog本身，我已经把blog模版恢复到了默认模版，插件已经减少到最少，这样blog也可以快一点 实在没有精力维护虚机和域名绑定之类的事，WordPress对我来说可能只剩下一种功能就是Publish，呵呵其它的工作都交给服务商吧。 目前用的是DNSPad的DNS服务，yo2的WordPress服务，他们两个好像都与针对国内电信、网通和教育网的加速功能。那么目前您觉得网站速度如何了呢？方便的话给我一个反馈哦。
[poll id=&amp;ldquo;7&amp;rdquo;]</description></item><item><title>国庆掠影</title><link>https://martinliu.cn/2009/10/05/guo-qing-l/</link><pubDate>Mon, 05 Oct 2009 04:29:44 +0000</pubDate><guid>https://martinliu.cn/2009/10/05/guo-qing-l/</guid><description>[gallery link=&amp;ldquo;file&amp;rdquo; columns=&amp;ldquo;3&amp;rdquo; orderby=&amp;ldquo;ID&amp;rdquo;]
图片说明：
十月一日，早晨在阳台上拍摄的空军演习，有8架战斗机 十月一日，早晨在阳台上拍摄的空军演习，有4架战斗机 十月一日，晚上到北京中轴线南端的“永定门”，准备观看天安门的礼花 图片4-6，十月一日,在天桥附近看到的天安门广场的礼花，很壮观 由于照相机有限，拍的不是很清楚，全当留个纪念吧。</description></item><item><title>MartinMarks for 29th August</title><link>https://martinliu.cn/2009/08/29/martinmarks-for-29th-august/</link><pubDate>Sat, 29 Aug 2009 16:27:38 +0000</pubDate><guid>https://martinliu.cn/2009/08/29/martinmarks-for-29th-august/</guid><description>New IT Job: CMDB Manager
从此IT部门有多了一个职位CMDB经理，不过某人的工作量加倍了也没准哈哈，从这个文章中可以看出这并不是一个可有可无的职位，而且CMDB的建设和推广，以及管理和其他的ITIL流程没有区别，需要结合技术、流程和人老三样，而且要再次改造人们对于配置管理的行为方式和文化了。
Role Overview: CMDB Manager
CMDB经理负责管理和维护您的CI，工作内容都有了，CIT/CTO招不招这个人由您。
CMDBs reduce costs, automate tasks
CMDB更多的不是一种技术，更多的是流程，联邦技术让您从一个集中的CMDB来访问这个多元化多变的世界。CMDB信息需要多种来源、产品和工具。
Top 10 reasons NOT to implement CMDB
不去实施CMDB的10个理由
Top Ten Reasons to Implement a CMDB
实施CMDB的10个理由
The federated CMDB: Getting past the hype to the good stuff
cmdbf标准的实施在各家产品中尚处于开始阶段，是否大家都会照着做呢。联邦让所有的配置数据更易访问。
Logo Mark</description></item><item><title>IT服务管理考核向左走向右走: CSF OR KPI?</title><link>https://martinliu.cn/2009/08/29/csf-or-kpi-matrix-itsm/</link><pubDate>Sat, 29 Aug 2009 14:18:33 +0000</pubDate><guid>https://martinliu.cn/2009/08/29/csf-or-kpi-matrix-itsm/</guid><description>最近做的一个项目中需要帮用户设计一个CMDB的成熟度模型，能够从该模型中持续的检查CMDB的建设程度。所以我研究注意了一下的一些书籍，考虑有机会可以买回来研究一下：
IT服务管理的持续改进需要一定的手段实现，这是ITIL V3中的一个重要流程。CSF是关键成功因素，KPI是关键性能指标，这些都是metrics管理过程中需要关注的手段。每个流程都可以找到相应的CSF和KPI。CSF算是V3的新生事物，我想它可能会对IT管理质量的衡量和改进带来新的方式。
别的不说，我只想说说KPI管理方法可能带来的坏处。举个例子：有个公司想通过“事件单数”来考核服务台一线人员的工作。结果当他们在执行了一段时间后，他们发现服务台中有大量重复的事件单，实际上服务台对每个收到的电话都新建一个事件单，并没有做重复事件匹配查找的工作。进一步的也影响了通过重复事件来做进一步的问题管理。
从考核管理的角度看，ITSM的考核指标和体系如何建立的合理，如何才能建立的正确的设计和实施的确是一件大事。否则会有什么后果，我们可以想想三鹿毒奶粉事件，奶粉的蛋白质含量是奶粉质量的重要指标KPI，营养健康是奶粉的终极CSF目标。三鹿真的给了我们一个血的教训啊，想让你的IT服务质量如何呢？可以想想三鹿。不过还是需要多多学习所有可能的CSF和KPI，从何设计出确实可行的管理方式。
Implementing Metrics for IT Service Management (ITSM)
ISBN: 9789087531140
Author: David Smith, Micromation Canada
Metrics for IT Service Management (Paperback)
by Peter Brooks (Author)
Measuring ITIL: Measuring, Reporting and Modeling
** ** - the IT Service Management Metrics That Matter Most to IT Senior Executives (Paperback)
by Randy A. Steinberg
**Step-by-Step Guide to Building a CMDB **
by BMC Software; Inc (Author)
后来发现了这个ITSM metrics modeling tools ，觉得这个真的不错。可行性很高。</description></item><item><title>今年5.1去成都休假</title><link>https://martinliu.cn/2009/08/07/51-to-chengdu/</link><pubDate>Fri, 07 Aug 2009 03:50:03 +0000</pubDate><guid>https://martinliu.cn/2009/08/07/51-to-chengdu/</guid><description>吃成都小吃，看国宝熊猫，成都茶馆喝茶，果然是去了就不想走的地方。</description></item><item><title>我们新疆好地方，最美是喀纳斯</title><link>https://martinliu.cn/2009/08/07/xinjiang-is-good-place-kanas-is-best/</link><pubDate>Fri, 07 Aug 2009 02:18:02 +0000</pubDate><guid>https://martinliu.cn/2009/08/07/xinjiang-is-good-place-kanas-is-best/</guid><description>新疆之行照片集，路径北京 乌鲁木齐 喀什 乌鲁木齐 布尔津 喀纳斯 布尔津 乌鲁木齐 北京
http://picasaweb.google.com/liuzh66/Xinjiang
看不到的访问这个链接：http://www.flickr.com/photos/41222865@N03/</description></item><item><title>关于ICP备案申请审核通过的通知</title><link>https://martinliu.cn/2009/08/01/got-martinli-dot-cn-icp-registered/</link><pubDate>Sat, 01 Aug 2009 14:33:32 +0000</pubDate><guid>https://martinliu.cn/2009/08/01/got-martinli-dot-cn-icp-registered/</guid><description>尊敬的用户[]：您的ICP备案申请已通过审核,备案/许可证编号为: 京ICP备09073554号 ，审核通过日期：2009-07-28。
[caption id=&amp;ldquo;attachment_491&amp;rdquo; align=&amp;ldquo;alignleft&amp;rdquo; width=&amp;ldquo;150&amp;rdquo; caption=&amp;ldquo;welcom to martinliu.cn thanks!&amp;quot;][/caption]
That is what I was dreaming about for almost half year. You can not even understand my blog had been closed, because it took me 4 times to got my doman name registered. Finally I did it by myself. Cheers! I&amp;rsquo;d like to put it on page foot.</description></item><item><title>BMC and Cloud computing</title><link>https://martinliu.cn/2009/07/16/bmc-and-cloud-computing/</link><pubDate>Thu, 16 Jul 2009 13:34:31 +0000</pubDate><guid>https://martinliu.cn/2009/07/16/bmc-and-cloud-computing/</guid><description>July 15, 2009 – BMC Software has announced that it is leveraging Amazon Web Services to provide a single, unified management solution meant to give customers control over existing internal IT assets and external cloud infrastructures, according to a company release.
http://www.information-management.com/news/amazon_bmc_software_cloud_computing-10015748-1.html
BTW: it seems the IT management is as important as infrastructure.</description></item><item><title>CMS/CMDB 配置管理系统和发现工具</title><link>https://martinliu.cn/2009/07/15/cms-cmdb-and-discovery-tools/</link><pubDate>Wed, 15 Jul 2009 03:45:03 +0000</pubDate><guid>https://martinliu.cn/2009/07/15/cms-cmdb-and-discovery-tools/</guid><description>最近的一些CMDB项目和测试中都用到和测到了自动发现工具，很多用户对此的理解和看法还不是很到位。**首先：“自动化配置和关系发现工具是什么？” **
它是CMS工具集当中的数据采集工具。 从产品名称上看，往外都带DDM，它是 Discovery Dependency Mapping的缩写。意思就是帮你发现CI和CI之间关系的工具。很多用户的各种IT管理工具都可以自动发现网络、服务器和应用的配置项以及之间的关系，那么为什么还需要在购买一个新的发现工具呢？其实发现工具解决的真实发现工具不统一和发现数据不统一的问题，更重要的是它可以发现配置项之间的依赖和影响关系。对于一个数据中心来说，变更会经常发生，那么一套应用运行了一段时间之后，你很难准确的说出它都连接了那些其他相关的设备，很难理解它当前的部署状态。我们希望发现工具能帮我们更好的洞察当前IT基础架构的构成，应用对设备的依赖，底层IT服务对业务的影响。
**其次：“它是如何工作的？” **
它的工作原理和其他所有的管理软件也没什么太大的差异。基本上讲有两种技术：无代理发现和有代理发现；三种产品形式：纯粹无代理扫描方式、纯有代理方式和混合方式。无代理采集必须依赖被采集设备的开放协议，常用的采集协议有：snmp,wmi,telnet,ssh,jmx,http等。往往需要在被采集设备上配合一定的账号和权限。采集动作往往是定时、周期性或者触发式执行。扫描结果返回一个数据库中，准备向CMDB同步。
再次：“它是CMDB必须的工具么？”
对于下面几种情况我个人认为它是一个必的工具：1）数据中心用户，服务器和应用成百上千套，变更每周都会进行，新业务系统增长快。CMDB需要使用它来自动更新配置项信息。2）应用多是多层的复杂应用，CI之间依赖关系复杂，物理连接图已经不足够用来做影响分析，CMDB需要它来自动化维护配置自己的关联关系，通过它可以减少进70%的手工工作量。从国外的一些项目经验上来看，50%的CMDB用户并没有使用配置自动发现工具，他们使用的配置数据多是监控管理系统中已有的，CI间的关系靠手工维护。
最后：“它是如何与CMDB同步的？”
有些厂商的CMDB是从发现工具上起家的，所以他们本来就使用的一个库，没有同步问题。有些厂商的发现工具是整合的其他产品工具或者收购的，他们自己的同步就需要一定得数据模型了。通过数据模型来解决数据字段映射的关系，一般来讲CMDB中会有数据模型CDM，发现工具同步的时候就以该模型为准，把CI和关系经过一定的过滤条件同步到CMDB中。不同厂商的发现工具和CMDB如果需要同步的话，需要满足起码这样几点需要：CMDB必须有标准的数据模型来做数据映射；需要有某种数据集成和同步的工具来连接两个数据库；CMDB中需要具有强大的数据调和功能来处理发现工具带来的数据。</description></item><item><title>Cloud Computing Infrastructure and Architecture Guide-From SUN</title><link>https://martinliu.cn/2009/07/14/cloud-computing-infrastructure-and-architecture-guide-from-sun/</link><pubDate>Tue, 14 Jul 2009 05:34:26 +0000</pubDate><guid>https://martinliu.cn/2009/07/14/cloud-computing-infrastructure-and-architecture-guide-from-sun/</guid><description>** » 下载本指南** （中文版）
《云计算基础设施和体系架构指南》
** » 下载本指南** （英文版）
《Cloud Computing Infrastructure and Architecture Guide》
» 更多 Sun 白皮书、指南、蓝图 (英文版)</description></item><item><title>martinliu dot cn is back</title><link>https://martinliu.cn/2009/07/13/martinliu-dot-cn-is-back/</link><pubDate>Mon, 13 Jul 2009 05:13:19 +0000</pubDate><guid>https://martinliu.cn/2009/07/13/martinliu-dot-cn-is-back/</guid><description>After 2 crazy months, I finished the longest PoC. This is for CCB CMDB testing. We are fightting with CA,HP,IBM and Utrual Power. It has 3 rounds, took me almost 3 month to finish.
Today, I finally got have a chance to do something for my blog. I finally move to a new hosting and attached martinliu.cn domain name on it. Wordpress was updated to 2.8.1 with new theme. I love this theme for three reasons: 1)自动全屏显示； 2)大气；3)自带弹性的调整options。Now the only concern is MySQL space is only 50 MB.</description></item><item><title>MartinMark for July 7th</title><link>https://martinliu.cn/2009/07/07/martinmark-for-july-7th/</link><pubDate>Tue, 07 Jul 2009 01:51:35 +0000</pubDate><guid>https://martinliu.cn/2009/07/07/martinmark-for-july-7th/</guid><description>The Apache Tomcat 5.5 Servlet/JSP Container - Load Balancer HOW-TO [原创] Apache + Tomcat + Load Balancing - ChinaUnix.net Clustering and Load Balancing in Tomcat 5, Part 1 - O&amp;rsquo;Reilly Media How to test web load balance Fronting Tomcat with Apache or IIS - Best practices The Apache Tomcat Connector - Webserver HowTo IIS HowTo I will try to implement this load balancer (Tomcat and Apache/IIS)</description></item><item><title>Transformers-Revenge of the Fall-Theme Music</title><link>https://martinliu.cn/2009/07/06/transformers-revenge-of-the-fall-theme-music/</link><pubDate>Mon, 06 Jul 2009 03:43:41 +0000</pubDate><guid>https://martinliu.cn/2009/07/06/transformers-revenge-of-the-fall-theme-music/</guid><description>Enjoy the movie and music</description></item><item><title>ByteactHosting-free hosting</title><link>https://martinliu.cn/2009/07/04/byteacthosting-free-hosting/</link><pubDate>Sat, 04 Jul 2009 14:47:23 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/byteacthosting-free-hosting/</guid><description>Now, I am here at ByteactHosting. My blog was moved into this free web hosting.
Free Web Hosting Plan
800MB 1GB (1024MB) of webspace 30GB of monthly transfer 10 MySQL databases 10 Addon domains 10 Addon subdomains 10 Parked domains POP E-mail account (catch-all) Direct FTP access PHP support NO FORCED ADS! It is close to the last one I bought from http://www.</description></item><item><title>CMDB实施的几种误区</title><link>https://martinliu.cn/2009/07/04/cmdbe5ae9ee696bde79a84e587a0e7a78de8afafe58cba/</link><pubDate>Sat, 04 Jul 2009 05:44:02 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/cmdbe5ae9ee696bde79a84e587a0e7a78de8afafe58cba/</guid><description>上面是ITIL v3的定义，CMDB的定义和v2没有变化。可以看出CMDB是一个存储配置记录的数据库，非常多的用户一拍脑门“不就是一个数据库么！我们也可以自己开发一个的。”。这样的情况下，IT组织的不同部门都可能会各自立门户，开发自己的配置管理信息库；例如：资产管理、终端分发和管理、机房管理等等。数据重复、数据不一致、配置信息不对称；无法得到跨部门和系统的报告。所以V3提出了CMS系统，它是CMDB系统的下一代管理系统。CMS系统需要 具有对现有信息资料的兼容性，CMS的建立不能忘记过去；一定要集成已有配置信息。
错误一：配置信息是一个独立的配置管理系统，由专人负责数据的更新和维护，手工的管理和维护所有数据。
错误二：最配置管理就是要做的细，我要管理到机房中的每一根网线，CI的属性需要设计的非常多，越细致越好。
错误三：我们自己有开发人员，我们有CMDB的需求，那就开始做吧，先看法着看看，不就是一个数据的增删改查么！！
配置管理或者说CMDB的建设可以说是目前，国内ITIL用户共同的瓶颈。ITIL项目中实施最多的三个流程是：Incident Management、Problem Management 和 Change Management。已经实施完毕以上三个流程的用户问的最多的一个问题是：一个故障单、问题单或者变更单一定要和CI想关联么？在解决处理的时候寻找目标CI或者根源CI是必须的么？
如果ITIL是一种公共语言的话，那么Incident Management、Problem Management 和 Change Management等所有流程都是句式或者时态。而CI则是主语或者宾语，您觉得没有主语或者缺少宾语的句子，会传递怎么的信息呢？</description></item><item><title>ITIL v3 术语表</title><link>https://martinliu.cn/2009/07/04/itil-v3-e69cafe8afade8a1a8/</link><pubDate>Sat, 04 Jul 2009 05:43:08 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/itil-v3-e69cafe8afade8a1a8/</guid><description>回顾或者实施ITILv3时，可以去下载一下术语表，http://www.get-best-practice.co.uk/glossaries.aspx 以上网站有原版中英文和其他语言的文档。术语表适用于对ITIL有一定了解的人，是受过ITIL培训的人或者正在实施ITIL的人的案头参考读物之一。我桌上有中英文打印版各一份，拳不离手，曲不离口。另外ITIL实施切忌本本主义和教条主义，需要注重实效和对标准的遵从。</description></item><item><title>Some useful tools</title><link>https://martinliu.cn/2009/07/04/some-useful-tools/</link><pubDate>Sat, 04 Jul 2009 05:41:06 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/some-useful-tools/</guid><description>I am just cleaning up my bookmarks. Some of them could not be deleted. I&amp;rsquo;d like to list here.
This is a netflow monitor tool, you can capture, graph and store data.
Founded in 1992, the Distributed Management Task Force, Inc. (DMTF) is the industry organization leading the development of management standards and integration technology for enterprise and Internet environments.
Social Networking Meets Business, Concursive have CRM, online communitie, collaboration tools.</description></item><item><title>德克虏伯大炮VS清红衣大炮</title><link>https://martinliu.cn/2009/07/04/e5beb7e5858be8998fe4bcafe5a4a7e782aevse6b885e7baa2e8a1a3e5a4a7e782ae/</link><pubDate>Sat, 04 Jul 2009 05:39:11 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/e5beb7e5858be8998fe4bcafe5a4a7e782aevse6b885e7baa2e8a1a3e5a4a7e782ae/</guid><description>
德克虏伯大炮：特点射程远，能360度旋转，能把上下调整仰角，炮弹的辐射面积非常广，操作复杂，需要高技能的操作手。操作弹性大。安装部署需要时间长，对环境改造多。
清红衣大炮：射程短，只能朝一个方向发射，炮弹的打击面基本固定，操作简单，对操作者技术要求低。操作弹性低。 部署配置工作少。
在IT管理工具的选择中，您是选择克虏伯式的超级人间大炮，还是选功能操作简洁的红衣大炮？真是一个两难的选择啊！
“德克虏伯大炮”好比商业厂商的One-Size-Fit-All的超级企业级管理套件。 “清红衣大炮”好比开源的专门工具利器。 用户必须自己认真思考需求，却对不建议的做法：
将“德克虏伯大炮”买回家后，发现功能太复杂，接着把它定制成，操作简单的“清红衣大炮”。李鸿章很支持“师夷长技以制夷”，同理购买国外复杂管理套件而不去学习其中的管理方式方法，反而拘泥于自己对概念简单的理解也是成问题的观念。 把“清红衣大炮”三下五除二部署在家后，发现功能限制太多，集成几乎没有，失望的埋怨开源社区，坐观其他人的开发和参与。开源其实赋予你了无限的对开源技术应用的弹性，唯一要求就是有能力参与和进入社区的开发。</description></item><item><title>Tomcat压力测试-挺住200并发</title><link>https://martinliu.cn/2009/07/04/tomcate58e8be58a9be6b58be8af95-e68cbae4bd8f200e5b9b6e58f91/</link><pubDate>Sat, 04 Jul 2009 05:37:57 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/tomcate58e8be58a9be6b58be8af95-e68cbae4bd8f200e5b9b6e58f91/</guid><description>最近在CCB的测试中有一项是住系统登陆页面的压力测试。我一直就很担心是否能通过压力测试，因为一个同事告诉我上次他的结果是80就不行了。总结一下，我这次成功的原因主要就是两个地方：
1）设置Tomcat启动和最大内存使用都是1500MB
2）修改server.xml中关于连接数等参数(回头贴出我的那些配置内容)
我的服务器配置如下：
Dell 2950 1C4核，8GB内存，单块136GB硬盘，Windows2003系统，JDK1.6，Tomcat 5.5.21
另外，我一直以为Loadrunner需要真实Lic文件才能用，没想到的是，我随便在网上搜了一个也能用，真是神奇啊！ 不过还是反对盗版哈哈:)</description></item><item><title>For tomcat benchmark testing</title><link>https://martinliu.cn/2009/07/04/for-tomcat-benchmark-testing/</link><pubDate>Sat, 04 Jul 2009 05:36:03 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/for-tomcat-benchmark-testing/</guid><description>Tomcat Configuration 查看一下可以配置的参数设置JVM的参数Setting JVM Options for Tomcat
Edit the /usr/locat/apache-tomcat/bin/catalina.sh file and add the JVM options to the JAVA_OPTS environment variable.JVM Option Value Description
-Xmx 4g The maximum Java heap size.
-Xms 4g The initial Java heap size.
-Xmn 1g The size of young generation.
-XX:+UseParallelGC – To use parallel garbage collection for scavenges.
-XX:PermSize 50m The initial size of permanent generation.
注释：上面两个4g的值，我没试过，我用8GB内存windows的机器1.5GB能启动，超过了Tomcat服务就启动不了了。
配置Tomcat Connector Attributes
Edit the /usr/locat/apache-tomcat/conf/server.xml file and add the attributes listed in Table 3 to the Connector element.</description></item><item><title>Free WordPress themes</title><link>https://martinliu.cn/2009/07/04/free-wordpress-themes/</link><pubDate>Sat, 04 Jul 2009 05:34:15 +0000</pubDate><guid>https://martinliu.cn/2009/07/04/free-wordpress-themes/</guid><description>这里的theme都比较干净和简洁
http://www.nodethirtythree.com/
很可惜的是blog.ubuntu.org.cn不能自己更换theme，所能使用和选择的是固定的一些，都不好看，幸亏还WordPress默认的皮肤还在，否则真是不确定我还能用这里的WordPress。总之还是感谢网上有这么好的免费资源。</description></item><item><title>Stop to build CMDB for your IT - CMS是怎样炼成的？</title><link>https://martinliu.cn/2009/03/01/stop-to-build-cmdb-for-your-it/</link><pubDate>Sun, 01 Mar 2009 13:40:16 +0000</pubDate><guid>https://martinliu.cn/2009/03/01/stop-to-build-cmdb-for-your-it/</guid><description>ITIL在国内的实施也有8年之久，就我看过和做过的项目中：service desk是最多实施的工具，它包括IM/PM；还有Change Management；用户们还可能会常常认为，Release Management可以和变更流程可以混在一起搞。服务台一般先上，有的变更流程先上，服务台的共同特点还有PM一般形同虚设。就我所见所闻的项目和用户来说，CMDB没有那家能建的好用的好；CMDB的建设的缺失似乎成了所有ITIL用户的通病，应该也是想重点突破的瓶颈。
ITIL v3发布后，CMDB成了CMS中的一个数据库；而且，CMS中包括不止像CMDB这样的配置信息数据库，其实任何保存配置信息的数据库都算在CMS系统内。既然是一个系统，所以它就不光包含数据还包含一套配套工具集合，通过这套工具，维护和使用配置信息。CMS为其他所有ITIL流程提供基础的配置信息。它的结构如下图所示：
[caption id=&amp;ldquo;attachment_435&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;658&amp;rdquo; caption=&amp;ldquo;配置管理系统&amp;rdquo;][/caption]
如果说上面这幅图比较还是比较抽象的话，那么请见下图：
[caption id=&amp;ldquo;attachment_436&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;714&amp;rdquo; caption=&amp;ldquo;CMS is a set of tools based on all configuration data&amp;rdquo;][/caption]
从上图中我们看到，CMS系统一共可以分为四层。上三层是核心CMDB数据库和相关配套工具，最低层Data层则是是所有配置信息的基础来源。从ITIL v3的角度来说，只建设一个集中的CMDB数据库来存储所有的CI信息是不够的，CMS系统中必须能够包含和处理所有企业已有的各个系统中的配置数据。换言之，CMDB建设的局限性在于，它只是配置信息数据化，或者说电子化的第一步。
当前依然有很多企业雄心勃勃的上马CMDB项目，不过切记在规划时，一定先好好阅读一下ITIL v3中和CMS相关的内容，适当调整项目的目标和预期总是好的，也可以规避一些项目风险。
CMDB不只是一个数据库那么简单，更不可能在服务台的数据库中建立几张表就可以搞定。从企业IT管理的全局出发，按照ITIL v3的规范，建设CMS应该是所有ITIL项目的当务之急。CMS系统决不能遗忘过去，必须有效整个现有的各个配置信息数据源，无论其以何种形式存在。它必须是一个开放的平台，能过最大限度的和其他任何配置信息的消费者（ITIL流程，以及任何需要获取配置信息的任何应用）整合，
以上的一些是我对CMS建设的一些认识。如果要落地到项目上还不许经过一个痛苦的过程，那就是产品选型。选项的过程中可以注重一下几点：
可视化：配置项和之间的关系按拓扑形式展现 标准化：软件、硬件配置项都有完整标准的CTI信息 归一化：与现有各种配置管理系统核心共存同时CMS保持一份完整的户口记录，任何CI都有ID 集成化：CMS中的数据以图形或者裸数据等形式供其他相关消费者流程或者人员使用 联邦化：CMS核心数据库中不保存动态变化的配置信息（DB的最大连接数，网络设备所使用的syslog服务器地址），这些信息通过联邦管理让用户从其他相关的工具系统中查看到最新的数据。 最近可能还会接触一下CMDB的项目，其他经验总结待续。</description></item><item><title>[ZT]辽宁海城大悲寺僧团实录</title><link>https://martinliu.cn/2009/02/14/zte8bebde5ae81e6b5b7e59f8ee5a4a7e682b2e5afbae583a7e59ba2e5ae9ee5bd95/</link><pubDate>Sat, 14 Feb 2009 03:16:03 +0000</pubDate><guid>https://martinliu.cn/2009/02/14/zte8bebde5ae81e6b5b7e59f8ee5a4a7e682b2e5afbae583a7e59ba2e5ae9ee5bd95/</guid><description>这是一个令人赞叹的僧团
在默默中延续佛陀的慧命 天下僧人的心愿
在他们身上逐步实现
此片献给大家使我们大家进一步了解修行的道路和它深远的意义 &amp;mdash;-引自视频中</description></item><item><title>[網播] Born to MISrepresent 第二集：當 OpenNMS 遇上 SFLC ，催生了 Moglen Ravicher LLC</title><link>https://martinliu.cn/2009/02/04/e7b6b2e692ad-born-to-misrepresent-e7acace4ba8ce99b86efbc9ae795b6-opennms-e98187e4b88a-sflc-efbc8ce582ace7949fe4ba86-moglen-ravicher-llc/</link><pubDate>Wed, 04 Feb 2009 04:52:02 +0000</pubDate><guid>https://martinliu.cn/2009/02/04/e7b6b2e692ad-born-to-misrepresent-e7acace4ba8ce99b86efbc9ae795b6-opennms-e98187e4b88a-sflc-efbc8ce582ace7949fe4ba86-moglen-ravicher-llc/</guid><description>（原文於 2008-04-08 發表於 http://blog.roodo.com/ystuan/archives/5830995.html）
這個音檔的授權是姓名標示-非商業性-相同方式分享 2.5 台灣，跟我的網誌一樣。
下載ogg格式：Born_to_MISrepresent_EP2.ogg 下載mp3格式：Born_to_MISrepresent_EP2.mp3 前往存放在 Archive.org 上的頁面：Born to MISrepresent EP2，有更多資訊以及格式。
內容摘要：
OpenNMS 1.3.11 版發佈，並宣佈與 Hyperic 就雙方的產品進行合作。這項合作的推手是一個雙方的共同客戶。Hyperic 的 agent 預料將可和擁有強大平台但是拙於 agent (agent-less)的 OpenNMS 形成良好互補。（自 1.3.10 版就開始跟 Hyperic Agent進行整合，最近 OpenNMS 版本號已跳升至 1.5.90 ） Tarus 的 blog 有更多細節：The Year of Integration
Hyperic 跟 OpenNMS 的初步整合，可線上收看 Integrating Hyperic HQ and OpenNMS（瀏覽器需支援 flash 格式播放）
當 OpenNMS 遇上 SFLC ：前一陣子 Tarus 跑去 Ask Slashdot ，嚷嚷說 Cittio Watchtower 使用 OpenNMS 的程式碼當然可以，但是使用的方式違反了（程式碼採用的）GPL授權。
想也知道，跑去 Slashdot 一定會引來關注，他也尋求軟體自由法律中心（Software Freedom Law Center，SFLC）的協助。但是，SFLC服務對象僅限於非營利機構，結果呢，SFLC決定以成立一間新的律師事務所(Moglen Ravicher LLC)的方式，來服務支持自由軟體的營利機構， OpenNMS Group 因此成了 Moglen Ravicher LLC 的第一個客戶。</description></item><item><title>It just looks like a Mac desktop</title><link>https://martinliu.cn/2009/02/02/it-just-looks-like-a-mac-desktop/</link><pubDate>Mon, 02 Feb 2009 14:14:13 +0000</pubDate><guid>https://martinliu.cn/2009/02/02/it-just-looks-like-a-mac-desktop/</guid><description>&lt;p>&lt;img src="http://www.apple.com.cn/getamac/whichmac/images/portables_macbookair20090106.jpg" alt="">We all knows Mac OS X looks very nice, and works nice also. But, Mac can not be only system for you to use. Most of us are using Intel PC desktops and laptops. You can&amp;rsquo;t have your cake and eat it too. Chinese saying says &amp;ldquo;鱼和熊掌不可得兼&amp;rdquo; . So, you might need a new Mac skin for your desktop, no matter MS Windows or Linux OS. I&amp;rsquo;d like share two tips, you can make a Mac desktop in  minutes.&lt;br />&lt;br />**For Windows: **FlyakiteOSX is a all-in-one package. It much more easier then making a Mac-buntu. Does it slow down you windows system? Of course, yes. it&amp;rsquo;s just a little bit and acceptable for me.&lt;br />&lt;br />&lt;img src="http://osx.portraitofakite.com/header.png" alt="">&lt;br />&lt;br />&lt;strong>For Gnome Linux:&lt;/strong>&lt;br />&lt;br />There is a open source prject on the SourceForge.net: &lt;a href="http://sourceforge.net/projects/mac4lin">http://sourceforge.net/projects/mac4lin&lt;/a> You need download the package and un-tar it. A pdf document will walk you through every settings. I made my Mac-buntu just in 20 minutes. I do not like &amp;lsquo;global meun&amp;rsquo; and widget, so I ingored them. &lt;/p></description></item><item><title>My firecrackers for beginning of the year of ox 2009</title><link>https://martinliu.cn/2009/01/27/my-firecrackers-for-beginning-of-the-year-of-ox-2009/</link><pubDate>Tue, 27 Jan 2009 10:44:29 +0000</pubDate><guid>https://martinliu.cn/2009/01/27/my-firecrackers-for-beginning-of-the-year-of-ox-2009/</guid><description>爆竹声声辞旧岁
火树银花迎金牛
In childhood, I was playing firecrackers everyday in the Spring Festival. The new year&amp;rsquo;s eve is the only chance for me to lit it again, I felt I like a 10 years child.</description></item><item><title>Welcome to The Year of the Ox</title><link>https://martinliu.cn/2009/01/25/welcome-to-the-year-of-the-ox/</link><pubDate>Sun, 25 Jan 2009 17:23:30 +0000</pubDate><guid>https://martinliu.cn/2009/01/25/welcome-to-the-year-of-the-ox/</guid><description>&lt;p>&lt;img src="http://pic.nipic.com/2008-03-28/2008328104057723_2.jpg" alt="">&lt;br />&lt;br />It&amp;rsquo;s Chinese New Year&amp;rsquo;s Eve right now. The Chinese &lt;a href="http://dict.hjenglish.com/w/lunar">lunar&lt;/a> new year came, it&amp;rsquo;s &amp;ldquo;&lt;strong>The Year of the Ox&lt;/strong>&amp;rdquo;. I think you may like the above cute little ox and fortune; I hope you all the best. There are some pics I took tonight.&lt;/p></description></item><item><title>gOS looks green</title><link>https://martinliu.cn/2009/01/24/gos-looks-green/</link><pubDate>Sat, 24 Jan 2009 15:50:18 +0000</pubDate><guid>https://martinliu.cn/2009/01/24/gos-looks-green/</guid><description>Today I installed gOS on my laptop; openSuSE did great work for me 3 years. I&amp;rsquo;d like to play some new things. So, check my new desktop out.
http://picasaweb.google.com/liuzh66/GOS
If you go its wetsite http://thinkgos.com/, you will see it talks lots of cloud. It&amp;rsquo;s interesting, but it is not the reson i chose it. Ubuntu 8.04 is inside gOS. So, it time to learn a new linux system. I neve use a Derbin based system, I&amp;rsquo;m not sure it could run for me how long.</description></item><item><title>从云计算联想到第一代电脑系统</title><link>https://martinliu.cn/2009/01/19/e4bb8ee4ba91e8aea1e7ae97e88194e683b3e588b0e7acace4b880e4bba3e794b5e88491e7b3bbe7bb9f/</link><pubDate>Mon, 19 Jan 2009 07:32:50 +0000</pubDate><guid>https://martinliu.cn/2009/01/19/e4bb8ee4ba91e8aea1e7ae97e88194e683b3e588b0e7acace4b880e4bba3e794b5e88491e7b3bbe7bb9f/</guid><description>记得以前看过一本描写Bill Gets的书，他上中学的时候，在河滨中心通过一个远程终端，连接到某大学的计算机系统，输入程序代码，并且得到代码在远程电脑系统中的输出，输出好像是在屏幕上出现的，或从打印机上输出的。我基本上忘了那电脑系统的名称，不过它的特点基本上是这样的：当时电脑系统很少，可能全世界上也没有多少台功能全面的电脑；用户使用的特别像是一种计算服务，由于终端设备根本没有技术能力，当时还没有个人电脑；接入方式根本不是tcp/ip更不是internet，当时还没internet。在学习了云计算的一些概念之后，我迷惑了，这个时尚的技术，怎么越看越眼熟啊。
IBM的主机系统可谓是当今电脑世界的恐龙化石级产品，他是一个活化石基本的技术，在经历了开放系统时代之后，我们即将进入云计算时代，我总感觉云计算是一种技术路线的复古。主机系统和第一代电脑系统最相似，区别是可以通过TCP/ip网络，和开放系统通信了。最为一种新兴起的技术，我试图follow http://www.johnmwillis.com/来学习云计算，遗憾的是从08年初以来并没有仔细听他所有的colud cafe；这个老兄在把blog改名为IT Management and Cloud Blog，真可谓是一高产的blogger，这哥们每天能发四五个post，强啊。最近找时间听了一段cloud cafe，我发现到目前为止还没有一个能让大多数人都认同的云计算的概念，基本上对云计算的感念方面有两道三种说法。可以看看 http://en.wikipedia.org/wiki/Cloud_computing 参考这上面的说法也只能有一个模糊的感觉。
看看电脑技术打发展历程：最早的电脑系统，主机系统，开放系统，群集，网格，云计算。前一段时间看过一个非常抢眼的标题“以后世界上将只有5台电脑”。SaaS是一个比较火热的和云计算相关的技术，我认为它像是在web2.0发展到一定阶段后Web应用的一个发展，这方面的强者为salesforce之流。Google和Salesforce不同的是，Google提供网上office套件的同时，还开发他的平台，并提供与之配套的 SDK。Amazon不提供应用也没有SDK，他只提供平台，平台上包括基本的计算和存储服务。Google和Amazon说起来算是基础架构作为一种服务。抛开云计算本身不谈，用户使用和访问的方式并没有发生变化，在任何一个web浏览器存在的地方都能使用或者管理到云计算。客户端的计算和存储能力再次此退化到零，这不能说不是计算机技术发展的返祖现象吧！哈哈～～我也快糊涂了！</description></item><item><title>opennms 1.6.1-1 quick start guide</title><link>https://martinliu.cn/2009/01/11/161-1-opennms-quick-install-guide/</link><pubDate>Sun, 11 Jan 2009 02:33:12 +0000</pubDate><guid>https://martinliu.cn/2009/01/11/161-1-opennms-quick-install-guide/</guid><description>本安装手册为纯命令版，如果有什么疑问清参考官方安装手册，或给本贴留言。
[install yum on your Linux box]
选择任意Linux系统，安装上yum工具，在命令行测试 yum -v
[testing internet connection with those two URL]
测试是否能上网，用浏览器分别打开这两个网址
http://www.martinliu.cn/2007/12/13/opennms-yum-install/ http://yum.opennms.org/repofiles/ 先别关闭这两个网页。
[Install opennms 开始安装:
yum install yum-fastestmirror rpm -Uvh http://yum.opennms.org/repofiles/opennms-repo-snapshot-rhel4.noarch.rpm yum list opennms yum install opennms [ post-install and config] 开始配置：
export OPENNMS_HOME=/opt/opennms vi /var/lib/pgsql/data/pg_hba.conf
1. 注释掉其中所有可用的行，加入下面三行
local all all trust
host all all 127.0.0.1/32 trust
host all all ::1/128 trust /sbin/service postgresql restart /usr/java/jdk1.</description></item><item><title>Top 25 OSS Projects on Jan 2009</title><link>https://martinliu.cn/2009/01/07/top-25-oss-projects-on-06-jan-2009/</link><pubDate>Wed, 07 Jan 2009 10:18:18 +0000</pubDate><guid>https://martinliu.cn/2009/01/07/top-25-oss-projects-on-06-jan-2009/</guid><description>This list is from SourceForge.net. You may have the question: How do we adapt open source? My answer might be you just should use them as much as you can. The world is facing economic crisis, you have to saving your budget. How do you deal with that? It&amp;rsquo;s time to think about OSS now.
1. Shine J2EE Framework 开发框架
http://j2sos.org/
http://sourceforge.net/projects/shine-app
Shine is a Java-J2EE Application Framework/JWMS(Java Web Model</description></item><item><title>Training tips</title><link>https://martinliu.cn/2008/12/27/training-tips/</link><pubDate>Sat, 27 Dec 2008 08:21:11 +0000</pubDate><guid>https://martinliu.cn/2008/12/27/training-tips/</guid><description>&lt;p>&lt;img src="http://www.competencetoexcellence.co.uk/cartoon2.gif" alt="">上周一周都在广州，为中国最大的直销企业Amway做“Remedy Administration Part 2&amp;quot;的培训，这个培训是我今年第5次做；本周用户还给公司发来了感谢信，可见此次培训也是本年效果很好的一次。其实本月对我来说是一个培训月，第一周在新加坡接受一产品培训“BMC Configuration Automation For Network”；第二周在北京给‘中国人寿’做ITIL v3 Foundation的企业内训；第三周在广州，就是这个Remedy的培训。&lt;br />&lt;br />ITIL v3培训和Remedy培训是两个不同类型的培训，一个是最好实践IT管理方法论的培训；另外一个是Remedy系统管理和开发的课程。一个注重理论的讲解，另外一个是注重实际操作的介绍。不过从讲师的角度来说，培训的准备和整个过程的控制都是殊途同归的。&lt;br />&lt;br />**准备篇&lt;br />**对整课程内容的整体把握是至关重要的，必须对每一个module的内容谙熟于胸，这样才能控制整个培训课程的节奏，才能对时间做到从容地分配。特别是4～5天的培训，把所有的课程从头到尾贯彻为一个整体，不失课程的整体性，让学员有整体感，不觉得你教的内容没有逻辑、琐碎是非常重要的。所以需要在准备课程的时候就想好，每个module之间的衔接方式，要准备好review的问题，从这些问题中总结上一个module，平滑的过度到下一个module，增加课程内容直接的衔接，可以提高学员对内容的整体理解和掌握。&lt;br />&lt;br />&lt;/p></description></item><item><title>ITIL V3 Traininig For China Life</title><link>https://martinliu.cn/2008/12/14/itil-v3-traininig-for-china-life/</link><pubDate>Sun, 14 Dec 2008 11:00:42 +0000</pubDate><guid>https://martinliu.cn/2008/12/14/itil-v3-traininig-for-china-life/</guid><description>&lt;p>&lt;img src="http://www.blueloop.net/images/itil-v3.gif" alt="">&lt;br />&lt;br />上周给“中国人寿”做了ITIL V3 Foundation Training， 这是一个定制的企业内训，包括3天的理论学习，一天的‘BSM机场模拟沙盘演练’，最后一天进行ITIL V3 Foundation 认证考试。总的来说培训的效果还是非常不错的，学员基本上都能够理解和掌握ITIL v3的基本理论；在随堂的模拟考试后，能够针对一些题和我做非常深入的讨论。BSM机场模拟沙盘演练对于这群基本上比较年轻的学员来说成了一个非常热烈的培训环节，培训教室温度和气氛都比较热，一轮游戏跑下来以后，有些人就已经是满脸通红了；可见沟通也是一件力气活 :) 从学员们填写的反馈表的结果显示，他们对我的平均满意度是 4.35；呵呵这证明经过多日来的备课准备和以前的项目积累还是比较有效的，相信下次能够比这做的更好。&lt;/p></description></item><item><title>[项目更新] OCS Inventory NG 1.02 RC3 available and GLPI 0.71.2 available</title><link>https://martinliu.cn/2008/11/27/ocs-inventory-ng-102-rc3-available-and-glpi-0712-available/</link><pubDate>Thu, 27 Nov 2008 05:15:26 +0000</pubDate><guid>https://martinliu.cn/2008/11/27/ocs-inventory-ng-102-rc3-available-and-glpi-0712-available/</guid><description>如果你了解OCS Inventory NG 的话，您可能会发现这个问题，在家里用adsl上网，可能访问不到这个项目的网站，所以要想下载这个项目的软件，可以去sorceforge.net下载。
10/28/2008 OCS Inventory NG Server 1.02 RC3 发布了Patch1，Patch1主要是修复了一些数据库创建和更新的问题，具体的内容如下所示：
In the database creation/update process launched through Administration Console (install.php), défault settings for cache and download directories are missing.
Also, default values in dynamic group computation are not set correctly. So dynamic group of computers are not updated correctly in Communication Server.
We've also included Remi patch in install.php to avoid overriding database username and password if you've changed them.</description></item><item><title>[项目更新] OTRS project news update</title><link>https://martinliu.cn/2008/11/19/otrs-project-news-update/</link><pubDate>Wed, 19 Nov 2008 17:40:56 +0000</pubDate><guid>https://martinliu.cn/2008/11/19/otrs-project-news-update/</guid><description>&lt;p>&lt;a href="http://www.otrs.org/">&lt;img src="http://www.otrs.com/uploads/pics/otrs_download_01.jpg" alt="">&lt;/a>&lt;br />&lt;br />&lt;strong>当OTRS遇到OpenNMS&lt;/strong> **OTRS meets openNMS! **OTRS和OpenNMS发布了新的集成手册 &lt;a href="http://www.opennms.org/index.php/OTRS_Integration">http://www.opennms.org/index.php/OTRS_Integration&lt;/a> 这个Web Service的接口应该能做方便的集成了，没有试过，总之OpenNMS+OTRS应该是不错的组合，黄金搭档送给你，到~~&lt;br />&lt;br />**The SIRIOS 2.2 modules for OTRS 2.3 are released **SIRIOS 2.2模块发布了。我一直以为&lt;a href="http://www.otrs.com/en/produkte/sirios/">SIROS&lt;/a>是非开源的项目，今天才知道它也是开源的哦，有空试试看。这个是专门为安全管理定制的，主要是去管理企业的安全事件。&lt;br />&lt;br />自从2008-08-05 **OTRS 2.3.1 (Bora Bora) **发布之后，又发布了两个版本，2.3.2  和 2.3.3，这两个版本都是2.3.1的bug修复版，功能上没有增加。&lt;br />&lt;br />OTRS 2.3 中重大的改变如下：&lt;br />&lt;br />&lt;/p></description></item><item><title>[发布说明] OpenNMS 1.6.0 (Stable) Released</title><link>https://martinliu.cn/2008/11/14/e58f91e5b883e8afb4e6988e-opennms-160-stable-released/</link><pubDate>Fri, 14 Nov 2008 14:57:36 +0000</pubDate><guid>https://martinliu.cn/2008/11/14/e58f91e5b883e8afb4e6988e-opennms-160-stable-released/</guid><description>&lt;p>&lt;img src="http://www.opennms.org/images/b/b5/Banner.jpg" alt="">&lt;br />&lt;br />&lt;a href="http://sourceforge.net/forum/forum.php?forum_id=882433">OpenNMS 1.6.0 (Stable) Released&lt;/a>&lt;br />&lt;br />似乎每年的10月以后我就会进入一个超级繁忙的状态，很长时间没有更新blog了，今天姑且转载一个OpenNMS的发布说明吧。&lt;br />&lt;br />OpenNMS, the world&amp;rsquo;s first enterprise-grade network management platform developed as 100% free and open software, has released version 1.6.0. This is a stable, production release that incorporates nearly three years of development.&lt;br />&lt;br />以上算是OpenNMS的广告语大家看看就是，需要注意的是一个企业级的产品实施费用是从很低的门槛一直到企业级的花费的。和其他的企业级解决方案的实施没有区别，差异在于，一个不同的许可证类型，此为开源许可证是也。&lt;br />&lt;br />&lt;/p></description></item><item><title>ITIL V3 Study Notes (2)</title><link>https://martinliu.cn/2008/11/04/itil-v3-study-notes-2/</link><pubDate>Tue, 04 Nov 2008 22:56:57 +0000</pubDate><guid>https://martinliu.cn/2008/11/04/itil-v3-study-notes-2/</guid><description>&lt;p>&lt;img src="http://www.martinliu.cn/wp-content/uploads/2008/11/itilv3model.jpg" alt="">&lt;br />&lt;br />这就是全新的ITIL v3的模型个人觉得吧ITIL四个字母放在中间不如把Service放在中间，原因很简单，所有流程和原则都是围绕服务展开，V3是一个关于服务生命周期管理的最好实践集合。&lt;br />&lt;br />&lt;/p></description></item><item><title>Some old stuff for sharing</title><link>https://martinliu.cn/2008/10/29/some-old-stuff-for-sharing/</link><pubDate>Wed, 29 Oct 2008 03:43:35 +0000</pubDate><guid>https://martinliu.cn/2008/10/29/some-old-stuff-for-sharing/</guid><description>I think the following open source software resources could be helpful to you.
本页面上是我认为可能对您有用的资源连接，目的是让您能以最小的时间和精力代价来体验开源软件。使用一个虚拟应用可能是一个比较方便的途径；有些开源应用做的非常体贴用户，软件提供ISO文件下载，通过这个ISO文件甚至能一键安装，在一个物理和虚拟的硬件上试用这个软件了。
Virtual Appliances / 虚拟应用
Asset Management 资产管理 OCS Inventory v1.02 RC1＋ GLPI v0.70.2，Download , 下载地址和虚拟说明。 IT Service Management &amp;ndash; Help Desk &amp;ndash; Ticket tracking system, OTRS2.6.6+OTRS::ITSM 1.0.94, Download , 下载地址和虚拟应用说明。 Network monitoring system:
Zenoss 2 , it was made by Zenoss, not the newest version; download, 下载网址。 OpenNMS 1.5.91, download it from SourceForge; they like to keeping this vm appliance update.</description></item><item><title>八达岭森林公园-红叶岭</title><link>https://martinliu.cn/2008/10/27/e585abe8bebee5b2ade6a3aee69e97e585ace59bad-e7baa2e58fb6e5b2ad/</link><pubDate>Mon, 27 Oct 2008 13:32:49 +0000</pubDate><guid>https://martinliu.cn/2008/10/27/e585abe8bebee5b2ade6a3aee69e97e585ace59bad-e7baa2e58fb6e5b2ad/</guid><description>[![](http://lh5.ggpht.com/liuzh66/SQW2ycea7sI/AAAAAAAAA5E/1xu0psqtrVA/s400/20081027-%20023.jpg)](http://picasaweb.google.com/lh/photo/aGEY72oIPhKJyJOcZsVEVA)
发件人 [八达岭长城 红叶岭](http://picasaweb.google.com/liuzh66/SyrPvH)
今天的天气很好且风不大，特意抽出一天时间出来看看红叶。没想到，到了山脚下就不太想上去了，不过本着踩点的想法还是上去看看。这里叫做“八达岭森林公园-红叶岭”，在红叶的季节可以在德胜门做919（红叶岭专线），一个多小时就可以到，中间不停车。下周是这个专线班车的最后一周，这个时间来显然是晚了。上山之后，发现在这几天的秋风后，红叶之剩下10%。在这看红叶的好处就是长城和红叶可以一同欣赏，长城非常有形，可惜的是长城是不能攀登的。这个公园的面积比较小，红叶树都比较小，品种应该也没有香山的多。总的来说这里比较小而精，浓缩长城和红叶与一处，比较适合半天的短游。</description></item><item><title>M$ Windows is eating your hard driver</title><link>https://martinliu.cn/2008/10/24/ms-windows-is-eating-your-hard-driver/</link><pubDate>Fri, 24 Oct 2008 00:52:53 +0000</pubDate><guid>https://martinliu.cn/2008/10/24/ms-windows-is-eating-your-hard-driver/</guid><description>&lt;p>&lt;img src="http://lh5.ggpht.com/liuzh66/SQEZ0RBOw_I/AAAAAAAAA38/Ulq2AKwYejU/s800/Access%20is%20denied.jpg" alt="">No matter Bill says how friendly M$ Windows is. It is eating more and more my free disk space. Toady I figured out some tips for releasing disk space. In Windows file explore, you can not see the folder size without checking on property. So you may need a tool, something like FolderSizes. FolderSize helps me to know more about my heard diver. It shows me there is a folder &amp;lsquo;System Volume information&amp;quot;, this folder is 6.20GB big. What the hell is that??? I can not even see it in file explore. Then I check on Folder Options, here are so many hiding options for you. In order to take out that big folder, I unchecked &amp;lsquo;&amp;ldquo;Hide protected operating system files and folders&amp;rdquo;, then the folder shows up. But I can not open it sine I really wants to know what hell is been hidden in that folder. A error message box popup up&amp;quot;Assess is denied.&amp;quot; WOW this is my laptop, I am not able to access the folder. Is this a M$ asset? In FolderSize, I can go inside this folder; it has so many files. Everything in this folder looks like patch file. I have no idea where and when it went down my computer; or this dame OS made it. Now I&amp;rsquo;m deleting these files and folders in folder &amp;lsquo;System Volume information&amp;quot; from FolderSize. Another error message box popup up; it says &amp;ldquo;Cannot delete XXX000.ps1: It is being used by another person or program&amp;rdquo;. Kidding me? Does anyone share this laptop with me at this moment? Fortunately I have openSuSe, I issued rm -rf command after booted into openSuse. Now 6.2GB space was released.&lt;br />&lt;br />&lt;/p></description></item><item><title>OTRS FAQ 1.5.3 : you have six reasons to use it</title><link>https://martinliu.cn/2008/10/19/otrs-faq-153-you-have-six-reasons-to-use-it/</link><pubDate>Sun, 19 Oct 2008 13:01:34 +0000</pubDate><guid>https://martinliu.cn/2008/10/19/otrs-faq-153-you-have-six-reasons-to-use-it/</guid><description>I have Christopher T. Kuhn Blog&amp;rsquo;s RSS feed in my blackberry. That&amp;rsquo;s the way I following with OTRS project. Christoper do the best job to explain new features and updated s. I did not try out OTRS FAQ 1.5.3 yet, but it look great from Chrisopher&amp;rsquo;s post.
知识库、解决方案库或者KB的建设往往被人们忽视，对它的选择也是见仁见智。不过可能也有标准，就像你选择你最喜欢吃的水果一样。你最喜欢吃的水果就是：一年四季你到超市见到就想买的，一年四季都想吃的，而且必须是营养丰富有益于健康的。
OTRS FAQ 1.5.3 新版的FAQ出来后，OTRS有了真正的Knowoledge Base； 虽然依然是一个简单版的KB，不过已经具备了作为一个KB应该具有的6个主要功能。
**所见即所得的编辑方式 **创建包含图片和丰富文字和是的知识库或者FAQ条目。 **脚本导入工具 **可以导入已有的一些经验文档、操作规章手册等已有知识文档。 **关键字连接 **增加知识库的可搜秀性 **FAQ报表 **通过一些定期的报表计算出每一个知识库条目被查看的频率 **TOP10文章列表 **在知识库浏览界面中显示被浏览次数做多的前10篇 **知识审批流程 ** 你可以定义一个审批的流程，审批后的内容可以被显示在内部、外部或者公开区域。 目前我还没有时间测试这个知识库，相信应该是个不错的东西，相关测试截屏请拭目以待。如果你已经测过也请留步，留言告诉我你的体验。</description></item><item><title>ITIL V3 Study Notes (1)</title><link>https://martinliu.cn/2008/10/19/itil-v3-study-notes-1/</link><pubDate>Sun, 19 Oct 2008 11:55:10 +0000</pubDate><guid>https://martinliu.cn/2008/10/19/itil-v3-study-notes-1/</guid><description>&lt;p>关于ITIL V3的简单网上已经有很多，我是从ITIL V2 Foundation认证升级到V3的，由于目前做的ITSM的项目还都是V2的内容。随着公司的产品逐渐想V3上靠，并且很多已经通过了V3认证了；所以自己必须好好在看看V3的内容，所谓温故而知新，我也希望能尽早把V3的内容都消化掉。&lt;br />&lt;br />下面的一些列帖子是我最近的一些学习笔记，也本着把后书读薄的目的，希望这些笔记能帮我把思路整理好。&lt;br />&lt;br />ITIL V3的核心出版物有五本。&lt;br />&lt;br />&lt;img src="https://martinliu.cn/DOCUME~1/home/LOCALS~1/Temp/moz-screenshot.jpg" alt="">&lt;img src="http://www.bestpracticebookstore.co.uk/ekmps/shops/keyskillsilx/images/ss%5Bekm%5D61x80%5Bekm%5D.jpg" alt="">&lt;img src="http://www.bestpracticebookstore.co.uk/ekmps/shops/keyskillsilx/images/sd%5Bekm%5D58x80%5Bekm%5D.jpg" alt="">&lt;img src="http://www.bestpracticebookstore.co.uk/ekmps/shops/keyskillsilx/images/itil_service_transition%5Bekm%5D61x80%5Bekm%5D.jpg" alt="">&lt;img src="http://www.bestpracticebookstore.co.uk/ekmps/shops/keyskillsilx/images/so%5Bekm%5D61x80%5Bekm%5D.gif" alt="">&lt;img src="http://www.bestpracticebookstore.co.uk/ekmps/shops/keyskillsilx/images/cs%5Bekm%5D61x80%5Bekm%5D.jpg" alt="">&lt;br />&lt;br />如果有ITIL v2相关的理论或者实践经验 ，而且英文好的话建议直接从网上购买或者下载这五本书开始学习。不过过程可能会比较漫长，效果很难预测。我现在学的是一个公司的ITIL V3 Foundation认证培训的教材，这本书好在他其实整合了上面五本书的所有核心内容，而且通过实际用例来解释理论。它是本考试认证用书，所以上面还有考试辅导方面的内容，如考点提示之类的。对我来讲业余时间能很快把V3的内容过一遍，这本书应该在好不过了。&lt;/p></description></item><item><title>Open Source and Cloud Computing(开源与云计算)</title><link>https://martinliu.cn/2008/10/16/open-source-and-cloud-computinge5bc80e6ba90e4b88ee4ba91e8aea1e7ae97/</link><pubDate>Thu, 16 Oct 2008 13:09:16 +0000</pubDate><guid>https://martinliu.cn/2008/10/16/open-source-and-cloud-computinge5bc80e6ba90e4b88ee4ba91e8aea1e7ae97/</guid><description>Link：Open Source and Cloud Computing(开源与云计算)
From above post:
开源的成功有几个关键元素：
1.许可证要允许和鼓励再发布、修改乃至发展分支；
2.一个体系结构要使程序能被作为组件在任何可能的地方重用，以及可以被扩展，而不是被替换来提供新功能；
3.低门槛，让新用户轻松上手一试。
4.低门槛，让开发人员构建新的应用与大家分享。
所以我给出我的第一个建议：如果你关心云计算的开源，**请在那些设计为联合而不是集中控制的服务上构建项目**。体系结构从来都是战胜许可证的。
个人认为：使用云计算的用户并不一定是租用土地的佃户；佃户把自己的收成都给了地主，自己剩下的少的可怜。云计算的用户会愿意付出多少成本给地主是可以计算的，计算的原则就是‘保证自己的利益、安全等’。</description></item><item><title>Welcome to my OSS forum</title><link>https://martinliu.cn/2008/10/06/welcome-to-my-oss-forum/</link><pubDate>Mon, 06 Oct 2008 08:05:07 +0000</pubDate><guid>https://martinliu.cn/2008/10/06/welcome-to-my-oss-forum/</guid><description>Now this forum is open for registration. Please feel free to post any of your idea or question. I hope you will have fun.
http://www.martinliu.cn/forum
论坛开张了:) 欢迎加入我的开源论坛！</description></item><item><title>Should I open a forum on my site?</title><link>https://martinliu.cn/2008/09/23/should-i-open-a-forum-on-my-site/</link><pubDate>Tue, 23 Sep 2008 04:58:47 +0000</pubDate><guid>https://martinliu.cn/2008/09/23/should-i-open-a-forum-on-my-site/</guid><description>这个论坛软件看似还不错，而且号称简单、快速和优雅，比较吸引我。我的blog后台是Wordpress的，所以理论上讲可以和这个软件很好的集成，这可能是最吸引我的一个地方。对于本开源软件博客而言，是否需要增加论坛这个功能呢？其实本博客还是一个多作者博客，我邀请了几个开源的朋友供稿，不过他们也应该比较忙 :) 其中的两个朋友也有自己的论坛，分别是 www.itnms.net 和 www.zenosscn.com 。对于国内的很多朋友而言，可能论坛是一个更好的沟通方式，泡论坛已经是很多朋友上班中不可缺少的内容。
考虑一下开设论坛的利弊。好处应该是会带来更多站点交互。坏处还没有想好，目前能想到的可能是：需要花更多的时间打理本站，还有就是抵御论坛的垃圾。总之还没想好是否增设论坛功能，如果您有什么意见和看法也请告诉我。
[poll id=&amp;ldquo;7&amp;rdquo;] [poll id=&amp;ldquo;6&amp;rdquo;]</description></item><item><title>How do you know who uses open source?</title><link>https://martinliu.cn/2008/09/21/how-do-you-knw-who-use-open-source/</link><pubDate>Sun, 21 Sep 2008 14:21:28 +0000</pubDate><guid>https://martinliu.cn/2008/09/21/how-do-you-knw-who-use-open-source/</guid><description>&lt;p>It&amp;rsquo;s hard to get a answer. But I am always thanking about this question. The people who use open source may not announce to the wold &amp;ldquo;we are running apache+tomcat as on-line banking service!!!&amp;rdquo;. As far as I know, more and more peoples going to choice open source software whenever they have this option.&lt;br />&lt;br />Let&amp;rsquo;s narrow down this question. That will be more interesting.&lt;br />&lt;/p>
&lt;blockquote>Who are using [**OTRS**](http://www.martinliu.cn/orts/) as help desk on the **Internet**?&lt;/blockquote>
&lt;p>&lt;br />&lt;/p></description></item><item><title>NeDi - A Swiss Army Knife of network device management</title><link>https://martinliu.cn/2008/09/13/nedi-a-swiss-army-knife-of-network-device-management/</link><pubDate>Sat, 13 Sep 2008 15:47:28 +0000</pubDate><guid>https://martinliu.cn/2008/09/13/nedi-a-swiss-army-knife-of-network-device-management/</guid><description>&lt;p>&lt;a href="http://www.nedi.ch/">&lt;img src="http://www.nedi.ch/lib/tpl/minima/images/nedi-s.png" alt="">&lt;/a>&lt;br />There is a shot list of its feature&lt;br />&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;ul>
&lt;li>Auto discovery network deivce
&lt;br />&lt;/li>
&lt;li>Network &lt;a href="http://www.nedi.ch/doku.php?id=tutor:topology-map">Topology-Map&lt;/a>
&lt;br />&lt;/li>
&lt;li>SNMP based monitoring
&lt;br />&lt;/li>
&lt;li>Network performance and inventory management
&lt;br />&lt;br />[&lt;/li>
&lt;/ul></description></item><item><title>Do you like Chrome?</title><link>https://martinliu.cn/2008/09/05/do-you-like-chrome/</link><pubDate>Fri, 05 Sep 2008 05:10:15 +0000</pubDate><guid>https://martinliu.cn/2008/09/05/do-you-like-chrome/</guid><description>&lt;p>Peoples always love whatever Google&amp;rsquo;s invention, I am using Gmail and GTalk every day too. But I think I couldn&amp;rsquo;t say I like google anytime. That&amp;rsquo;s just because Chrome. It was installed on my laptop yesterday. I&amp;rsquo;m trying it out when I access any of my google services (Gmail, Reader, Doc, etc&amp;hellip;). There are some App shortcuts are already on my XP deskdtop.  Base on one day experience of Chrome, I&amp;rsquo;d like to talk about reasons I don&amp;rsquo;t like Chrome. I has not tested it too much at present, just few comments below:&lt;br />&lt;br />&lt;img src="http://blogs.zdnet.com/perlow/images/chrome-constrictor.jpg" alt="">&lt;br />&lt;br />&lt;/p></description></item><item><title>best of open source software [InfoWold OSS AWARRDS]</title><link>https://martinliu.cn/2008/09/04/best-of-open-source-software/</link><pubDate>Thu, 04 Sep 2008 08:13:52 +0000</pubDate><guid>https://martinliu.cn/2008/09/04/best-of-open-source-software/</guid><description>&lt;p>Are you running a open source project? If so, you may wash for this awards. Have you every vote for some&lt;br />&lt;br />&lt;img src="http://www.nagios.org/images/propaganda/bossie-2008.png" alt="">OSS on InfoWorld? After I check out all of those lists, I realized there are some great softwares I still don&amp;rsquo;t know. For sure you are leveraging oss power, you may go with some champion projects.&lt;br />&lt;br />&lt;a href="http://www.infoworld.com/slideshow/2008/08/165-best_of_open_so-1.html">Best of open source productivity apps&lt;/a>&lt;br />The InfoWorld Test Center&amp;rsquo;s picks for the top free and open source productivity apps include office suite, Web browser, image &amp;hellip;&lt;br /> August 4, 2008&lt;br />&lt;a href="http://www.infoworld.com/slideshow/2008/08/166-best_of_open_so-1.html">Best of open source developer tools&lt;/a>&lt;br />The InfoWorld Test Center picks the top free and open source RIA platform, Ajax framework, business rule management system, &amp;hellip;&lt;br /> August 4, 2008&lt;/p></description></item><item><title>Xen quick start guide on openSuSE Linux 10.3</title><link>https://martinliu.cn/2008/08/27/xen-quick-start-guide-on-opensuse-linux-103/</link><pubDate>Wed, 27 Aug 2008 14:43:05 +0000</pubDate><guid>https://martinliu.cn/2008/08/27/xen-quick-start-guide-on-opensuse-linux-103/</guid><description>&lt;p>If you had installed VMWare workstation on any Linux, you may have kernel source problem. Because a default Linux installation do not include kernel source package. I&amp;rsquo;m just saying that you should always play with open source Virtualization, Xen or Virtial Box are all good stuff to run ;)  . I got some screen-shots for you if you don&amp;rsquo;t have idea how do install Xen. The true is Xen is faster then VMWare on my laptop. I would not work with VMWare anymore.&lt;br />&lt;br />My laptop is a DELL D630 with openSuSE Linux 10.3 and XP (just for work).&lt;br />&lt;br />&lt;strong>1) Install Xen packages via yast from DVD.&lt;/strong>&lt;br />&lt;a href="http://picasaweb.google.com/liuzh66/Xen/photo#5238369405654660690">&lt;img src="http://lh4.ggpht.com/liuzh66/SLJtOGpR9lI/AAAAAAAAAos/rLsgH5aLcDk/s400/xen-packages.jpg" alt="">&lt;/a>&lt;br />&lt;br />&lt;/p></description></item><item><title>Open Source Total IT management Solution</title><link>https://martinliu.cn/2008/08/23/open-source-total-it-management-solution/</link><pubDate>Sat, 23 Aug 2008 15:17:05 +0000</pubDate><guid>https://martinliu.cn/2008/08/23/open-source-total-it-management-solution/</guid><description>在IT管理领域里，商业软件厂商中有自称Big 4的集团：CA，HP，BMC， IBM；在开源软件项目中也好像有自称“开源Big 4”的集团，他们是Groundwork、Hyperic、Qlusters和Zenoss公司。商业厂商向用户推出自己的产品的时候，往往都会打着一些比较大的概念和幌子，说“我们是IT管理的Total Solution”；潜台词是我们的产品非常多，可以满足您所有的需求，而且只要您选择了我们，我们能保证所有的产品模块之间是无缝集成的。事实上的确如此，商业厂商凭着后台开发团队的强大，还有本地服务商的支持，在解决方案的集成性上的确没有什么问题。对于开源软件来说，由于每个软件都在各自为政的状态下独立发展，即使是彼此之间的功能有着某种衔接和集成性，在多数的情况下也往往是各自独立发展；没有考虑到彼此的组合和集成。不过换一个角度看，既然是开源软件，人家把源代码都全开放出来了，如果你想做两个开源软件的集成的话，从技术的角度上说，没有任何障碍；对比商业的闭源软件产品来说，似乎他们又在这方面有着与生俱来的优势。
开源的IT管理软件中有非常多的种类，就拿网管软件来说吧。我的blog上介绍了很多，其中很多的软件都是功能非常重复，而各有千秋的。要想组合一个纯开源的整体IT管理解决方案不是不可能的，需要的是对一些比较精华的软件系统有所了解，并且了解他们之间集成的方式和实现功能。在此基础上做出合理的组合，方能搭建出一个整体的方案。
由于现在ITIL已经成为了大家耳熟能详的“GOOD PRACTICE”，这是08年V3之后的一个转变，V3提出之后，它就以一种亲民的身份，自称自己不再是“BEST PRACTICE”了。既然是要攒一个“开源IT管理整体解决方案”，同时为了保持本方案具有一定的理论高度 ;) 选择ITIL作为理论依据当然是不会错了呵呵～～ 不好意思今天心情比较好，废话实在太多，抱歉，下面将开始方案书写了。
本方案将兼顾ITIL中的两大块：IT交付和IT支持。我所选取的是OpenNMS, Hyperic HQ 和 OTRS来分别支撑IT交付和IT支持者两个部分。OpenNMS和Hyperic HQ组合来完成网络和系统监控，它们为可用性管理、性能（容量）管理和服务水平管理提供支持和实现，注意这里说的是为这几个流程提供支持的工具，这些工具本身并不是流程工具。OTRS完成事件管理、问题管理、配置管理和服务水平管理等流程，OTRS本身是一个工单跟踪管理系统，他现在的ITSM模块以及发展到1.1的版本了，同时自称是ITIL兼容的软件。
IT Delivery
OpenNMS和Hyperic HQ的功能定位有所不同，在这里选择他们俩来作为监控网络和系统的平台由一下的一些理由。OpenNMS是agentless的监控软件，它的网络自动发现功能非常好使，而且现在能支持越来越多的网络设备，对于国内的华为等厂商的设备需要做一些定制后才能监控，否则只能看到标准的mib2的信息。最新的版本也能支持分布式的管理功能，也就是remote monitor的模块。我没有让Zenoss入选网络监控的一个重要原因是，OpenNMS是纯开源软件项目，它的所有功能都是可用的，而且它是Java程序，配置文件大多是xml文件。对支持非常大量的网络设备和端口，你需要有的是对Tomcat和Java应用的调优能力，和通过OpenNMS的邮件组来解决bug的能力。OpenNMS里面有非常好的告警事件管理功能，它本身是一个非常好的事件平台，事件升级、报警、过滤等功能都有。而且现在OpenNMS已经能和Hyperic HQ做事件集成，Hyperic HQ的报警事件能传递到OpenNMS中，这就意味着OpenNMS可以作为一个统一集成的事件管理平台，在这里对集中管理所有类型的告警事件。HQ是一种Agent based的监控软件，对于系统监控而言，很多商业厂商的软件功能都无法很好的做到单一代理的技术，当然我认为BMC的Patrol是例外，它的单一代理技术是我见到最好的。HQ的单一代理技术意味着，通过在一台服务器上部署一次代理程序后，其他的工作就都转到web console上了，在那里，你可以配置代理对各种资源的管理，它的代理能发现非常广泛的基础架构应用：Web， midtier, DB等。由于HQ是一个商业开源的软件，所以它对商业基础架构软件的平台支持的非常好，能支持目前流行的所有基础架构软件包括各种商业的操作系统、数据库、中间件；当然它对开源的软件也能够监控。监控参数很多，配置容易，有开放的接口提供功能扩展开发。从OpenNMS和HQ的各种图形上可以很好的评价和监控和各种IT服务的质量。OpenNMS中的界面中最多的就是对某个节点或者上面的某个服务可用性的计算。
OpenNMS和HQ实现和完成的功能能为IT交付中的：可用性管理、性能管理和服务水平管理提供实时的数据支持，OpenNMS作为总的事件平台，同时它还监控所有的网络设备。HQ用来监控所有重要业务服务器，那些边缘的非重要的业务服务器或者是客户端设备也可以交给OpenNMS来管理，它的无代理监控，对这些设备也能管理的不错。
IT Support
OTRS本身是一个非常不错的工单跟踪系统，它在加载了ITSM模块之后，就把ITIL的很多精髓理论做了很好的诠释和实现。对于很多大型企业用户而言可能会笑话OTRS的简陋，不过实施ITIL的过程，我觉得应该是：把当前的繁杂工作，按照ITIL的几个流程简化梳理的过程，每个流程完成比较单一而纯粹的目标；流程之间又能有一定的集成就可以了。对于OTRS的研究，我目前也处于安装和读管理员手册阶段，没时间细看。选择OTRS的一个最重要原因是，今年也开发了一个事件集成模块，它能通过这个模块与Nagios，openNMS，OpenView，Tivoli等监控产品做事件集成，也就是说告警事件能自动在OTRS中生成事件单，而OTRS的事件管理模块就负责吧入站的事件单自动化的分配给相关的技术支持人员受理解决。详情请参考Automated System Monitoring with OTRS Download这个白皮书是在OTRS.com的网站上下载的，我当初怀疑这个事件集成模块是否是开源的软件，所以在Christopher T. Kuhn 的Blog上问他了一下，他向我确认该模块是开源的，并提供了下载地址。从技术路线上来说OTRS是实现了服务台的功能，并且实现事件、问题、配置和SLA管理；从界面上看它对这些流程的支持是比较简洁的实现，你完全不能把它和商业的服务台软件来比较。不过实施ITIL的道路，我觉得应该是丰俭由人的，我相信一定会有人走简洁路线的。想想Apple的产品，它的设计无比的简洁，它简洁并不丑陋，而且还很cool，很流行。
由于这个方案攒的还是比较匆忙，而且技术上没有实际测试和验证，本文旨抛砖引玉的提出一些思路和想法，未经详细推敲，欢迎提出您的建议。</description></item><item><title>配置管理中几个的误区</title><link>https://martinliu.cn/2008/08/15/e9858de7bdaee7aea1e79086e4b8ade587a0e4b8aae79a84e8afafe58cba/</link><pubDate>Fri, 15 Aug 2008 14:24:25 +0000</pubDate><guid>https://martinliu.cn/2008/08/15/e9858de7bdaee7aea1e79086e4b8ade587a0e4b8aae79a84e8afafe58cba/</guid><description>配置管理的项目可以从CMDB的建设开始，也可以从配置管理的流程建设开始。我在一些配置管理的项目中发现了一些用户容易犯的错误有很多。先说说配置管理，做ITSM的项目，往往CMDB的建设，或者配置管理流程大多不会非常重视，往往作为一种辅助性的环节在项目中得到实施。例如ITSM项目一上来就做服务台，然后是变更管理流程和其他流程；在一些后续的资产管理的项目中CMDB的到重视并建设。其实配置管理流程和CMDB是ITSM项目中非常重要的一环，它建设的效果对整体效果有乘法放大的效果。CMDB的主要功能我认为有两点：
提供唯一、精确的配置信息库，让所有IT团队的人都明确IT管理配置项范围，有了它所有人都起码能清楚“我管理的东西是什么有哪些？”。都说ITIL的语言是IT管理的共同语言，那么配置信息就是这个语言的主语和宾语；从这里可以看到，如果我们没有这样一个准确的配置信息库，我们彼此之间的沟通会出现多大的误解和迷惑。我在用户现场做项目的时间比较多，耳闻目睹很多沟通障碍；这些障碍不是沟通方式和技术造成的，而是大家没有能从一开始就说清楚“谈论的CI对象到底是什么” 实现一定程度上的业务影响分析。往往都是有IT部门牵头做CMDB，后期也主要是IT部门用。有效的业务影响分析能力，可以彻底提高事件管理的有效性。一般用户可能会有一个集中Event Console，从这个console中事件一般是以生成的时间先后顺序查看和处理的。最差的事件管理方式就是这种“先进先出”的处理应对方式。如果你能说清楚，发生事件的对象（配置项）对业务系统的影响程度，那么你就能够做到按照这些事件的优先级别来处理；事件的优先级就是该事件对业务系统所造成的影响的严重程度。需要做到业务影响分析，就必须做业务模型梳理。每一个业务服务和业务流程也是配置项，IT的人也需要能理解业务。 下面列出一些常见错误，这些错误发生在企业做ITSM项目的前后都有可能，不过多是在实施ITSM项目之前，或者上CMDB工具之前，或者过程中。
1）目标不明确，实施结果无法衡量 Goal
所谓目标不明确，并不是说没有目标，而是说：目标定的不太合理。不合理的原因有一下几种：目标过大、目标过于模糊、过于教条、拘泥于ITIL的书本、和实际的工作联系不紧密、没有衡量和控制的方式。在一定的项目时间周期内，总结之前配置管理的问题，作出一个切实可行的配置管理数据库建立目标应该不难，主要以使用为主，不要拘泥于细节。
2）配置项信息混乱，信息结构无序 Scope
这里的“信息结构”是说CMDB的CI配置项信息查看应该是立体的有结构的很直观的数据信息。在访谈的过程中，有些用户在讨论过程中认为配置项组成的信息结构应该是网状的。其实现实中的IT基础架构组件的确是以网状的形式相关联的，这种想法非常实际。不过人们都太偏重IT了，遗忘了IT部门的最终使命“为企业交付各种业务服务”。业务服务就是CMDB数据金字塔的顶端部分。从IT部门提供的业务服务开始来梳理和建立CMDB配置库是一种“自顶向下”有效方式，是IT部门做CMDB配置管理过程中，与业务部门沟通的“翻译机”。自顶向下的方式需要业务部门的配合，或者IT部门内有精通业务的强人。通过这种方式做出了的CMDB，CI之间的构成方式，从宏观上看：屏幕的投影是树根型的，立体的看是金字塔形的，业务系统模型是树根的根部，是金字塔的顶端部分。微观上看，局部可能是网状的，或者是星型的。没有业务服务作为头部，很难说出CMDB的scope究竟是多大，很难说清楚哪些CI可能会在CMDB中出现。
3）配置信息随意堆积，纠缠于过多的CI属性 Level
每一个CI都可能具有非常多的属性，成功选择的标准是：够用就好，精简是王。很多用户都存在的误区就是“复杂比简单好，越复杂越放心”；大多数用户在项目初期的需求整理的时候都觉得，需求提的越全面，越好，越保险。这种心情是可以理解的，毕竟ITSM项目的周期和投入通常都是非常多的。不过对于配置管理来说却，万万不能有这种想法；否则，CMDB的维护和审计的工作量将非常巨大。一个信息量过载的CMDB，就是一个不可用的配置库。一个只有10个属性的CI和有50个属性的CI展现在你面前的时候；你找到你所关心的信息花的时间上看，前者是后者的1/5时间。属性一定要精简，特别是CMDB从零开始的用户。在设计的初期一定预留属性扩展的可能性。
4）疏于配置信息的准确性和实时性 ** update**
CMDB一旦建立了之后，所有用户一定要对CMDB使用起来，要为CMDB提供反馈。最终使用配置信息的人，如果发现信息不准确，需要及时报告配置经理。配置经理需要及时维护。配置经理最重要的职责是，确保每一个大小变更实施完毕之后对要对相关CI做更新。你可以没有正规的变更流程系统去跑变更单，不过我所看到的是很多企业即使没有实施ITSM项目，其实他们手工变更单的流程跑的有板有眼，一点都不差。美中不足的是，变更后的结果没有地方更新和反馈。而CMDB就是这样一个变更结果反馈和汇集的目的地。在大家都频繁使用CMDB，并且每一个大小变更都更新CMDB的完美情况下，CMDB中的信息会随之时间的流逝，愈来愈精确，愈来愈完善。
**5）拘泥于工具的功能，忽略了最终目标 Tool**
我看到的最多的工具是MS Excel，也有使用自开发系统的，可有自开发系统最终丁不住在转向商业工具的 :( 无论何种工具，假如在一个正确的事实和使用的策略下，我觉得都是可以获得CMDB建设的成功的。一个好的工具还是有必要的。在选择一个成品工具或者开发一个CMDB工具时，需要考虑工具的几个方面。工具应该参考或者借鉴某种国际标准，这里的标准是指某种通用模型标准 Common Data Model (CDM)，例如DTMF的 Common Information Model (CIM),或者WMI等。好的工具需要能和其他ITSM流程紧密结合，特别是事件管理、问题管理和配置管理者三个流程。如果这三个流程是建立在某种工具平台之上的，那么CMDB的信息最好能无缝的整合的流程的处理过程中。</description></item><item><title>one minute to build your wap version blog</title><link>https://martinliu.cn/2008/08/10/one-minute-to-build-your-wap-version-blog/</link><pubDate>Sun, 10 Aug 2008 13:01:27 +0000</pubDate><guid>https://martinliu.cn/2008/08/10/one-minute-to-build-your-wap-version-blog/</guid><description>Wap version of my blog **http://tinyurl.com/martinliu ** You could also build yours within one minute. I think it is worth to do, since more and more peoples are surfing from mobile device. You might get a wap link on your home page, I will do it after get this post publish out.
Now, it time to explain how to do a wap blog.
open Google Moblizer in your browser enter your url of your blog, then click go button google moblizer will adjust your blog page to flat wap version.</description></item><item><title>开源软件的能量</title><link>https://martinliu.cn/2008/08/10/e5bc80e6ba90e8bdafe4bbb6e79a84e883bde9878f/</link><pubDate>Sun, 10 Aug 2008 12:03:17 +0000</pubDate><guid>https://martinliu.cn/2008/08/10/e5bc80e6ba90e8bdafe4bbb6e79a84e883bde9878f/</guid><description>可惜yo2.cn开张的太晚了。
否则我的blog http://www.martinliu.cn 就可能在这里了，先注册一个好的名字 opensource.yo2.cn 先呵呵～～ 如果有需要请和我联系，不想浪费这么好的blog地址。</description></item><item><title>2008 Beijing Olympic Game introduce China to the world</title><link>https://martinliu.cn/2008/08/08/2008-beijing-olympic-game-introduce-china-to-the-world/</link><pubDate>Fri, 08 Aug 2008 15:52:40 +0000</pubDate><guid>https://martinliu.cn/2008/08/08/2008-beijing-olympic-game-introduce-china-to-the-world/</guid><description>中午后去超市购物；超市的人可真多啊，大家都在采购备战晚上的奥运哈哈。我也买的毫不手软啊，西瓜、王老吉、可乐、牛肉、蔬菜等等！回家后，先炖上一锅牛腩萝卜汤，昨天立秋，今天贴贴秋膘有不迟。
准时5点就开始收获在电视机前。等待开幕式的开始。开幕式终于开始，虽然视觉上的冲击性不强，不过还是完美的展示了中华文化的精髓。通过四大发明的展示，以东方人含蓄和细腻的手法，把吾国浩浩汤汤2000多年的历史优美的展示与全球世人面前。地球村的创意我觉得非常好，最后刘欢站在最上方高歌一曲，挺好。兴致最好的时候牛腩汤经过几个小时的熬制，也香气扑鼻了，呵呵来上一碗，继续看
总之真个文艺演出，文化气息十足，可圈可点之处也很多；唯一担心的是怕老外们理解不了。现在终于看到中国代表队在姚明的带领下，正缓缓入场；中国体育健儿的队伍可真大啊！！！
中国加油!!! 哈哈忍不住了，我也在blog上喊一嗓子吧，明天奥运的战幕就缓缓拉开了，希望他们拿更多金牌为国争光。
现在中国队走到了中场，期待圣火点燃的那一刻吧。顺便说一句，有人说中国队的服装配色有点借鉴了‘西红柿炒鸡蛋’的色彩，呵呵有点象，的确有点象，而且那时我的拿手菜:) 今年北京的天气，好的是，天公作美，真的憋住，愣是没有下雨；不好的是，桑拿的程度太高了。场内入场的所有运动员，从电视上可以看出都已经是大汗淋漓了，都在等待圣火。烟火，有事一波烟火，整个鸟巢像是个火锅一样，再次沸腾一次。
中国画，由所有运动员参与绘制的一副巨画放到了场地中央，这幅画可谓整场的一个核心线索，这可能是老谋子的idea吧，和拍电影的道理一样，需要有一个线索贯穿始终，像是ice age2里的那颗坚果。不知道以后会把它放在那，细看这画很不错，写意，非常写意，还有点点现代气息。
刘淇开始讲话了。不禁回想起，我在看圣火采集实况转播时候的激动心情，他在希腊的采集圣火的神殿哪里也发言了。LP说他在这发言可谓捡了一个不小的便宜，前人种树后人乘凉啊!!
胡锦涛主席宣布“大会开始！！” :) 呵呵，有一波强烈烟火，太cool了！！ 奥运会旗入场了，八人举着会旗缓缓入场，8人都是奥运的元老人物。现在看到那些在场地周边，做分割线的MM们好像不用再跳跳跳的欢迎了，这些MM已经在入场式的时候跳了快2个小时了，体力不行还真去不了啊，辛苦辛苦了！哈哈！！护旗手开始升会旗，不得不说中国的护旗手世界上最cool，赞一个！！在赞一次天工吧，到现在为止，一滴雨都没下，真给面子啊！
张怡宁右手抓五环旗开始宣誓，她表现的很腼腆：）黄利庭代表裁判员宣誓，慷慨激扬，强！！
我看时间一定要拖到12点整了，不行我先把这个post发布一下啊，一定要讨到八月八的这个好彩头。发布ed
DONE继续，很大很强的一个烟火在鸟巢上空喷出，绚烂啊！！许海峰手持火炬入场，开幕式的最大悬念缓缓揭开了。啊！点燃了高敏的火炬～～～转给李小双，继续跑，传给第四个占旭刚，跑～～这第五个张军该是最后一个了吧，都快是最后一分钟了，我和LP都猜，最后一个是谁呢？刘翔？？第六位了陈中，跑～第七个了，孙晋芳，第八个该是最后一个吧？继续跑～过0点了。火炬在晚上看，真好看，最后一个李宁了，被吊起来到空中，很高，很高，继续升高～～OH my god ，升到最高处，绕嘴上圈，在空中跑，创意啊！！！赞！！！画卷在他下面缓缓打开，画卷始终在他身后，缓缓打开，太强了，弓虽！！！牛啊～～～李宁依然在空中认真的跑着，要绕场一周了，看来，不知主火炬到底在哪里啊？？到了，主火炬终于出现了，点ing。。点了一个导火索，导火索螺旋上升，圣火熊熊绽放在北京夜空～～全城烟火一起点燃，烟火到达等顶峰。一个五环的烟火呀！！我坐在家里可以听到隆隆的烟火声，家里的视野不好，无奈啥也看不到！
刚才急奔向楼顶，想看一眼最后的绚烂，可惜到了楼顶的门口发现，门已被锁，而且上了封条了。外面的烟火声还是有，心里一个字痒啊～～～不过无奈总是难免的，我的奥运开幕式实况转播也要结束了。
动态奥运奖牌榜</description></item><item><title>Systems Monitoring Shootout</title><link>https://martinliu.cn/2008/08/04/systems-monitoring-shootout/</link><pubDate>Mon, 04 Aug 2008 09:26:57 +0000</pubDate><guid>https://martinliu.cn/2008/08/04/systems-monitoring-shootout/</guid><description>Please download it here A paper from Open Management Consortium
This is a paper from &amp;ldquo;2008 Ottawa Linux Symposium&amp;rdquo;. It will give you a nice insight about some great NSM projects. It is talking about OpenNMS, Zabix, Zenoss, GroundWorks and Hyperic, those might b the hottest projects around NMS field. If you are looking for a open source network and system monitoring solution, or you are testing one of them; you should check it out.</description></item><item><title>This post is too later</title><link>https://martinliu.cn/2008/08/03/this-post-is-too-later/</link><pubDate>Sun, 03 Aug 2008 07:45:41 +0000</pubDate><guid>https://martinliu.cn/2008/08/03/this-post-is-too-later/</guid><description>很久没有更新这个blog了，本来想保持每周一帖的频率，不过最近总被一些事情所耽误了。今天终于有空闲坐下来写点什么了。
昨晚无意间发现了这个叫做UnWakeAble的Theme，稍微看了一下马上就更换到这个主题了。这个主题有几个地方非常吸引我：它有自己的配置选项；能配置成2或者3栏的形式；提供3种内置的风格可以切换，这个太空船的黑色风格太吸引我了。我想在没有时间写正经post的时候，用有限的时间调整一下界面风格也不错呵呵，虽然之前曾经发誓，要把主要blog时间都放在提交高质量项目介绍和评论上，不过通过这个blog做适当的娱乐还是未尝不可的呵呵:) 可能是对Wordpress了解的很多了，用的也越来越多了，现在觉得它也可以作为一个公司内部的知识库来使用，知识库有可以说是一种特殊的CMS内容管理系统，它能方便用户查询和浏览相关的知识条目。昨天看了一下wordpress的roadmap，它以后可以提供更多的api，甚至于下离线的编辑内容的功能，我想这些都可以是外部系统和它集成的很好的接口。我说的外部系统可以是：IT管理的服务台系统，现在很多厂商的服务台都有现成的KB模块，不过把知识条目放到wordpress这样一个外部的系统中还是很有优势的。关于把wordpress用作CMS内容管理系统的一些考虑您可以看看这个post
今天去西四的广济寺，途中经过了潘家园市场、虹桥市场、天坛北门、天桥、西单等。途中的景色令我可以说是非常吃惊，奥运真的把北京改变了很多。潘家园门口兜售和田玉的巴郎子（新疆人对少数民族的一种称呼，其实是维吾尔语‘小青年’的意思）没有了，随处摆的地摊也没了，随处乱扔的白色快餐饭盒没了，在路边拉黑活的黑车也没有了。虹桥市场门口的路上以前总能看到的那些专门向老外乞讨的人也没有了。天坛北门的街道两旁真是很干净啊，垃圾、墙上的办证都没了。天桥哪里更是变化巨大，以前道路两边破烂的小卖部都没了。西单更是夸张啊：过街天桥附近打扫的人真多啊，而且以前扫大街的人都是自动化了；没人在骑着老式的保时捷垃圾车，取而代之的是等自动扫街的电瓶清洁车。北京变了，北京准备好了。呵呵我也喊两句口号吧！甚至于我在考虑，开幕式那天晚上，我去哪里看焰火。我里永定门的距离不算远，听说那是放烟火的中轴线上的最南点，暂时把这作为我的plan A了。
我也很想知道，你奥运期间如何度过呢？
[poll id=&amp;ldquo;4&amp;rdquo;] [poll id=&amp;ldquo;5&amp;rdquo;]</description></item><item><title>MDTM：淺談FTP協定如何保留下載檔案的日期 / 時間</title><link>https://martinliu.cn/2008/07/15/mdtmefbc9ae6b7bae8ab87ftpe58d94e5ae9ae5a682e4bd95e4bf9de79599e4b88be8bc89e6aa94e6a188e79a84e697a5e69c9f-e69982e99693/</link><pubDate>Tue, 15 Jul 2008 05:04:57 +0000</pubDate><guid>https://martinliu.cn/2008/07/15/mdtmefbc9ae6b7bae8ab87ftpe58d94e5ae9ae5a682e4bd95e4bf9de79599e4b88be8bc89e6aa94e6a188e79a84e697a5e69c9f-e69982e99693/</guid><description>應該有很多朋友知道，用 FTP 下載檔案的時候，可以設定「保留下載檔案的日期 / 時間」。例如如果妳用的 FTP client 是 FileZilla 這個跨平台的自由軟體（以 2.2.32 版為例）：
編輯 &amp;gt; 設定 &amp;gt; 檔案傳輸設定 &amp;gt; 保留下載檔案的日期 / 時間
Edit &amp;gt; Settings &amp;gt; File transfer settings &amp;gt; Preserve date/time of downloaded files
設定是很簡單，其他的 FTP client 軟體也都有這個設定，一般人知道怎麼設定（自己用的 FTP 軟體）也就夠了。
但是，原理是什麼呢？
我用 ftp preserve date/time of downloaded files 去 Google 撈過來撈過去&amp;hellip;&amp;hellip;
原來，這是取決於伺服器端的，如果妳連上的 FTP server 有支援 MDTM 這個功能，那妳只要在 FTP client 端設定一下，就可以保留下載檔案的日期 / 時間囉。
嗯，既然是通訊協定，一定在某一份 RFC 裡面有定義才是，這次改用 rfc ftp mdtm 撈，就撈到 RFC 3659 ，其中就有 File Modification Time (MDTM) 的定義</description></item><item><title>Running Linux from any machine without installation</title><link>https://martinliu.cn/2008/07/04/running-linux-from-any-machine-without-installation/</link><pubDate>Fri, 04 Jul 2008 14:31:15 +0000</pubDate><guid>https://martinliu.cn/2008/07/04/running-linux-from-any-machine-without-installation/</guid><description>Slax - your pocket operating system
Slax is a modern, portable, small and fast Linux operating system with a modular approach and outstanding design. Despite its small size, Slax provides a wide collection of pre-installed software for daily use, including a well organized graphical user interface and useful recovery tools for system administrators. The modular approach gives you the ability to include any other software in Slax easily.</description></item><item><title>What is Google Infrastructure?</title><link>https://martinliu.cn/2008/06/21/google-infrastructure/</link><pubDate>Sat, 21 Jun 2008 07:01:58 +0000</pubDate><guid>https://martinliu.cn/2008/06/21/google-infrastructure/</guid><description>If you have no idea, you should read this post &amp;ldquo;Google spotlights data center inner workings&amp;rdquo;.
There are some notes I took as blowing.
Google Infrastructure:
clusters of 1,800 servers are pretty routine. an ordinary Google search query that involves 700 to 1,000 servers puts 40 servers in each rack Google has 36 data centers across the globe; Google has more than 200,000 servers; growing every day.</description></item><item><title>盛夏严防服务器中暑</title><link>https://martinliu.cn/2008/06/15/monitoring-temperature-and-fan-speed-using-ganglia/</link><pubDate>Sun, 15 Jun 2008 15:50:31 +0000</pubDate><guid>https://martinliu.cn/2008/06/15/monitoring-temperature-and-fan-speed-using-ganglia/</guid><description>哦不是中暑:-)而是发烧；夏天就要到了，监控服务器的主板温度和风扇是否工作正常有变的比较重要起来了。
今天发现一个文档 Monitoring Temperature and Fan Speed Using Ganglia and Winbond Chips 这个是一个不错的文档，值得参考一下。
文章是写如何在Ganglia中实现对主板温度和风扇的监控。以前也有人问过我这个问题“Ganglia的监控图上为什么没有温度也风扇的图”；相信您看后就知道怎么回事了。
下面是我对关于温度和风扇监控的一点想法：
主板的芯片能提供这些数据的访问给操作系统 操作系统上有sensors这个命令工具用来采集这些数据 有合适的脚本分析上面命令的输出数据转换成能被监控工具（ganglia， cacti，nagios， opennms）采集的格式等 往往这两个参数并不是监控工具的默认采集数据，所以需要扩展采集工具的采集集合，收集并保存这些数据。 在监控工具如Ganglia中显示这些数据，当然如果有自动报警功能就好了，可以及时通知管理员给服务器消暑：） Ganglia是最好的网格或者群集的监控软件，不过当你用它的使用也要注意到下面这个问题：
What does Ganglia not provide?
Ganglia does not attempt to address service monitoring or reporting (unlike Nagios). So far, we have not come across a single monitoring solution that addresses all of our needs effectively.
上面所说的服务监控是说，它的特点不是想Nagios和OpenNMS那样对服务器系统做非常全面细致的监控，它默认的监控指标比较少不过对于监控网格或者群集这种数量巨大的对象来说这些比较经典的指标也够用了，特别是对服务器的可用性，CUP、RAM，网络资源利用率和工作负载等数据的采集也比较够用了。如果你使用它来监控数量不是很多服务器的话，你可以使用它的可扩展性加入任何想监控的KPI。我最喜欢的还是它能把服务做分组，而且垂直的方向上可以加N层的嵌套；这种组织方式能比较好的适用于业务系统众多而复杂的数据中心。</description></item><item><title>相逢一笑告乃翁</title><link>https://martinliu.cn/2008/06/12/e79bb8e980a2e4b880e7ac91e5918ae4b983e7bf81/</link><pubDate>Thu, 12 Jun 2008 04:39:18 +0000</pubDate><guid>https://martinliu.cn/2008/06/12/e79bb8e980a2e4b880e7ac91e5918ae4b983e7bf81/</guid><description>感謝劉征邀請我來這兒。我叫段逸時(Austin Tuan)，網路上常用的暱稱是 PowerOp。
我爺爺在湖南衡陽生長，後來從軍，跟著國民政府軍隊征戰。爸爸是蘇州生的，在台灣台中長大。媽媽則是泰國曼谷生長的華僑。
我在台灣台中生長，現在跟老婆、兩個女兒在台北生活。
我的工作是在電信業做網路管理，主要是 Fault and Performance Management。之前在台灣安捷倫做了快七年，現在則是在 OSI 做了快一年。
興趣是 自由軟體 / 開放原始碼軟體 。
==
標題是兩首詩詞湊出來的，應該不難猜吧 :p</description></item><item><title>A follow-up post</title><link>https://martinliu.cn/2008/06/09/a-follow-up-post/</link><pubDate>Mon, 09 Jun 2008 20:42:08 +0000</pubDate><guid>https://martinliu.cn/2008/06/09/a-follow-up-post/</guid><description>I&amp;rsquo;d like to know about this.
[poll id=&amp;ldquo;2&amp;rdquo;]</description></item><item><title>zenoss opennms comparison/比较</title><link>https://martinliu.cn/2008/05/31/zenoss-opennms-comparison/</link><pubDate>Sat, 31 May 2008 05:52:22 +0000</pubDate><guid>https://martinliu.cn/2008/05/31/zenoss-opennms-comparison/</guid><description>在我做任何比较之前还是先看看Wiki上对一系列网管监控软件的比较，源网页地址在 http://en.wikipedia.org/wiki/Network_monitoring_comparison
上面一共列出了12中不同的开源软件，从13个方面以矩阵的方式来做比较。
Nagios和Cacit都是比较老牌的开源网管软件；OpenNMS是稍微点出现的项目，它集成了前两者的部分优点，界面是Java的界面，后台的自动发现机制非常的方便。Zenoss是一个比较年轻的项目，所谓长江后浪推前浪，它是纯python语言编写的一个软件，架构非常的不错，而其界面做的非常好，面向对象编程的理念处处可见。从根上可以看出它们的主要编程语言各有不同，这也决定了它们的特点和发展方向的不同，这里仅以此作为一个见到的比较和总结。其实我想写一个更好的比较表，如果您感兴趣的话请留言，我们可以一起做一个更好的比较。</description></item><item><title>Zeuux Free software summit @Tsinghua</title><link>https://martinliu.cn/2008/05/31/zeuux-free-software-summit-tsinghua/</link><pubDate>Sat, 31 May 2008 04:59:24 +0000</pubDate><guid>https://martinliu.cn/2008/05/31/zeuux-free-software-summit-tsinghua/</guid><description>现在我坐在清华主教学楼里等待这个自由软件大会的开始。Zeuux社区组织在发一些免费的书籍和及时贴。我也领了几个，在笔记本上贴了三个：
1）GNU\Linux inside
2)GNU牛头
3）GNU&amp;amp;Linux the dynamic duo。
这次也将会见到Richard Stallman，听听他今天能讲点什么。
现在会议还没有开始，已经有很多学生来此等候，好像GPL v3的 T恤比较强手，很多学生都在找自己的号。为了获得Richard签名的人可以购买一本他的文件，附送一件这样的T恤，会后即可获得签名。
发现www.gnu.org网站的速度非常慢，几乎打不开，通往自由的路其实是艰难的:P
写在活动之后：
现在已经是晚上11点，我坐在电脑前上网，把今天活动的收获整理一下。我做的第一件事情是把我的blog的标题改了，logo随后在改。从“LiuZheng&amp;rsquo;s OSS Blog” 到 “LiuZheng&amp;rsquo;s Free Software Blog”。Richard S.的一席话对我来说可谓醍醐灌顶了。我以前把Linux和open source软件都看做就是自由软件，可谓是一叶障目不见泰山。Richard今天把他对GNU所作的所有相关工作都做了一个回顾，并解释了Linux其实是Gnu-Linux的一部分而以，还介绍所谓开源软件的真实来由。这也让我能更加理解他彻底不同意Sun开源策略的原因。Linux的发展和产生依赖于Gnu项目下的所有自由软件，Richard认为如果Linux的发明人没有在当时创造出Linux内核的话，一个GNU free operation system kernel也早晚会产生。我认为Linux的产生也是有他的必然性，它是在软件发展历史上应运而生的；由于它站在了前人的肩膀上，能整合所有相关的自由软件，从而风靡一时，甚至声明远胜GNU。Richard认为开源软件是商业公司利用自由软件谋利的一种手段，open source这个词在商业公司市场宣传的运作下，声势也掩盖了GNU。我发现其实我的一些认识也一直受到潮流的影响，如果我是和Richard站在同一条战线的话，我可以说彻底的被潮流带到沟里去了。总之Richard给我一个清楚的自由软件的发展脉络。他几乎是一个斗士，坚定的认为：任何一个软件用户都要保护自己的自由，彻底的抵制任何私有软件；他把MS，RealPlay，Adaobe等商业软件批斗的非常狠。到结束时，他穿上他那标志性传道士的行头就地化身为自由软件教堂的一个圣徒，来呼唤和号召大家一起行动起来加入自由软件的行列。说实话我作为一个商业软件的从业人员，站在我个人立场上我很难说我是否要站到Richard的行列里，很难做到彻底的变成一个自由软件的卫道士。虽然现在可以说立场还是糊涂的，不过总算头脑边的清醒了，我应该会以这样的头脑来静静看待软件世界即将到来的变革吧！</description></item><item><title>Ganglia install and configure</title><link>https://martinliu.cn/2008/05/24/ganglia-install-and-configure/</link><pubDate>Sat, 24 May 2008 02:15:27 +0000</pubDate><guid>https://martinliu.cn/2008/05/24/ganglia-install-and-configure/</guid><description>我准备安装的版本是ganglia-3.0.7 ， 参考的安装文档是http://www.linuxsir.org/bbs/thread309837.html
rpm的安装会比较省事。rpm安装都会很正常，不过在Suse下面需要注意一下两点：
gmond和gmated的启动脚本不是rpm包中默认装上的那个，那个脚本适用于redhat linux；下载源码编译之后在gmond/ gmated/的文件夹里有后缀为 .SuSE的哪两个文件才对。 rpm吧gmated的web界面默认安装路径是/var/www/http/ ，SuSE下的apache的路径是 /srv/www/htdoc/；安装完后copy或者连接过来 配置：
gmond.conf 更具我参考的安装文档产生这个文件的命令是 gmond -t &amp;gt; /etc/gmond.conf；rpm安装包中有这个文件，如果需要恢复到默认状态可以使用这个命令。 gmated.conf 是服务器端的主要配置文件，详细阅读一下源码包中的那个html文件对这个文件的配置会有帮助 安装过程中出现的问题如下：在启动gmond的时候启动失败，debug一下可以看到下面的错误。
sles:~ # gmond &amp;ndash;debug=9
slurpfile() open() error on file /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq: No such file or directory
udp_recv_channel mcast_join=239.2.11.71 mcast_if=NULL port=8649 bind=239.2.11.71
Error creating multicast server mcast_join=239.2.11.71 port=8649 mcast_if=NULL family=&amp;lsquo;inet4&amp;rsquo;. Exiting.
在所有虚拟机（host-only 网络设置）上都遇到这个错误。一次一个NAT网络的虚机上正常
至今觉得这是一个网络的问题，还没有想出正确的配置和解决方法。如果您有什么好建议请留言。</description></item><item><title>ISO open source software</title><link>https://martinliu.cn/2008/05/16/iso-open-source-software/</link><pubDate>Fri, 16 May 2008 07:30:04 +0000</pubDate><guid>https://martinliu.cn/2008/05/16/iso-open-source-software/</guid><description>There are some projects do have ISO file for downloading. That means you could run this solution with in 20 minutes on a physics machine or a vmware session. You can just download this ISO image file and burn it on a blank cd; then you will insert it into DVD/CD driver of your target machine, after press few enter keys; You finally got all software on this box. Reboot this machine, you get everything up an running on it; including a Linux OS and everything which the solution depends on.</description></item><item><title>Enterprise cloud computing</title><link>https://martinliu.cn/2008/05/12/enterprise-cloud-computing/</link><pubDate>Mon, 12 May 2008 00:57:06 +0000</pubDate><guid>https://martinliu.cn/2008/05/12/enterprise-cloud-computing/</guid><description>http://www.datacenterknowledge.com/
这个网站还是不错，有很多关于数据中心的知识。它应该主要是收集业内在该领域里新咨询，先收录一下，回头慢慢学习。
这个vido我觉得也可以学习一下。IBM和Google结成联盟开展企业云计算方面的研究，可能会建立“IBM-Google cloud ” 这个云会运行在Linux上，使用Xen 做系统虚拟和Apache Hadoop。同时Google和IBM都有自己巨大的数据中心，还不知道它们将来的研究成果会运行在谁家的设备上，让我们拭目以待。
Tips：
有些网络视频比较大，在线看如果网速比较慢的话可能不能正常浏览。很多下载视频的工具好像都是要收费注册的，否则只能下载60％。我发现的一个方法是，把视频网址输入到这里 http://www.techcrunch.com/get-youtube-movie/ 它会给你生成一个http的下载连接，点击后一般的http下载工具就能下整个视频了，之后用视频浏览的软件查看，正在缓慢下载上边的视频。不知道你有什么好方法或者是工具可以推荐呢？
http://youtubedownload.altervista.org/ 是我现在所使用的，不过下载的太慢了，不能支持多线程下载。</description></item><item><title>Install Oracle 10.2.01 on OpenSuSE 10.3</title><link>https://martinliu.cn/2008/05/08/install-oracle-102-on-opensuse-103/</link><pubDate>Thu, 08 May 2008 01:51:16 +0000</pubDate><guid>https://martinliu.cn/2008/05/08/install-oracle-102-on-opensuse-103/</guid><description>A) Download 10201_database_linux32.zip from Oracle website.
B) Download 10gR2_openSUSE102_introduction.pdf and ora.rpm from ftp ftp.novelŀcom
C) Install Oracle, following quick steps:
1. Install openSUSE 10.2 with &amp;ldquo;C/C++ Development&amp;rdquo; selection.
2. Download and Install orarun package.
3. Enable and set password for newly created user oracle by orarun.
4. Set updated kernel parameters by executing /etc/init.d/oracle start.
5. Download and unzip Oracle 10gR2 Database SW.
Edit file database/install/oraparam.ini to add &amp;ldquo;SuSE-10&amp;rdquo; to line #39.</description></item><item><title>Deploy asset management solution</title><link>https://martinliu.cn/2008/04/28/deploy-asset-management-solution/</link><pubDate>Mon, 28 Apr 2008 02:01:06 +0000</pubDate><guid>https://martinliu.cn/2008/04/28/deploy-asset-management-solution/</guid><description>This is my second virtual appliance, it suppose to work for production. This is a 100% open source solution for inventory/asset management, it including OCS Inventory NG and GLPI. I encourage you to deploy it in your school or company.
About virtual appliance / 关于此虚拟应用
OpenSuSE 10.2 (root password is martinliu)
LAMP+Perl
OCS Inventory v1.02 RC1
GLPI v0.70.2
bridged network</description></item><item><title>如何获得OSS支持？</title><link>https://martinliu.cn/2008/04/24/e5a682e4bd95e88eb7e5be97osse694afe68c81efbc9f/</link><pubDate>Thu, 24 Apr 2008 16:48:12 +0000</pubDate><guid>https://martinliu.cn/2008/04/24/e5a682e4bd95e88eb7e5be97osse694afe68c81efbc9f/</guid><description>这周我在繁密的出差当中，偶尔能用Blackberry看一眼邮件，不过完全没有可能回答读者任何问题。最近这两周有愈来愈多的博客读者给我发了邮件，问我了一堆问题，我很希望能给他们一个好的答案，不过这种可能性太小了，尤其是在这样的时间里。通过他们焦急的情绪，我忽然想到这个问题：如何获得开源软件的相关支持？其实这也是我的一个问题。于是乎我想到下面的一些东西。
**搜索 **是最主要的一个途径，你会发现很多一般问题都能获得答案，仔细选择和尝试不通的关键词
**邮件组/论坛 **每种开源软件都有这两种或者至少一种用户支持方式，其实这是用户互助的方式，用户之间的帮助往往更快。这些就是社区的载体，有些邮件组比较活跃，有些论坛比较活跃；例如：OpenNMS的邮件组就非常活跃，我订阅了其中的几个子项，问出问题往往能得到很快回复，其实OpenNMS的人每周有不人负责回答问题；Cacti的论坛就相当好，那里也是用户直接互相同享模板的主要地点，解决问题的功能也相当好。很多国内中文论坛也非常好，推荐一个http://www.itnms.net/ 更多的还需要你自己去发现。
**线下用户团体 **我参加国BLUG的线下活动，感受非常深刻，当你面对很多来自不同背景不同技术特长的OSS认识的时候，找到合适的高手并不是困难的事。不要躲在网络后面捣鼓开源软件，走到现实世界来享用它吧。
**商业支持 **有些开源软件有两个网址 oss.org 、oss.com；往往.com网址上有商业支持的说明，商业和开源并不矛盾，更具你的需求购买商业支持也是一个非常现实的方式。
**聪明问问题 **如果你遇到问题，首先要学会正确描述问题，问题的描述信息包括：软件版本、运行环境、出错情景，以及其它任何关键或者有用的信息。很多软件都运行在某种技术堆栈的最高层，下层的环节包括OS、DB、Web、Php语言等；你应该清楚如果是这些环节出错，那么你该去响应的社区求助，要问对人，不要问错人，也不要问傻问题。
**友好的交流 **每当我遇到一些开源高手的时候，幸运的是他们非常的nice，我可以轻松的问任何问题，无论简单、还是复杂。技术思想的沟通应该是一种愉快和友好的体验，保持一种谦虚正常的心态，这是自身素质和修养的表现。
**语言 **对所有非英语人士，英文是必须要会的，英语不灵的话需要好好补习补习。
**支持我的读者 **推荐通过留下comment的方式问你的问题，发给我邮件我很容易忽略，而comment是我必须处理的。如果我有答案的话，我会在3内给出回应；超过3天的话表明，很可能我目前还没有一个合适的答案。在留下问题的同时，一定多面出击寻找答案，别在这守株待兔。
**关于此博客 **定义如下：技术型、记录型、日志型、开放型和共享型。对我自己来说，它是我记录研究开源软件的一个载体，是我向需要这方面信息的人分享的一个窗口。它不具有任何商业性，不承诺提供任何程度的支持。通过这个博客有相投兴趣的人也能相互交流。</description></item><item><title>Open Source Ticket Request System - OTRS 2.2.6</title><link>https://martinliu.cn/2008/04/21/open-source-ticket-request-system-otrs-226/</link><pubDate>Mon, 21 Apr 2008 02:16:20 +0000</pubDate><guid>https://martinliu.cn/2008/04/21/open-source-ticket-request-system-otrs-226/</guid><description>I made a OTRS 2.2.6 virtual machine for anyone who wants to test both OTRS and OTRS::ITSM. It was built on OpenSUSE 10.2, including OTRS 2.2.6 and OTRS::ITSM 1.0.94. OTRS::ITSM implements ITIL (R) focused IT service management. OTRS::ITSM 1.0.94 is still on Beta, you might have some bugs when using this virtual machine. Please download from my box.net, if you have an comment please just let me know. I&amp;rsquo;d like to invite you to improve this virtual machine if you have any good ideal.</description></item><item><title>Clouds are coming</title><link>https://martinliu.cn/2008/04/18/clouds-are-coming/</link><pubDate>Fri, 18 Apr 2008 15:05:23 +0000</pubDate><guid>https://martinliu.cn/2008/04/18/clouds-are-coming/</guid><description>最近两周最吸引我的TAG是这个词“cloud computing”。在我前一个文章中稍微展望了一下云计算的前景“云计算吧电能转化成计算能力，然后向用电一样的来使用，我们甚至不需要使用PC这样的个人信息话设备来管理我们的信息，所有的信息和信息的处理都在云上发生”。在了解了更多的信息之后，这些可能实现，但是这种巨变需要时间，而且可能是很长时间；清醒之后不得不佩服Google在这方面的宣传。
理性认识云计算的简单方式，扫扫盲：
阅读一下wikipedia对‘cloud computing’的解释 听听John Willi的两个Podcast 多看看非google来源的信息：） 读读这个GRIDtoday的文章 &amp;ndash; &amp;ldquo;Clouds are Looming and We Love It&amp;rdquo; 很多厂商都在参与这个热点，open source也要加油，期待开源在这个领域的发展。</description></item><item><title>Using Ganglia for cluster and grid monitoring</title><link>https://martinliu.cn/2008/04/16/using-ganglia-for-cluster-and-grid-monitoring/</link><pubDate>Wed, 16 Apr 2008 09:41:06 +0000</pubDate><guid>https://martinliu.cn/2008/04/16/using-ganglia-for-cluster-and-grid-monitoring/</guid><description>Ganglia是一个用来监控群集和网格计算环境的软件。它是可以扩展的分布式监控系统，它基于多播协议，数据存储和传输的格式都是基于开源的标准：XML/XDR/RRDTool/APR/Apache/php等。
应用Ganglia的几个理由：
在一个点上监控包含很多服务器的群集，单个cluster内服务器的数量比较多，需要从整体看某个cluster的可用性和性能，也要能看到单独某个机器的运行情况。 监控分布式的cluster环境，例如跨网段和地域的灾备的环境。 需要监控系统能分N级的查看方式，以银行为例：北数据中心&amp;ndash;&amp;gt;网络银行业务&amp;ndash;&amp;gt;个人网银系统&amp;ndash;&amp;gt;web server 群集&amp;ndash;&amp;gt; WebSvr001；可以按业务逻辑和系统架构逻辑。 需要724365的监控整个系统，能得到可用性、性能和容量等方面的报表。 应用Ganglia的几个好处：
监控能力的无限扩展，被管理服务器数量达数千个甚至根多。 纯web前端，apache和php的应用页面方便定制 强壮的系统结构，并且具备可以任意扩展采集数据KPI的特点 适合高性能计算或者网格计算环境。 Ganglia应用需要注意的方面：
在每一个节点上需要部署一个代理程序，考虑到对代理配置的变更的工作量，在部署代理之前，需要彻底的分析需求，尽量减少部署过程中配置变更带来的多于调试的工作量。 部署后期的变更工作，如果比较频繁的话将导致后台维护工作量增大，可以考虑使用一些开源的软件分发和自动化配置管理的工具。这些配置的初始化工作可以与OS的安装部署工作一起考虑。 它被很多大学和专业机构研究并使用，所以有非常多的专业文档可以参考，哪行文档多分析了Ganglia的系统架构和特点，多系统的原理介绍的非常细致。下面是我收集的几个关于这个软件的文档请参考。并且在它们的网站上也可以看到很多相关的资源连接，都是非常好的实施方面的详细文档。
If you need more detail please take look those documents below.</description></item><item><title>DO you have a google App Engine?</title><link>https://martinliu.cn/2008/04/10/do-you-have-a-google-app-engine/</link><pubDate>Thu, 10 Apr 2008 05:23:44 +0000</pubDate><guid>https://martinliu.cn/2008/04/10/do-you-have-a-google-app-engine/</guid><description>There is what I got from http://appengine.google.com/
Thanks for checking in! When space in the Google App Engine preview release becomes available, we'll notify you by emailing liuzh66@gmail.com
Don't worry--you don't have to wait to start building applications! You can get started now by downloading our SDK and reading through our documentation.
I read a post last night, Developers, start your engines Even I am not a developer, I definitely look forward to sing up appengine.</description></item><item><title>Get right-size of OSS</title><link>https://martinliu.cn/2008/04/05/get-right-size-of-oss/</link><pubDate>Sat, 05 Apr 2008 14:19:20 +0000</pubDate><guid>https://martinliu.cn/2008/04/05/get-right-size-of-oss/</guid><description>6yeas ago, I had a open source talk with my friend Tom Chen. The topic was &amp;quot; does oss suppose to work for large enterprise for mission critical business?&amp;quot; Until last week, I thought I found answer by myself; the OSS does works for bank business in China. During last week, I deployed my company&amp;rsquo;s product on CCB&amp;rsquo;s machines. Those machines are part of e-banking system, 1/4th of them are on Redhat Enterprise Linux 4 update6.</description></item><item><title>PostgreSQL基本操作指南</title><link>https://martinliu.cn/2008/04/03/postsql-basic-admin/</link><pubDate>Thu, 03 Apr 2008 08:25:44 +0000</pubDate><guid>https://martinliu.cn/2008/04/03/postsql-basic-admin/</guid><description>安装
我的安装环境是虚拟机下面安装的CentOS4.4；在安装的时候需要注意的是：在安装选择的时候PostgreSQL一共有十几个可选的包，把可能会用到的包都尽量选中，否则就要手工去安装了，手工解决包之间的依赖关系烦啊。从光盘上装的好处就是它自己帮你把用户和启动脚本建好了，安装后需要检查如下两个文件：1）/etc/init.d/postgresql是否存在；2）/etc/passwd里面有没有postgres用户。
启动数据库
第一次启动，用root用户登录，运行命令：[root@RBA init.d]# service postgresql start ；如果需要数据库在系统启动是就启动的话需要运行：
[root@RBA init.d]# chkconfig postgresql on ；
检查结果
[root@RBA ~]# chkconfig --list postgresql
postgresql 0:off 1:off 2:on 3:on 4:on 5:on 6:off
数据库管理
先切到postgres用户 su postgres
新建一个数据库 createdb amp
新建一个超级用户，需要在shell下运行：
bash-3.00$ createuser amp
Shall the new user be allowed to create databases? (y/n) y
Shall the new user be allowed to create more new users? (y/n) y
链接到数据库之后，确认以下：
amp=# \du</description></item><item><title>虚拟让你轻松玩开源</title><link>https://martinliu.cn/2008/04/02/vm-jumpbox-rpath-play-oss/</link><pubDate>Wed, 02 Apr 2008 06:46:29 +0000</pubDate><guid>https://martinliu.cn/2008/04/02/vm-jumpbox-rpath-play-oss/</guid><description>开源一般都是谁在玩？我觉得还是开发人员比较多，通常有开发背景的人才会比较轻松的去下载源代码，编译并运行。现在网上有很多能让您轻松搞定开源软件的方法，虚拟技术的发展使我们能更轻松的获取并运行开源的解决方案。向往糖果盒子中放巧克力一样容易。
最近我收到了几个OTRS的新版发布的新闻邮件。先说说关于OTRS的一些新闻，2008-03-31发布了最新的一个版本 OTRS 2.2.6 (Ipanema)。这个版本是一个2.2.6的安全补丁修复版，修复了一些安全的bug，同时有提供了另外两种语言的支持：土耳其和越南语；当然OTRS是能够支持简繁体的中文的。而且关于语言方面的翻译对照表也是可以自行修改的，可以把流程当中的一些术语翻译成符合你企业实用习惯的名称。OTRS后台能支持非常多的数据库，包括Oracle，MS SQL等非开源数据库，它的核心程序是用Perl写的，这些程序运行在Apache web服务器上，客户端是用的纯web的方式，后台的管理提供Web和命令行两种方式。它的安装对于我来说不是很方便，安装文档中并没有写的很详细需要哪行Perl的包，apache上需要安装哪行Perl相关的东西；不过您对Perl非常熟练的话相信没有这个问题。导致的问题是我在安装了ORTS之后，它或者它的某些程序运行不了。
总结一下体验开源软件可能的一些步骤：
安装某个版本的Linux 下载开源软件的安装包或者源码，开发人员可能更多回去下载源码，编译安装 寻找次软件相关的安装文档和攻略，一步一步的照做。 配置系统来满足次软件的安装和运行条件 管理和运行该软件需要的服务，例如MySQL，apache等 运行该软件 继续查看软件的使用文档，学更多内容，体验感兴趣的功能 在这一个过程中可能遇到的问题有：
痛苦与重新安装操作系统，往往系统中的一些包会缺少或者版本不符合安装需求，如果对Linux系统包管理不熟练的话这是最容易出现的问题。 痛苦与对底层支持应用的配置和管理，底层依赖的系统服务可能有数据库、web服务器或者应用服务器等；至今记得我第一次被迫在PostgreSQL中创建数据和用户的痛苦 有些OSS项目文档做的非常好，有些不好，那么安装和配置OSS的过程也可能会非常麻烦；毕竟很多配置文件的修改都需要手工修改配置文件 那么如何清除体验OSS的拦路虎，轻松无痛体验OSS呢？
应用虚拟技术可能是一个比较好的方式，目前我找到两个比较好的网站能提供OSS虚拟应用下载的，如下所示。
http://www.rpath.com/rbuilder/
http://www.jumpbox.com/
这两个网站的区别是：JumpBox是提供开源软件包下载和相关服务的，当然下载肯定是免费的；rPath不但提供下载而且能给你空间去攒一个你自己的虚拟应用。
当然VWMare的网站也能提供这些虚拟应用的下载：http://www.vmware.com/appliances/
这里不想讨论虚拟技术的好处，不过它确实给体验和应用OSS带来很多方便。我第一次下载的虚拟应用是Zenoss，下载总共花了10分钟，下载的过程当中我在看Zenoss的文档，下载的虚拟机运行起来之后，我做的第一件事情就是运行自动发现网络设备的命令了。
通过虚拟这个桥梁，更加节约了我们体验和应用OSS的时间。我想这应该是开源和虚拟共同给我们带来的好处，道理很简单如果你下载并且使用一份包含Windows操作系统的应用，而没有给MS交钱的话，那么你就是盗版使用Windows了。更没有人会给你免费安装配置一套商业应用软件。
那么让我们从体验OTRS开始把，什么是OTRS请参考本博客中的文章。你可以从JumpBox下载并运行OTRS2.2.6，下载地址是：http://downloads2.jumpbox.com/otrs-1.0.1.zip</description></item><item><title>化繁为简</title><link>https://martinliu.cn/2008/04/01/simple-is-everything/</link><pubDate>Tue, 01 Apr 2008 12:27:26 +0000</pubDate><guid>https://martinliu.cn/2008/04/01/simple-is-everything/</guid><description>这几天我对blog做的做多的工作就是找一个好看的Theme。由于受blogspot的影响，所找到的都是黑色两列的；后来觉得样式还是太花哨了，花哨的外表和化繁为简的思想不相投啊。简单并不意味着丑陋，想想Apple就行了，看看它的产品吧，外观上无不简洁大方。
今天对blog做了一些简化工作：
对左侧模块的精简，去掉了不需要的模块，把模块标题字数减少。 删除了所有之前下载的Theme，以后就用Wordpress默认的模板。 删除了不用的插件，把Google sitemap插件装好。 导入以前Blogspot里的文章 删除了站内不需要的文件，数据库和配置。 wordpress默认theme是我唯一只能挑出最少毛病的模板，其他的模板总体来说还是可以的，不过总有至少一个让你不能忍受的缺陷，这也成了删除它的不二理由。
回归wordpress默认theme让我更加关注在它本身的功能上，让我更专心在内容质量上，同时降低了以后的升级工作量。联系一下开源软件(Open Source Software)，OSS也都以简为美，简单而开放让OSS绽放了无限魅力。如果没有wordpress的简单开放，那么就没有全球这么多的bloger天天去网上淘好看的theme和插件了；就不会有这么多的开发人员了，他们的创造使得wordpress魅力绽放。
OSS基本上都是功能注重型的，开发人员都关注软件的核心功能，OSS的简单开放一定会被人们更加关注。</description></item><item><title>搬家成功纪念一下</title><link>https://martinliu.cn/2008/03/29/moveback/</link><pubDate>Sat, 29 Mar 2008 05:08:28 +0000</pubDate><guid>https://martinliu.cn/2008/03/29/moveback/</guid><description>纪念一下吧~~~从blogger搬到此处，真的非了很多的周折~
本博客介绍：
我曾经有过好多个Blog，其中最喜欢是 http://lzheng.blogspot.com。在这个Blog之前我曾经在chinaunix.net上有过两个blog，一个 okwiner.cublog.cn,后来有专门为OpenNMS新开了一个 opennms.cublog.cn； 其实对这两个blog更新的还是挺多的，特别是第一个CUblog。不过后来，还是觉得google的blog有非常多的功能，就把以前写的好的文章都搬 去blogspot了。目的有二，一来是想用一个功能能强大的blog，二来呢觉得google对自己的blog的搜索一定会更好，通过google可以 能带来更多读者。不过不幸的是去年两会的时候blogspot就被封了，期间偶尔也开放过一两。有一次我还以为真的是有恢复了，一夜没睡觉，更新了 blog的样式准备重新开始继续更新。可是第二天就有访问不了了，其实平时在公司或者在公司的VPN上是可以访问的，由于是走的国外的网络；从blog流 量统计上可以看出，http://lzheng.blogspot.com的访问量是平均大约每天12个，访问者基本上都是从国外和港台地区。不过我觉得我的读者是应该面向国内的，写这个博客的目的还是向国内的中文用户提供开源的信息和技术。所以就申请了自己的域名，购买了一个虚拟机（LAMP），在虚机上安装了wordpress。wordpress和blogspot的内容是可以互相兼容的，把blogspot里的文章导出成xml文件在导入到这个站点当中，这样完成了blog的搬家工程。工程虽然不是很浩大，不过毕竟还是费了一番周折，目的只有一个，以前写的东西有些还是有用的舍不得丢。
以后会把我在开源方面的心得和想法都更新到这个博客上，希望能够为您提供一点点的帮助。在这里呢会对开源技术提供全景式介绍，做的力求比较全面内 容。不过我一直以来呢是做IT管理这个方向的，所以从我的文章分将有70%以上是这方面的内容，30%介绍其他内容。不过您如果有其他任何相关的想法也欢 迎和我探讨。</description></item><item><title>Hyperic HQ 3.2 new features</title><link>https://martinliu.cn/2008/02/02/hyperic-hq-32-new-features/</link><pubDate>Sat, 02 Feb 2008 06:02:00 +0000</pubDate><guid>https://martinliu.cn/2008/02/02/hyperic-hq-32-new-features/</guid><description>If you&amp;rsquo;d like to check out release note, please click here. http://support.hyperic.com/confluence/display/DOC/HQ+3.2+Release+Notes
I had a quick install on RHEL 5. For some features what I saw, I took some screenshots as bellowing. I hope this helps you to understand what&amp;rsquo;s new in 3.2 and save a little bit time for you if you do not wants to install it. I will describe in Chinese.
New Nav menu 新导航菜单
导航菜单的名称变成了：Dashboard &amp;ndash; Resources &amp;ndash; Analyze &amp;ndash; Administration 菜单的风格稍微有一点变化。Analyze下面可以进入Alert Center去查看报警信息。我觉得3.</description></item><item><title>Build Zenoss 2.1.2 on Redhat Enterprise Linux 5</title><link>https://martinliu.cn/2008/01/30/build-zenoss-212-on-redhat-enterprise-linux-5/</link><pubDate>Wed, 30 Jan 2008 13:22:00 +0000</pubDate><guid>https://martinliu.cn/2008/01/30/build-zenoss-212-on-redhat-enterprise-linux-5/</guid><description>Well, it is the first time to running a RHEL 5 for me, at same time got zenoss built successfully on it. zenoss-2.1.2 was build from source, the whole process went a while since RHEL is in one of my VMware session; CPU %sy was pretty high during building source code.
Build zenoss-2.1.2
The INSTALL.txt file is good enough, my installation how-to can be really sample:
Read INSTALL.</description></item><item><title>网管系统的测试工具</title><link>https://martinliu.cn/2008/01/21/trap-tools/</link><pubDate>Mon, 21 Jan 2008 17:34:00 +0000</pubDate><guid>https://martinliu.cn/2008/01/21/trap-tools/</guid><description>很多网络系统管理软件都有Trap管理的功能，在系统的安装和配置过程中；验证系统是否能正常处理Trap是很麻烦的事情。原因有很多，发送trap的设备没有，设备上的snmp没有启用，或者设备都正常，到网管系统的网络可能有防火墙吧snmp给堵住了。
为了方便的测试和配置网络管理监控系统，需要手工生产和验证trap的发送和接收。最近偶然在网上发现了这样几个免费（非OSS软件）软件工具，可以做这件事。
下载的网站是：http://www.ncomtech.com/ 下面吧我所下载和测试的软件做一个小结，希望对您有所帮助：
Trap Receiver http://www.trapreceiver.com/ 是一个Windows程序非常小，安装了之后会在windows安装一个服务。程序的启动目录是C:\Program Files\Trap Receiver\TrapRcvr.exe 程序界面非常简单，如下图所示：
点击configure按钮后可以做一些配置：Action －－当收到某些特定的trap是出发邮件、声音等动作；logging－－把收到的trap信息按照某种格式记录在文件中；Mibs－－导入目标设备的trap文件，让这个接收器能认识到另外的trap格式。还有其他配置信息也非常简单。
**TrapGen **http://www.ncomtech.com/trapgen.html 顾名思义－这就是一个手工生产和发送trap的工具，是一个命令行工具。example: trapgen -d 192.168.2.3；上图中的第一条和第三条就是用这个命令发出的trap。欲知详细帮助信息，使用&amp;quot;trapgen -h&amp;quot; I/F Spy http://www.ncomtech.com/ifspy.html 是一个网络接口枚举工具，它通过snmp协议去访问目标设备的IFMIB信息，显示所有IFMIB相关信息。 UDP Listen http://www.ncomtech.com/udplisten.html UDP协议的监听程序，是命令行工具，有linux和Solaris版，能用作一个debug工具。 Thingy http://www.ncomtech.com/thingy.html是一个Windows下的GUI工具，能帮你监控三个SNMP指标，采集并做大于等于和小于的逻辑判断然后显示不同的信号灯。 这几个小工具都很小，都能在windows下安装和使用对网络系统监控软件的安装、配置和排错应该有一定的帮助。如果您有什好的小工具也请回复一下本文。</description></item><item><title>Hyperic HQ Engerprise 3.1.4 测试报告</title><link>https://martinliu.cn/2008/01/12/hyperic-hq-engerprise-testing/</link><pubDate>Sat, 12 Jan 2008 15:26:00 +0000</pubDate><guid>https://martinliu.cn/2008/01/12/hyperic-hq-engerprise-testing/</guid><description>多系统/跨平台支持
如下图所示，我安装了并运行了四个代理程序。HQ的服务器是安装在我的笔记本上的是Windows XP平台的。HQ管理服务器在windows下的安装是非常简单的，两分钟就能完成。安装包中包括了Jboss和PostgreSQL。其它三个测试的代理程序分别安装在OpenSUSE Linux 10.3 （VM），AIX 5.3 和 Solaris 10 （5.10），代理程序的安装过程非常简单，需要注意的是保证代理和管理服务器的时钟同步。否则数据收集和显示的时间会错位。
对不同平台的数据采集是不同的，代理能根据操作系统而已采集不同的数据指标；比如CPU的监控指标windows、linux，Aix和Sun都有细微差别。
Dashboard首页－－仪表盘
HQ登陆后的首页，第一个感觉是－专业。算是一个Portal门户界面。页面顶端是最新的两个报警信息，和水平导航条。右边的模块有：资源搜索、保存的资源图、可用性图和最近增加的平台等。右边的模块有：自动发现、最爱资源，最近报警、控制动作问题资源和监控指标视图等。整体来看：所有的模块都可以配置、拖拽、添加和删除；您可以按照自己的喜好设置布局。对于网管来说：最近报警、和问题资源和监控指标视图应该是非常重要的；通过这些内容可以立刻了解到所关心的资源和服务的整体状况。
浏览资源
Platforms平台－－四个监控对象：所显示的是所有被监控对象，HQ主要是Agent based的监控方式，当然也可以通过snmp方式监控网络设备，不过这个我没测过它监控网络设备的能力。我安装测试的是HQ企业版，所以我只能监控到4个被监控对象；当然如果是付费用户的话就可以增加被管理目标的数量了，多话钱是肯定的了；好像HQ是按照被监控节点的数量收钱的。测试这个企业版的目的是，浏览一下它所有的功能，下面所说的有些功能是企业版才有的开源版本是没有的。
Servers服务器－－21被管理服务器：HQ的自动发现功能不仅能发现到服务器上的基础资源（CPU、文件系统和网络）；还能自动发现被监控平台上的数据库、web和App服务等。这些服务有的是需要一些配置才能采集到数据的，例如对数据库的监控，MySQL需要在HQ服务器上输入一个MySQL的用户名和密码（密码不能为空），这个用户需要有能运行status命令的权限。Oracle数据库需要按照HQ页面上的提示在数据库实例上，用DBA的权限运行一个命令，也建立一个用户。代理程序是通过这个用户通过JDBC链接到数据库上采集监控指标的。对于Apache来说，是需要配置Status模块的。HQ也算得上是单一代理的监控方式了，这一个特性是非常重要的；和BMC公司的Patrol产品有些相似。单一代理能很好的降低被监控服务器的额外负担。
告警事件规则
默认情况下所有HQ里没有任何一个报警规则的。不过你可在它的问题资源模块上看到OOB次数。OOB是Out Of Bound的简称，意思是超出边界，那么边界在那？边界在Baseline上，baseline会在每几天算一次，它并不是平均值，某个监控资源的实际忙闲程度水平的参考面。例如如果你的CPU平时都不超过30％的话，它的基线可能是20％，如果某次采样数据是24％了，OOB的数量就被加一；它表明该资源的使用异常了，需要引起你的注意了。HQ企版可以设定固定fix阀值，也可以设定动态阀值。所谓让很多企业级用户梦寐以求的动态阀值，其实就是比对BaseLine来报警的机制。HQ的报警规则可以是：例如CPU使用率超出Baseline的15％；那么这样CPU使用率的报警范围就是动态的了。报警规则的设置可以根据不同的platform而定，可以给某了platform定义一套默认的规则级应用到所有监控对象上。还能在某个监控对象上设置特殊的报警规则。报警条件可以是多条件的逻辑判断。报警事件可以每次触发时都发出，也可以在某个时间段上持续到达多少次才发出，发出的告警信息可以发给某个人或者某组人，还能在时间内升级等。显然这就是某些用户梦想中的事件压缩、峰值抑制、事件升级等功能。HQ的企业版还能从事件上触发Action。
报表中心
默认的报表好像是有7个，可以输出成PDF，excel，csv和html格式。不得不说的是HQ的数据采集方式应该是从HQ服务器上向Agent发起的，取得了数据后，保存在Postgresql数据库中。HQ服务器端保存了所有数据，不过如果在某个时间端，HQ服务器不能和agent通信的话，这段数据就是空白的。这一点可呢功能和所有其它开源软件都一样。而CA的UDPM和BMC的Patrol是不同的，Agent采集到的数据可以短期的保存在被管服务器端；采集数据的连续性不受网络影响。
总结
HQ企业版的功能太强大了，可以与商业软件媲美；单基于Baseline的动态阀值报警就是Big four所不能提供的。不过企业版是不能用的：虽然能使用到所有功能，不过只能监控4个服务器。在浏览HQ网站文档的时候，某个功能如果后面有一个红色的星号，那么它就是企业版的功能，需要付费使用了。不过它开源版的功能已经非常不错了，而且有这么优秀的一个框架使用；能支持二次开发和扩展。下次在提供一个开源版的测试报告。</description></item><item><title>Top 100网络安全工具</title><link>https://martinliu.cn/2008/01/04/top-100-security-tools/</link><pubDate>Fri, 04 Jan 2008 15:25:00 +0000</pubDate><guid>https://martinliu.cn/2008/01/04/top-100-security-tools/</guid><description>＃１Nessus : 首要的UNIX 弱点/漏洞评估工具
Nessus是最好的网络漏洞扫描工具之一，此软件最好是运行在UNIX上。它被持续不断地更新，有超过11,000的免费插件(但是需要注册或者接受EULA)。主要的特点包括远程和本地的执行安全检查，带有GTK图形用户界面的client/server架构，一个用来写自己的插件的内置脚本语言。从Nessus 3开始停止开源 now closed source，但是他依然是免费的除非你想要最新的插件。查看所有的漏洞扫描器 vulnerability scanners
＃2 Wireshark :附着在Internet上的嗅探器
Wireshark (在2006年夏之前名为Ethereal )是一个Unix和Windows上fantastic的开源网络协议分析器。它能让你分析在线的网络数据和捕获的数据文件。你能方便的浏览捕获数据，深入研究到你需要级别的数据包的细节。Wireshark还有几个强大功能包括，包括丰富的过滤显示语言和能去查看TCP链接重建的过程。它能支持几百种协议和网络介质类型。一个需要注意的方面是Ethereal现在遭受这很多可远程利用的安全漏洞，因此保持它的更新和提防在非信任的或者敌对的网络上运行它。查看所有包嗅探器 packet sniffers
＃3 Snort :所有人都喜欢的开源IDS 这个轻量级网络入侵检测和阻止系统擅长于IP网络上的流量分析和包记录。通过协议分析，内容搜索和各种预处理，Snort能探测上千种蠕虫, 利用漏洞企图，端口扫描和其他可疑行为。Snort使用一个弹性的基于规则的语言去描述它应该收集或者忽略的网络通信流量，和一个模块化的检测引擎。从此链接产看更多的基本分析和安全引擎，有一个Web用户界面来分析Snort告警。开源的Snort被一些个人、小企业和部门用的很不错。它的母公司SourceFire提供了一个非常全的产品线；具有很多的企业级功能和实时规则更新。它们提供了一个免费的（需注册）的5天延迟的规则更新源，你还能在Bleeding Edge Snort找到很多非常好的免费规则。 查看所有入侵检测系统intrusion detection systems
＃4 Netcat :网络瑞士军刀
这个简单的工具通过TCP或者UDP网络链接读写数据。它被设计为一个可靠的后端工具：能被直接和通过其他程序或脚本简单地驱动执行。同时，它也是一个功能丰富的网络调试和探索工具，因为它能生成几乎所有类型的你需要的网络链接，包括接受绑定了端口的外来链接。最初版本的Netcat released 是Hobbit在1995年发布的，但是不论它是多么的流行也没有被持续。它有时候很难被找到nc110.tgz。利用这个工具的弹性和用途去开发了很多其他的Netcat的实现极大的推广了这个工具- 经常的很多现代的功能都不能在原始版本中找到。其中最有趣的是 Socat，扩展Netcat去支持很多其它socket类型、SSL加密、SOCKS代理和更多。它甚至按自己的意图扩展。还有 Chris Gibson&amp;rsquo;s Ncat，提供了甚至更多功能同时能保持可移植性和简洁性。其它流行的Netcat包括 OpenBSD&amp;rsquo;s nc, Cryptcat, Netcat6, PNetcat, SBD, 和 GNU Netcat。查看所有 Netcats
＃5 Metasploit Framework : Hack星球
Metasploit 在它2004年发布的时候给安全界带来风暴。没有其它什么工具能出现在这个列表的前15中， Metasploit 以第五位进入榜单，超过了很多知名的开发超过10年的工具。它是一个高级的开源平台。The extensible model through which payloads, encoders, no-op generators, and exploits can be integrated has made it possible to use the Metasploit Framework as an outlet for cutting-edge exploitation research.</description></item><item><title>看图学话，学ITIL(v2)系列 之1</title><link>https://martinliu.cn/2007/12/31/itilv2/</link><pubDate>Mon, 31 Dec 2007 14:13:00 +0000</pubDate><guid>https://martinliu.cn/2007/12/31/itilv2/</guid><description>前言
在2007年ITILv3推出之后，ITIL这个概念从最佳Best practice实践变成最好Good practice实践。从此称呼的转变能够看出ITIL思想的普及化、平民化。ITIL v2已经使用了快20多年了，看看如今的ITIL的用户，成熟度依旧参差不齐。有的已开始琢磨着如何完善所有ITIL Support流程并开展实施ITIL Delivery中的各个流程；有的已经在开始实施帮助台并建立事件和问题管理；有的依然处于扫描阶段。
在ITILv3即将普及的2008年，v2对于各类用户来说还是基础，是最可实施的框架。v2是v3的核心内容，为了及时的升级到v3，熟练掌握v2的概念是当务之急。下个月公司有ITILv3升级的认证考试，本系列文章可能算是一个v2的复习笔记吧。
一图胜过千言，本系列通过对一些经典图形的回顾来复习v2的部分概念。由于是看图学话版，所以目标观众是ITIL的学龄前儿童呵呵，学习内容是ITIL Delivery。如果您已经是小学以上水平，请忽略:)
ITIL Service Delivery介绍
ITIL的全称是IT Infrastructure Library，开发于1980年；成果要素：Public domain framework公共领域框架－放之四海皆准；Best practice framework最佳事件框架－现在成最好事件了；De facto standard事实上的标准－90年ITSM推广； Quality approach质量解决方案－IT质量保障；itSMF IT服务管理论坛。
Jigsaw diagram ～ 锯齿图 OGC设计了这个图，用此来说明ITIL有5个主要部分组成；每个部分之间都相互接口并联系着。
Service Delivery; the coverage ～服务交付涵盖如图5个不同流程。
BS15000 Service Management processes～BS1万5中的服务流程图示。它涵盖了ITIL的所有流程，以控制为中心的增强版。
Relationship between Change Management, Configuration Management, Capacity Management and Release Management～变更、配置、能力和发布管理之间的关系。
Process improvement model ～ 流程改进模型：发展方针和业务目标，评估、流程改变和指标追踪。</description></item><item><title>OTRS.ORG，it is time to check it out；不得不：）</title><link>https://martinliu.cn/2007/12/27/otrs/</link><pubDate>Thu, 27 Dec 2007 02:12:00 +0000</pubDate><guid>https://martinliu.cn/2007/12/27/otrs/</guid><description>一贯喜欢按照Google的指引在互联网上穿梭的你，是否发现了下面的这个现象。如果你搜索itil，无论选择所有网页、中文网页还是简体中文网页；你是否发现了在右边的赞助商连接中，OTRS.org总是能出现在第四个。OTRS.ORG是什么？和ITIL有什么关系？
热衷于开源ITSM的我不得不揭示这些答案。
什么是OTRS
这是一个开始于2001年的开源项目。OTRS是Open Ticket Request System的缩写。它的老家在www.otrs.org；下面是来自它首页的简介：
OTRS is an _O_pen source _T_icket _R_equest _S_ystem (also well known as trouble ticket system) with many features to manage customer telephone calls and e-mails. The system is built to allow your support, sales, pre-sales, billing, internal IT, helpdesk, etc. department to react quickly to inbound inquiries. Do you receive many e-mails and want to answer them with a team of agents?</description></item><item><title>如何配置OpenNMS中的 Path outage －路径失效</title><link>https://martinliu.cn/2007/12/23/opennms-path-outage/</link><pubDate>Sun, 23 Dec 2007 12:20:00 +0000</pubDate><guid>https://martinliu.cn/2007/12/23/opennms-path-outage/</guid><description>这个功能是是1.3.2之后加入的。它解决的问题是：当OpenNMS系统和被监控节点之间的网络路径失效了，或者网络链路down了，那么OpenNMS就需要抑制发送这个节点的告警。例如，如果一个广域网链路down了，所有由这个链路连接的远程站点的所有节点就都看起来down了。因为你将会得到一个路由器上远端链路无响应的告警，而不需要得到在这个路由器后所有节点Down的告警。如果当一个远程节点不响应了，OpenNMS会测试一下那个远程路由器广域网接口的ip，通过对这个ip的测试OpenNMS觉得是否该发出此节点Down的告警。OpenNMS测试的这个节点叫做此节点的Critical Path IP Address（关键路径Ip地址）。
给一个节点配置Path Outage
在OpenNMS的节点配置上，点击Admin, 点击 Configure Path Outage，输入对于这个节点来说关键的ip地址。点击Submit按钮。
配置基于规则的Path outage
可以为一组节点配置一个规则。在总导航条上选中Admin，Configure Notifications，点击Configure Path Outages，在Define the Critical Path下面输入一个Ip地址，例如：192.168.0.1（这种格式）；在Current Rule下面输入地址范围，例如：IPADDR IPLIKE 192.168.0.*；可以选中Show matching node list后的box，点击Validate Rule Results连接；在下面的页面可以查询到受那个关键Ip地址所影响的所有节点；最后点击Finish按钮完成配置。
查看Path Outage
在总导航条上选中Path Outages，在页面中你可以看到你配置的所有Path Outages的规则。
这个文章基本上翻译的是http://www.opennms.org/index.php/Path_Outage_How-To 只是觉得这是个不错的功能，所以就大概翻译了一下，希望对感兴趣的朋友们有帮助。由于手头硬件环境的限制，我还没有真实测试过这个功能，如果您对此功能做了什么测试的话，也欢迎和我交流，请留言或者或发邮件给我。</description></item><item><title>如何使用OpenNMS中的StrafePing功能</title><link>https://martinliu.cn/2007/12/21/opennms-strafeping/</link><pubDate>Fri, 21 Dec 2007 07:14:00 +0000</pubDate><guid>https://martinliu.cn/2007/12/21/opennms-strafeping/</guid><description>自从1.3.7之后OpenNMS加入了Smokeping功能，取名为StrafePing。从此OpenNMS也成了Smokeping的银牌赞助商。
安装：
StafePing做为一个Poller默认被安装在1.3.7后的软件中，不需要单独安装和配置。
配置：
没有单独的配置文件，相关的配置信息需要修改文件： poller-configuration.xml中的相关部分。需要在 标记中加入需要使用的Ip地址范围。启用之后StrafePing做为一个被监控的服务显示在这个节点上。
默认安装OpenNMS并不使用这个服务，是为了减小网络流量；推荐根据OpenNMS硬件的能力只对部分节点做这种监控。
使用：
需要产品StrafePing的图形有两种方式。1）在OpenNMS首页上，点击右侧的Resources Graphs，选中产看的机器，在Response Time下面的列表中选中需要产看的Ip地址，点击Submit，即可产看到图形。2）在节点产看页面，选中Resources Graphs，在Response Time下面的列表中选中需要产看的Ip地址，点击Submit，即可产看到图形。
如何想看懂StafePing****的图
请参考我以前的blog http://lzheng.blogspot.com/2007/02/smokeping-rttround-trip-time-tcp-tcp.html
参考Smokeping的网站http://oss.oetiker.ch/smokeping/doc/reading.en.html</description></item><item><title>发送告警短信的方法，德国工艺服了</title><link>https://martinliu.cn/2007/12/14/gsm-modem-alert-sms/</link><pubDate>Fri, 14 Dec 2007 17:15:00 +0000</pubDate><guid>https://martinliu.cn/2007/12/14/gsm-modem-alert-sms/</guid><description>在OpenNMS的邮件组中偶然发现的这个解决方案，利用这个方案你可以用串口连接外置的GSM modem来发送短信。
这个方案的名称叫做：SMS Server Tools 网址在－&amp;gt; http://www.meinemullemaus.de/smstools/index.html
工作原理 －&amp;gt; http://www.meinemullemaus.de/smstools/slideshow/page1.html
据说是可以运行在任何平台上，能支持很多设备，不过我没用试过，记录一下日后可能有用。</description></item><item><title>如何用通过OpenNMS监控Windows 服务器</title><link>https://martinliu.cn/2007/12/14/opennms-monitoring-ms-windows/</link><pubDate>Fri, 14 Dec 2007 11:34:00 +0000</pubDate><guid>https://martinliu.cn/2007/12/14/opennms-monitoring-ms-windows/</guid><description>OpenNMS可以监控可用性和性能参数。下面看看OpenNMS监控Windows服务器的三种情况。
第一种情况：
Windows机器上没有安装SNMP服务，在自动发现了这个节点后，它会被加入节点列表，之后它被定期的轮询。如果这个节点断网了，OpenNMS会报警；同时这个节点的可用性被计算。自动发现还会发现这个机器上的服务。ICMP是肯定会有的，还可能有http等其他的服务；这些服务也会被定时的轮询，如果某个服务停了，这个节点的整个的可用性受到影响。这种情况下该节点的所有服务的响应时间会被OpenNMS收集并保持历史数据。
第二种情况：
安装了SNMP服务。先说一下windows服务的安全性，默认情况下public是默认的只读密码；为了更加安全可以配置其他的只读密码，并指定某些特定的IP才能访问这个节点。这个策略在Windows的觉策略中很容易实现，或者说建议使用域控制器来管理这个策略，比较方便。假定OpenNMS能访问该节点的snmp服务的情况下。这些数据会增加：SNMP Attributes；在选择了资源图后，可以看到snmp的节点数据和接口数据。进入后可以看到，其实收集 的是一个tcp／ip接口上基本的信息：流量，连接数，丢包，错包等。个人认为流量是个最有用的数据，特别是对于一些简单的web/ftp服务器也就够用了。
第三种情况：
我们需要监控到操作系统的性能数据cpu/disk/RAM等。就需要安装一个snmp代理，这个代理可以提供这些信息，opennms才能通过snmp协议收集这些数据。需要到下面网址下载一个免费的snmp代理，当然这个产品也有收费版本：http://www.wtcs.org/informant/download.htm 这个代理很小需要在windows机器上安装一下。默认情况下OpenNMS的对windows采集模板中包含了对cpu/disk/ram等数据的采集，等到下一次OpenNMS在采集这个机器的时候相关数据就会被显示在节点snmp数据下面。
这里是通过这个免费的snmp代理能采集到的数据：
/Program Files/SNMP Informant/standard/mibs/informant-std-tree.txt
&amp;ndash;standard(1.3.6.1.4.1.9600.1.1)
|
+&amp;ndash;logicalDiskTable(1)
| |
| +&amp;ndash;logicalDiskEntry(1) [lDiskInstance]
| |
| +&amp;ndash; r-n InstanceName lDiskInstance(1)
| +&amp;ndash; r-n Gauge32 lDiskPercentDiskReadTime(2)
| +&amp;ndash; r-n Gauge32 lDiskPercentDiskTime(3)
| +&amp;ndash; r-n Gauge32 lDiskPercentDiskWriteTime(4)
| +&amp;ndash; r-n Gauge32 lDiskPercentFreeSpace(5)
| +&amp;ndash; r-n Gauge32 lDiskPercentIdleTime(6)
| +&amp;ndash; r-n Gauge32 lDiskAvgDiskQueueLength(7)
| +&amp;ndash; r-n Gauge32 lDiskAvgDiskReadQueueLength(8)
| +&amp;ndash; r-n Gauge32 lDiskAvgDiskWriteQueueLength(9)
| +&amp;ndash; r-n Gauge32 lDiskAvgDiskSecPerRead(10)</description></item><item><title>OpenNMS的Yum的安装方式，安装简单了很多</title><link>https://martinliu.cn/2007/12/13/opennms-yum-install/</link><pubDate>Thu, 13 Dec 2007 10:14:00 +0000</pubDate><guid>https://martinliu.cn/2007/12/13/opennms-yum-install/</guid><description>OpenNMS网站的安装文档：
http://www.opennms.org/index.php/Installation:Yum
下面是我在一个CentOS4的机器上按照上面文档安装的。
先浏览一下这个页面 http://yum.opennms.org/repofiles/ 找到适合你的OS的那一行。 我选择安装的是1.3.10-0.8030.snapshot 这是当前开发的最新版本的OpenNMS； 运行命令： rpm -Uvh http://yum.opennms.org/repofiles/opennms-repo-snapshot-rhel4.noarch.rpm 检查是否安装成功， 运行命令： yum list opennms ；我能看到如下输出结果 [root@jng-hkg-48-dyn3328831 ~]# yum list opennms
Repository opennms-stable-common is listed more than once in the configuration
Repository opennms-stable-rhel4 is listed more than once in the configuration
Setting up repositories
Reading repository metadata in from local files
Available Packages
opennms.noarch 1.3.10-0.8030.snapshot opennms-snapshot</description></item><item><title>破门而入Zenoss总部–Break in at Zenoss HQ</title><link>https://martinliu.cn/2007/12/07/zenoss-21-beta/</link><pubDate>Fri, 07 Dec 2007 03:01:00 +0000</pubDate><guid>https://martinliu.cn/2007/12/07/zenoss-21-beta/</guid><description>Zenoss 2.1 Beta版有什么新功能，看了这部三分钟的电影您就能知道了：http://content.screencast.com/media/c01d3364-2df0-4ccd-90f8-964f9268c326_ee342243-dec3-4aaf-bb9e-c82f06220438_static_0_0_Zenoss Beta 2_1 Compromised.wmv这部电影使用了碟中谍的背景音乐，和星际的片尾字幕显示。为了方便大家的观看，下面是片中部分台词
赶快进入看看能找到什么？Zenoss在那，它在哪？就在这，打开门来看看是否有一Zenoss2.1 bate正在运行？快来看看这什么东西，干嘛的？这什么玩意？我不确定我能做这事！这是什么？看上去是一个地图么？Google Map，这是Google Map么？对啊，是Google Map～这些绿色的圆点是什么？来点击一下看看～看上去像是显示了一个数据中心之类的东西！Locations～哦!你可以拖拽这些东西？是的～这看上去，好像布局是可以配置的？哦 My god！哦你可以单击来选择一个最喜欢的布局？是啊，来看看～哇哦～～看这些黄色的按钮，他们是图标还是按钮？来点击一下看看先！这就来到了事件窗口了～来看看这个网络map怎么样？这些玩意还真的是浮动的！！非常cool！这个小企鹅是个啥？这个可能是个Linux服务器～哦，你可以告诉我windows服务器是啥，那个是windows服务器的图标？哦 My God！！！你可以点击之后看到一个小圈在上面。哇！！是在是cool！！我喜欢它！！
在拍摄这个电影期间没有Zenoss的员工受伤，如需更多zenoss Beta 2.1的信息请联系我们www.zenoss.com
观后感：
一个貌似比较无知比较神经质傻哥们对Zenoes的新特色进行了一番探索，一个开发人员尝试给他做了一个演示。从一定程度上看出Zenoss开发人员比较兴奋，从侧面可以看出他们比较happy比较喜欢他们的工作，喜欢这个产品。我想这可能是一个产品创造性的主要源泉。开源软件人的创造性大于商业软件，商业软件是金钱驱动的，是商业；我觉得商业软件的开发人员很难把自己的创作性投入产品中，起码在中国是这样。
关于Zenoss 2.1，废话少说最快的体验方法莫过于直接使用它。一种不需要安装的方式是直接下载安装好的VMWare虚拟机。你只需要到VMWare下载一个VMWare Player，在下载这个Zenoss的虚拟机压缩文件就成：http://nchc.dl.sourceforge.net/sourceforge/zenoss/zenoss-2.1.1-x86.vmware.zip下载并且解压缩后您就可以使用了。它是使用DHCP的在启动之后就能在root登录的console上看到登录的网址，请登录端口8080的那一个。登录密码是admin/zenoss，have fun～～～
功能点评：
先请看：http://www.zenoss.com/community/code/zenoss-2.1/zenoss-core-2-1 文中提到的电影下载自本页。我仅仅感受了一下界面并没有深入功能。就界面上讲，我觉得他们做的非常好。界面上的每一块基本上都是可以伸缩和隐藏的，好像在非IE的浏览器里显示的更好。主页上的Dashboard是可以配置的象MSN Space的页面一样的定制方式。Google Map的引入使人眼前一亮，我曾经在OpenNMS，Cacti，Unicenter中尝试Map功能;Zenoss在这个功能上创意和功能都大大超出了其他产品。他的网络地图怎一个cool字了得，做到这个份上对于3层网络拓扑图来说算是一种很高的境界了。
我准备使用的是它的自动发现功能和对JXM监控的功能。如果您对这个软件有什么心得的话别告诉我。
后记：
我仔细看了一下Zenoss.com网站，发现两年之内变化还是蛮大的。最大的方面是在它提供的技术支持和服务上。Zenoss Enterprise Edition的 Zenoss Subscriptions定价从66$到150$不等，同时还提供了培训、实施和定制等服务。前一段时间看到的相关新闻中提到了Zenoss可以列入10大最赚钱的开源软件之一（网管类）。他们的Zenoss很happy，他们公司也很happy。还真是鱼和熊掌兼得。</description></item><item><title>GLPI资产管理系统－－功能列表</title><link>https://martinliu.cn/2007/11/08/glpi-features-list/</link><pubDate>Thu, 08 Nov 2007 14:16:00 +0000</pubDate><guid>https://martinliu.cn/2007/11/08/glpi-features-list/</guid><description>常规
* 多用户管理多种用户认证方式（local, LDAP, Active Directory, Pop/Imap, CAS)
* 权限系统
* 分页系统
* 多语言支持（包括中文的14种语言支持）
* 搜索模块显示字段列表配置
* pdf和cvs格式导出数控
* SQL格式保存和恢复
* 数据XML格式导
* 出可配置的下拉框系
* 统更新检查
* UTF8界面
* HTML4.0.1兼容
**资产清单**
* 从OCS Inventory NG导入资产数据
* 计算机资产清单管理以及与设备的连接关系，TOC总拥有成本
* 管理显示器资产清单管理以及与计算机的关联关系
* 网络设备资产清单管理以及和设备之间的连接(IP, Mac adresses, VLANs&amp;hellip;).
* 打印机资产清单管理以及和计算机的连接关系，耗材，以及耗材使用的阀值报警
* 其他外设的资产清单(scanners, graphical tables&amp;hellip;)，管理和计算机的连接关系
* 软件资产清单管理，许可证和过期时间管理安装物理位置（房间，楼层、、）分配
* 硬件商业和财务信息管理（采购，合同等、、）
* 管理硬件的状态
* 与外部其他应用的接口管理
* 资产清单信息的更改历史管理
**跟踪**
* 跟踪资产清单中各种组件的故障请求单
**Final user**
Final user frontend for intervention demand Mail tracking of the intervention demand feature Interventions history consultation Possibility of adding comments at the request of intervention</description></item><item><title>GLPI资产管理系统－－系统简介</title><link>https://martinliu.cn/2007/11/07/glpi-features-list2/</link><pubDate>Wed, 07 Nov 2007 15:29:00 +0000</pubDate><guid>https://martinliu.cn/2007/11/07/glpi-features-list2/</guid><description>GLPI是一个信息资源管理器。你可以用它来给你公司建立一个资产清单（计算机，软件，打印机、、、）数据库。它的增强的功能可以是管理员的日常工作简单化，例如带有邮件提醒功能的工作跟踪系统等。它最首要的功能包括：1）所有技术资源精确的资产清单。资产的所有属性将被存储在同一个数据中。2）管理流程、维护工作的历史。这是一个动态的应用，它直接连把需要发出支持请求的用户和技术人员连接起来。（注：上文来自http://www.glpi-project.org/spip.php?article43）
在ITpub上发过一个非常不错的帖子，请点击：http://www.itpub.net/762653.html 这个人是今年四月在他们公司使用的总结贴，对该项目的主要功能介绍的比较全面。本人同期发布的文章：GLPI &amp;ndash;IT资源生命周期管理</description></item><item><title>Zenoss 2.0 安装失败：）</title><link>https://martinliu.cn/2007/09/06/zenoss-20-install/</link><pubDate>Thu, 06 Sep 2007 09:35:00 +0000</pubDate><guid>https://martinliu.cn/2007/09/06/zenoss-20-install/</guid><description>今天是在没有心情搞了。快被Zenoss的网站给搞糊涂了。
我准备好了一个Suse10的机器来装Zenoss。
首先想到的是上http://zenoss.com
在下载的页面，我有点差异了，怎么系统兼容表里命名写这有suse10的rpm包，而下载连接的列表里确只有redhat和centos的安装包，奇怪！！！！
接着看看文档把，发现新的希望：http://www.zenoss.com/community/docs/install-guides/install-on-suse-10/
看看这文档，乍一看很不错啊，写的步骤非常清晰，大喜。没看完我有纳闷了，他明明也说Zenoss-2.0.0-0.sles10.i386.rpm这样一个安装文件啊。算了去google搜一下把，看到的帖子都来自zenoss的论坛啊，发现满世界的人都在找这个文件，哦，地球人都知道啊 ！
还是不死心，去sourceforge搜，结果一样，也没有。
我昏啊，你们明明写这支持，还有安装文档，为啥就不提供一个下载的连接呢？？？
Zenoss的人你们都脑子进水了么！！呵呵第一次这么说开源的人，这次真的是无奈得很，以前把这种信息的搜寻和troubleshooting做为一个乐趣，现在真的没这样耐心了。
最终zenoss的安装，宣告失败！！ :-)
一晃三个月都没更新这个blog了！！！～～～！！！！继续开源ing</description></item><item><title>How to install hyperic-hq on openSuse 10.2</title><link>https://martinliu.cn/2007/06/21/how-to-install-hyperic-hq-on-opensuse-102/</link><pubDate>Thu, 21 Jun 2007 08:58:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/21/how-to-install-hyperic-hq-on-opensuse-102/</guid><description>Make the hq and group
groupadd hq useradd -c &amp;lsquo;hyperic hq&amp;rsquo; -d /home/hq -g hq -s /bin/bash hq mkdir /home/hq chown -R hq.hq /home/hq
****Untar installer package and install ****
cd /home/hq tar zxf hyperic-hq-installer-3.0.4-389-x86-linux.tgz chown -R hq.hq . su hq hq@Suse:~&amp;gt; cd hyperic-hq-installer/ hq@Suse:~/hyperic-hq-installer&amp;gt; ls LICENSES.txt agent-3.0.4.tgz installer-3.0.4 server-3.0.4.tgz setup.bat setup.sh shell-3.0.4.tgz hq@Suse:~/hyperic-hq-installer&amp;gt; ./setup.sh Unpacking JRE to temporary directory /tmp/jre Initializing Hyperic HQ 3.</description></item><item><title>OCSNG 代理程序生成的清单扫描信息</title><link>https://martinliu.cn/2007/06/15/ocsng-inventory-windows-linux/</link><pubDate>Fri, 15 Jun 2007 10:17:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/15/ocsng-inventory-windows-linux/</guid><description>Linux 硬件是下面的Windows机,软件是openSuse10.2运行在VMWare中.
** Information **
** Value **
Tag
LiuZheng
**PROCESSOR(S)**
** Type **
** Processor Speed (Mhz) **
** Number**
Intel(R) Core(TM)2 CPU 6400 @ 2.13GHz
2126
1
**MEMORY**
** Caption **
** Description **
** Capacity (MB) **
** Purpose **</description></item><item><title>How to install OCSNG 1.0.1 on OpenSuse 10.2</title><link>https://martinliu.cn/2007/06/15/how-to-install-ocsng-101-on-opensuse-102/</link><pubDate>Fri, 15 Jun 2007 08:06:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/15/how-to-install-ocsng-101-on-opensuse-102/</guid><description>下面我将描述如何安装OCSNG服务器和客户端.服务器的安装在openSuse Linux中,文中将提到Linux和Windows代理的安装方法.最终能在界面中看到两个节点的清单信息,不过只有Linux的哪个会每天更新.
This article is talking about how to install OCSNG 1.0.1 on a openSuSE 10.2 system.
Requirements: You have to meet the following requirements.
 Apache version 1.3.33 or higher / Apache version 2.0.46 or higher.
 Mod_perl version 1.29 or higher.
 Mod_php version 4.3.2 or higher.
 PHP 4.3.2 or higher, with ZIP and GD support enabled.
 PERL 5.6 or higher.
 Perl module XML::Simple version 2.</description></item><item><title>开源IT管理工具大全之All in one虚拟机</title><link>https://martinliu.cn/2007/06/15/e5bc80e6ba90ite7aea1e79086e5b7a5e585b7e5a4a7e585a8e4b98ball-in-onee8999ae68b9fe69cba/</link><pubDate>Fri, 15 Jun 2007 07:24:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/15/e5bc80e6ba90ite7aea1e79086e5b7a5e585b7e5a4a7e585a8e4b98ball-in-onee8999ae68b9fe69cba/</guid><description>我做开源工具测试时,90%以上是在VMWare虚拟机中实现的,本人比较懒一直没有学习Xen虚拟机的用法,等下次吧,一等要彻底开源是我的一个梦想呵呵!
说说这个All in One虚拟机的想法,我只是想把所有的我熟悉的工具都安装和配置在一个虚拟机里,这样当有人需要给做Demo的时候,我可以很快的做一个分享.如果有朋友感兴趣的话,我可以刻盘他.总的来讲希望能分享一下我的学习成果给大家.
第一步:安装虚拟机
这个虚拟机我不像使用很多的Snapshoot,我以前是这么做的,从一个基础的OS发出许多分支到不同的工具;这样做的缺点有二:1)特别占磁盘空间;2)不能同时访问多个系统.
我选择的Linux是Open Suse Linux 10.2;Suse的包管理对我来说真的很方便,从安装DVD上用Yast可以方便安装各种软件,无须考虑包之间的依赖性问题.
我选择的是最小图形化系统安装,安装完之后,vmdk文件的大小好像是2GB多.
接下来安装的是所有的必须的包,大致如下:Apache,Perl,MySQL,PostgreSQL,rddtool,net-snmp,php,gcc,Kernel-source(for vmware tools)&amp;hellip;等安装完之后用chkconfig on 命令设置需要自动启动的服务;然后把apache等服务逐个启动一下验证是否工作正常.
然后安装的是VMWare tools,这个好像也不是必须,不过还是装上比较好,方便虚拟机和host机共享文件.我的虚拟机的版本是5.5.3workstation版本.
第二步:安装各种开源软件
下面可能会是一个很长的change log
1. 安装OpenNMS 1.3.2 安装方法 设置了opennms的自动启动,还没有设置tomcat5.5.23的自动启动.
2.安装Cacti **0.8.6j **安装方法, 使用的poller.php,尝试安装cactid,安装失败,原因可能是OpenSuse10.2好像没有net-snmp lib包. 暂时不安装cactid
3.安装OCSNG 1.0.1 安装方法
4.安装 hyperic-hq 3.0.4-389 安装方法, 2007-6-21th
5.安装 OTRS 2.2.1-1 安装方法很简单，执行rpm安装既可, 2007-7-28th</description></item><item><title>How to install Cacti on OpenSuse 10.2</title><link>https://martinliu.cn/2007/06/14/how-to-install-cacti-on-opensuse-102/</link><pubDate>Thu, 14 Jun 2007 10:02:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/14/how-to-install-cacti-on-opensuse-102/</guid><description>1.
Download Extract the distribution tarball
Suse:/opt # wget http://www.cacti.net/downloads/cacti-0.8.6j.tar.gz
Suse:/opt # tar zxvf cacti-0.8.6j.tar.gz
2.
Create the MySQL database:
Suse:/opt # mysqladmin &amp;ndash;user=root create cacti
3.
Import the default cacti database:
Suse:/opt/cacti-0.8.6j # mysql cacti &amp;lt; user=&amp;ldquo;root&amp;rdquo;&amp;gt; GRANT ALL ON cacti.* TO cactiuser@localhost IDENTIFIED BY &amp;lsquo;cacti&amp;rsquo;;
Query OK, 0 rows affected (0.03 sec)
mysql&amp;gt; flush privileges;
Query OK, 0 rows affected (0.00 sec)
mysql&amp;gt; quite
5.
Edit include/config.php and specify the MySQL user, password and database for your Cacti configuration.</description></item><item><title>建立一个开源企业</title><link>https://martinliu.cn/2007/06/12/e5bbbae7ab8be4b880e4b8aae5bc80e6ba90e4bc81e4b89a/</link><pubDate>Tue, 12 Jun 2007 09:18:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/12/e5bbbae7ab8be4b880e4b8aae5bc80e6ba90e4bc81e4b89a/</guid><description>需求分析
如果你开一个公司的话，如果你的公司需要提供人们某些在线服务的话，如果有的office 需要200人同时上网工作的话，如果您在在线业务需要三层结构的话，如果您的服务器需要7×24小时监控的话，如果您的ITsupport工程是需要同时 照顾50个服务器和200个最终用户的话，如果您的企业随时收到黑客的攻击的话、、、、、、挑战
如果您是公司的总裁或者CTO的话，试想您将如何为公司节约成本？如果建立一个可管理的基础架构？如果保证IT满足业务的需求？如果相应各种IT维护需求？如果降低企业的运行维护成本？、、、、、、
开源领域里的可选组件如下
外界链接设备
Vyatta路由器，可运行于低端PC，能实现DHCP，DNS，Firewall，NAT，DMZ以及多种路由协议 http://www.vyatta.com/ Asterisk PBX交换机，可以实现VoIP，语音菜单和信箱，软分机，IP电话 http://www.asterisk.org/ OpenVPN 是一个全功能的SSL VPN解决方案 http://openvpn.net/ 应用服务器
Linux 多种版本可供选择和免费使用 Apache、Tomcat、JBoss、Perl，PHP可以建立多层的Web企业 Mysql，PostgreSQL 比较稳定和流行的数据库，能支持双机等功能 桌面机
Ubuntu SuSE 帮助台
ORTS ITIL 兼容的ITsupport服务管理工具，比较好的支持对内部IT支持的流程 http://otrs.org/ SugarCRM 能和SalesForce抗衡的CRM系统，能管理客户信息，销售活动和售后支持活动 http://www.sugarcrm.com/ IT监控管理软件
OpenNMS，Nagios，Cacti、、、网络系统监控，我的blog上还有很多可选项 GLPI ＋ OCSNG IT资源生命周期管理，您需要知道您都有那些设备和资产 Nmap网络扫描，SNORT网络入侵检测，OSSIM等工具帮助网络安全管理 不知道有没有人愿意建立这样一个开源企业？呵呵！！
如果您有什么新的想法和补充请一定分享给我。</description></item><item><title>Go Open Source,GO! Vyatta开源软件挺进网络硬件领域</title><link>https://martinliu.cn/2007/06/09/go-open-sourcego-vyatta-network/</link><pubDate>Sat, 09 Jun 2007 08:56:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/09/go-open-sourcego-vyatta-network/</guid><description>这是一个比较新的产品，提供开源的软件路由的解决方案；他们的目标直指Cisco这些大牌网络硬件厂商。它能简单的安装和运行在32bit的普通计算机硬件上，实现路由器的几乎所有功能；能支持的硬件平台和路由协议还真不少，请查看 Datasheet；下载网址
在VMWare中安装了一下发现它可以完全满足我需求：
1）在公司中办公网络建立一个隔离的测试网。
2）测试网中提供DHCP,DNS服务
3）提供NAT,Firewall
4）安装简单，硬件需求低
准备在公司实际环境中安装测试，安装和配置信息待续。
现在我正在Vyatta Router后面的小网内更新这个Blog。
上午的安装过程如下：
（硬件准备）
测试机一台 Dell Gx620，主板上带Intel的内置网卡一块TP-LINK TG-3269C，网线若干
（网络环境）
在一台办公网的机器上，寻找一个未使用的IP地址，这个地址会分配给Router的Internet网卡上；然后运行 ipconfig /all 记录下默认网关、默认DNS和子网掩码，这些信息会配置到Router上。
（安装过程）
下载Vyatta的试用手册 Quick Eval Guide - Boot, Configure &amp;amp; Test the Vyatta software翻到手册的第三页，重新标准出你的网络信息，注意后面的配置跟这里的信息有关。为了简单起见，我就改了对外链接的哪个网卡的IP地址，至于内网么，有什么ip地址范围都无所谓了呵呵 下载刻录Vyatta软件 Vyatta Community Edition 2 - CD-ROM Image 刻录到一张空白CD上 把可好的CD放入机器中，从CDROM启动，这其实是一个livecd。启动过程可以无需关心，看似是一个Linux PE的CD，启动之后用root进入操作系统，root的密码是vyatta。进入后可以查看一下 vi /var/log/dmesg 主要看看你的两个网卡它是否能真确识别。我的测试机是Intel CPU的，不知道AMD的机器是否呢个装，没试过。 其它的配置过程文档中说的非常详细，不用我在多说。 安装之后的小节：
Router有两个网卡，在对外的网卡上做了，NAT，firewall，在对内的网卡上做了DHCP,DNS，现在我的笔记本在Router后的小网里，运行ipconfig /all的结果如下
Ethernet adapter Local Area Connection:
Connection-specific DNS Suffix . : mycompany.com</description></item><item><title>谁来关心核心业务系统</title><link>https://martinliu.cn/2007/06/07/core-business-hp-ibm/</link><pubDate>Thu, 07 Jun 2007 09:44:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/07/core-business-hp-ibm/</guid><description>注:本文是我的处女作呵呵,发布在&amp;quot;网管员世界&amp;quot; 三月B刊上,原文如下:
谁来关心核心业务系统
——简要比较IBM Tivoli 与HP OpenView
导语：随着IT的快速发展，中国用户对先进技术的追逐和应用正日益高涨。回想我们已经建立的这些业务系统。我们不得不用如下几个词来形容：复杂、动态、故障多和管理难。在繁琐的日常运维工作中，来自各个部门的人，似乎又在默契地担负和实现着这样的同一个使命：保持关键核心业务系统正常运转。网络系统监控软件是用来帮助IT运维人员，缩短故障解决时间和提高工作效率的有力工具。选购网络系统监控软件的技巧在于对自己的IT系统深刻的理解和对管理需求深刻的理解。假设您的用户是通过这样的一个访问路径来查看客户信息：浏览器àInternetàWeb服务器à中间件服务器à数据库；首先标出在这个路径中的每个点上，开发、测试和运行维护等各部门人员是怎样分布的。假设在每一点都有这样的一个自底向上的技术堆栈：网络à服务器操作系统à数据库à中间件àWeb服务器à客户端。再让各部门的每个相关的人员标出在哪些区间所消耗的时间和遇到的故障是最多的；这些故障是什么？记住把这些信息记录下来，并打印出来，无论如何这样的原始数据都是IT管理优化非常好的参照。在得到这样一个管理需求的分布图后，接下来就可以按图索骥来挑选相关的管理平台以及相应管理模块。一个好的监控管理系统并不一定试图监控和管理到技术堆栈中的所有对象，而是在您最需要帮助的核心部分提供有利的支持，为您清晰呈现IT系统的这样几个关键因素：可用性、性能和故障状况。记录和分析核心业务系统在这些方面的变化情况是IT监控管理软件的主要功能。
IBM Tivoli和HP OpenView是主流IT监控管理套件中的两个重量级角色。它们是两个著名的市场品牌，旗下丰富的管理模块组成了非常全的产品线。选择标准如何确定呢？管理工具提供的管理功能永远超过其它因素，做单纯产品线长短的比较是没有意义的。一个清晰的管理需求定义可以使您能够非常轻松的考察和比较不同品牌的管理产品。由于它们都属于管理平台型产品，管理功能都非常的丰富和全面。本文对这两个产品的介绍和分析，无法面面俱到，所以只能对它们的工作方式、特性和原理等方面做粗略的比较；旨在抛砖引玉，引起读者注意，给您提供若干提示和思路。下面就网络管理和应用系统故障管理（操作系统、数据库、Web应用等）这两方面来做一个简要的分析和比较。这也是对核心业务系统监控管理的最基本内容。
**网络管理方面：**IBM NetView和HP OpenView Network Node Manager都是很好的产品，有很多可选的功能模块。众所周知NetView产品是当年IBM从HP购买的，NetView和OpenView NNM算是一对孪生兄弟。后来，它们在各自的家庭里慢慢的长大，成为个性不同的两个产品。如今的OpenView NNM在下面的一些方面可能比NetView做的更为出色一些：1）很好的支持多种行业标准的管理协议：多个版本的SNMP、ROMON、Netflow、Ipv6、OSPF、HRSP、CDP等；2）提供全面的网络管理视图，包括二层和三层的网络拓补图；以及VLAN和其它协议视图；3）有效的内嵌事件关联引擎和事件管理配置工具，对用户处理事件和相关事件非常有帮助。OpenView NNM毕竟是具历史悠久的成熟产品，不过在IBM收购了Micromuse后；今后可能在网络管理方面,IBM和HP也可以不相伯仲了。网络管理的特殊性在于：只能通过行业标准的管理协议来从这些硬件设备上获得所需要的信息。网络监控系统一般作为网络设备的数据收集器和网络设备SNMP Trap的目的地。在多厂商设备的网络环境中，监控系统需要的是对各种硬件设备的兼容性；从实际环境出发，选择更能反映真实运行环境，更易于理解，而且容易使用的产品。
**应用系统故障管理：**这个管理范畴中包含最多的管理功能和管理模块，它管理操作系统和操作系统之上运行的一切对象：各种数据库、Web应用、中间件、Web服务、邮件服务和标准商业应用等。它与实际业务应用系统同时运行在同一个网络环境当中，是它肩负着对核心业务系统的监控。由于这部分的功能最多最复杂，它往往被看作是管理监控的平台或者框架，是监控系统的核心部分。所有管理对象的故障告警事件都汇聚到里，其它各个功能模块都以它作为通讯平台和数据存储中心。Tivoli Monitoring和OpenView Operations就是这样的核心模块产品；它们都有很多其它相关的管理模块，这些模块大多数需要加载到这个核心框架上运行；部分模块是可以独立运行，同时和它们做故障事件集成。用户使用界面、管理策略定制、管理对象轮询、故障事件报警和管理报表等功能都关联到这里。下面将从四个不同角度简单比较一下Tivoli Monitoring和OpenView Operations的各种特性。
1****、监控代理的差异 在监控主机上安装监控代理是各个厂商的相同做法，代理程序运行在被监控主机上和管理服务器通讯；执行各种数据收集任务和管理策略。操作系统代理是最基础的模块；有的厂商可以通过操作系统监控代理程序来实现对数据库、Web应用、中间件、Web服务和邮件服务等的监控，有些需要安装和配置多个代理监控程序。
IBM Tivoli Monitoring
2****、告警机制的差异 代理程序在采集和整理实时和历史的监控数据时，需要随时检查各种报警条件是否满足。监控最好能在故障状况发之前，将各种迹象以不同级别的事件精确地、及时地汇总到管理服务器端，以邮件，短信等方式通知到相关工作人员。
IBM Tivoli Monitoring
在监控对象阈值设置上可以实现复杂的逻辑。对于某个采集点在某时间点或者时间段上的数值，可以设置它和另外一个数值的几乎所有算术关系的比较；还可以逻辑上和其它采集点的状况做关联。告警条件的定义可扩展到：在给定的时间内、多资源、多阈值的情况。告警条件的判断是在代理程序端完成，最终发送告警事件到管理服务器。能定义在临界值到达时的自动触发处理动作。
HP OpenView Operations
告警条件的设置可以对于某个采集点在某时间点上的数值，能提供大于和小于的比较条件；其它的情况可以通过VB、Perl脚本来实现复杂条件判断。能设置尖峰持续时长，对有本地重复事件报警抑制功能；代理程序可以在临界值的到来、持续和结束三个不同阶段，定义和发出不同的事件提示；执行不同的故障修复动作。
3****、用户使用界面的差异 图形化用户界面是产品选型的重要因素之一，易用性高的用户使用界面可以降低软件的复杂度。IT管理软件功能的复杂性是很多用户望而却步的一个主要因素。中国用户对报表的需求是比较特殊和苛刻的，往往需要定制和开发特定的管理报表，所以需要详细考察预定义报表和相关开发接口。</description></item><item><title>There is the easiest way to run IT management tool</title><link>https://martinliu.cn/2007/06/01/there-is-the-easiest-way-to-run-it-management-tool/</link><pubDate>Fri, 01 Jun 2007 09:53:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/01/there-is-the-easiest-way-to-run-it-management-tool/</guid><description>If you are not a Linux guru, windows is the OS you can use only. It does not matter. You could easily try it on your Windows Laptop probably. Since VMware Player is free for using, and there are lots of VMware applications on the internet. So, you just download whatever you need and run them on everywhere. Then you get a fancy IT management solution running on your computer; you really do not even know about Linux and open source.</description></item><item><title>[转]10大优秀开源网络管理工具</title><link>https://martinliu.cn/2007/06/01/top-10-nsm-tools/</link><pubDate>Fri, 01 Jun 2007 01:47:00 +0000</pubDate><guid>https://martinliu.cn/2007/06/01/top-10-nsm-tools/</guid><description>转载ITmanagement的一个文章；全文的部分翻译。个人以为这个文章的把网管的开源工具做了一个小结，英文好的同志请直接访问原文地址：click Here
“最高评分的管理管理工具不会使人不得不花未来的钱。来考虑一下这些自由且低成本的开源软件吧。”
Leslie T. O’Neill May 24th, 2007
如果您的公司排名在Fortune 1000强和中小企业之间，那么您网络管理的选择形势看似比较严酷。你既不能在小市场上收集一堆拙劣的玩意来组成一个解决方案；你也不能花很多钱买一些真正不需要的高科技产品。这里有一个很好的选择：试用可一个开源的网络管理方案，加专业服务，包括开发和技术支持。
**Open Source = Flexible **开源＝灵活性
一个开源的解决方案对厂商来说也是非常灵活性的，他们很快地增加新技术的支持，比改进一个私有系统更快。例如：当Ubuntu 7.04 “Fiesty Fawn”四月份发布之后, Hyperic HQ在发布的第二天就宣布了对其提供技术支持。
当谈到开源的网络管理方案时，公司最需要也用的最多的技术莫过与监控功能。不过监控技术在很大程度上已经变成了日用品。
通常的，专业化版本的开源IT管理软件平台集成多个其他开源项目在一个框架中，象Nagios网络监控等；并且加入统一的网络界面；并且提供技术支持服务。另外，他们都想通过强大的社区来提高和改进代码，跟踪bug等。
六个企业级平台
下面的六个开源IT管理都可能用作HP, IBM, CA 和 BMC大型管理套件的替代品。每一个都能提供低价的专业服务和免费软件下载。它们的不同支持在与所提供的功能和支持的操作系统
Quest Big Brother
这个Web-based系统和网络监控产品能支持 Windows, Unix 和Linux等操系统, 还有一个通过用户投稿形成的脚本知识库，利用它能容易地定制Big Brother取管理你的网络。它的GUI是一个不错的特色，使用相同的颜色代码；红色代表不好，绿色代表好。
GroundWork Open Source Monitor Professional
2004年发布，它是最早的企业级网络管理产品之一。它集成了超过100种最好的开源项目，包括Nagios, Apache 和 NMap, 在这个框架之上有添加了很多特有功能，例如Web-based用户界面等。Monitor提供了集中化的监控和管理，管理和监控你的企业网络，包括Linux, Unix 和Windows 服务器, 应用, 数据库和网络设备。
Hyperic HQ Enterprise
瞄准的是一个数据中心，Hyperic被设计为去监控和管理Web应用的所有层次， 包括硬件、中间件、虚拟化、Web和开放式应用。它还提供基线和趋势分析。它支持 Apache, JBoss, Linux和更多应用。</description></item><item><title>Hyperic HQ小测手记</title><link>https://martinliu.cn/2007/05/30/hyperic-hq-testing/</link><pubDate>Wed, 30 May 2007 04:28:00 +0000</pubDate><guid>https://martinliu.cn/2007/05/30/hyperic-hq-testing/</guid><description>HQ的网站是一个显的非常商业化的网站；看上去制作的比较精良也比较专业。从HQ的官方文档（好像没找到pdf手册）中看出它能监控的东西还真的非常多，无论是商业的软件还是开源的都有一大串的matrix；他们在被监控的及其上是需要安装和运行代理的。所以从这一点上讲和商业软件也没有什么区别，总之看的数据多应该比较好，不过数据收集的多有时候会给监控对象代理太重的workload。
如何安装
下载HQ\hyperic-hq-installer-3.0.4-389-x86-linux从HQ的网站。这个压缩文件包含：安装程序，服务器端程序（好像包括一个内嵌的PostgreSQL数据库），代理程序，服务期端shell程序，JRE。
BTW:服务器端和代理都是Java程序，如果自己配置好JRE的话可以下载不包含JRE的安装包。Windows上的代理包是一个zip文件，为了方便我都下载的含有JRE的安装包。
由于是纯Java的应用所以服务器端和代理端看似好像都没有任何依赖性要求，只是需要在服务器端安装xorg-x11-libs包，否则不能正常绘图，看不到图形。
在Linux下的安装过程大致如下。
mkdir /opt/hq
useradd hq -G root -d /opt/hq
su hq
tar zxvf hq.tgz
cd hyperic-hq-installer/
./setup.sh
/opt/hq/server-3.0.4/bin/hq-server.sh start
注意最好建立一个新的用户为HQ，服务期端本身需要被非root用户安装和启动。另外代理和服务器端都需要特殊的两个端口通信，所以安装完之后必须停止或者配置防火墙；否则不能访问服务器，服务器也不能和代理通信。启动代理之前需要配置好防火墙。
试用：
总体说HQ的安装和配置都是非常简单的，不过他的Web界面更是简洁。当代理启动了之后，会自动出现在Auto-Discovery下面，点击Add Resource按钮将它变成一个正式的监控对象。默认的情况下，代理会收集一定数量的监控指标；大概是可收集数量的20%左右。当在某个监控对象上（例如Memory Used）设置了收集间隔之后，服务器端就开始了定时的数据收集，所收集的数据默认情况下用折线图的形式展示。可以根据某个指标建立一个告警，告警的逻辑也相当的完整：逻辑判断，巅峰判断，升级处理；看似能想到的都有了。由于是第一次使用展示没有看的如何建立一个告警规则应用于所有监控对象的。我用HQ对我的一个服务器（iis,MS Sql,.net）做了监控，从数据收集和展现效果上来说，真的堪称可与商业软件媲美。
使用结论：
安装简单方便，在Linux下代理端完全无需关照包依赖性。代理配置的安装配置需要一定量的工作，必须配置服务器地址，通信端口等。
代理程序对服务器的工作负担还是比较大的，特别是在启动的那几分钟内。代理进程对CPU的使用率可以达到50～80%，之后就比较低了。对内存的利用一般是30MB左右，当然这应该是可以通过降低收集数的数量和频率来降低的。
用户界面的使用还真的是很方便，还支持告警信息的RSS访问。总之HQ是一个开源软件中的重量级选手：功能强，复杂性高，代理程序负担较重。其他使用小结，待续。</description></item><item><title>ZABBIX特点介绍，转自它们的网站</title><link>https://martinliu.cn/2007/05/22/zabbix-key-features/</link><pubDate>Tue, 22 May 2007 14:53:00 +0000</pubDate><guid>https://martinliu.cn/2007/05/22/zabbix-key-features/</guid><description>FROM：http://www.zabbix.com/features.php
ZABBIX offers functionality that will make your IT resources look more transparent, and it will also help to easily identify performance and availability problems. ZABBIX greatly increases the productivity of system administrators by providing simple-to-use monitoring system.
Key features
开源的方案Open Source solution 能编译运行在多种OS：AIX, FreeBSD, HP-UX, Linux, MacOS X, NetBSD, OpenBSD, Solaris, Tru64/OSF SQL database存储配置、性能等各种信息 Web interface 简单易用的访问 提供实时和历史的监控分析数据 Data 可视化和影射 高性能的监控代理 (UNIX, Win32) 监控 &amp;ldquo;agentless&amp;rdquo; 环境 维护和监控SLA of IT Services 监控 SNMP (v1,v2,v3) devices IT Services 提供IT基础架构（组建/服务/硬件）等和业务逻辑的联系和对应</description></item><item><title>What is ZABBIX?</title><link>https://martinliu.cn/2007/05/22/what-is-zabbix/</link><pubDate>Tue, 22 May 2007 13:51:00 +0000</pubDate><guid>https://martinliu.cn/2007/05/22/what-is-zabbix/</guid><description>
第一次看到这个软件是在OpenNMS的邮件讨论组中，他们计划做一个vmware的image放到VMTN上 。我在VMTN里哪里点击了一下监控管理这一类，一个叫OpenESM的项目进入了我的视线。它能引起我的注意是因为，它在项目的描述中说:我们理解ITSM、、、、Check it out! 大致浏览了一下他们的网站，发现他们的目的是在Zabbix的基础上作一下优化和开发，加入若干特色：GSM modem发短信、新报表、SLA监控等。
现在很多项目都有迅速实施的解决方案。对于很多开源项目来说，它们对于新手的相同门槛就是安装。安装上了，不会配置；配置好了，不会用；用上了解决不了问题。
我先下载了OpenESM ，一个不算太大的文件1.3GB。解压缩之后用VMWare打开运行，猜出root的用户名是openesm，登陆之后发现它是一个Fedora的虚拟机。登陆OpenESM的控制台， http://ip/ 接下来就需要去www.openesm.com上下载手册了，否则无法继续下去。照着手册安装代理，在我的两个Windows的机器上。安装需要先下子代理安装包，允许安装命令的时候需要制定自己的主机名和服务器的主机名。在控制台中加入这两个安装了代理的机器，由于是初次使用没用玩自动发现之类的功能。收集了一阵子数据之后，很快发现了很多有趣的数据。
最终总结如下
这是我安装的第一个有代理程序的开源监控软件，感觉在Windows下代理的安装还是比较方便的。比我想象的简单，安装文件只有一个exe文件，装完之后形成一个服务。我记得在查阅文档的时候看到了一文档，上面列出了所有代理程序能收集的数据的表格，说明了什么数据在什么操作系统中支持，那些不支持。它能在多种操作系统上安装，他的安装时说从代码编译安装，windows上不需要，在非windows上就以为这需要安装编译器什么的。这好像并不是特别好。 可用性和性能的数据都能收集。 事件管理功能，能触发action，还没有试过，能触发邮件和GSM短信等。没有试过。 没有试的还挺多，还需要进一步研究。</description></item><item><title>Install OpenNMS 1.3.2 on OpenSuse 10.2 system (The simplest version )</title><link>https://martinliu.cn/2007/05/13/install-opennms-132-on-opensuse-102-system-the-simplest-version/</link><pubDate>Sun, 13 May 2007 11:40:00 +0000</pubDate><guid>https://martinliu.cn/2007/05/13/install-opennms-132-on-opensuse-102-system-the-simplest-version/</guid><description>1&amp;gt;Install dependence packages
zliu3:~yast -i rrdtool
zliu3:~yast -i postgresql
zliu3:~ # rpm -qa |grep rrdtool
rrdtool-1.2.15-25
zliu3:~ # rpm -qa |grep postgresql
postgresql-8.1.5-13
postgresql-libs-8.1.5-13
postgresql-contrib-8.1.5-13
postgresql-pl-8.1.5-15
postgresql-server-8.1.5-13
rcpostgresql start
copy jdk/tomcat 5.5 package files to /opt
cd /opt
tar xzvf jdk1.5.tar.gz
tar xzvf tomcat5.5.tar.gz
export JAVA_HOME=/opt/jdk1.5.0_09
export OPENNMS_HOME=/opt/opennms
export CATALINA_HOME=/opt/apache-tomcat-5.5.20
export PATH=$PATH:$JAVA_HOME/bin
java -version
$CATALINA_HOME/bin/startup.sh
Test Tomcat 5.5 http://Ip_address:8080/
vi /var/lib/pgsql/data/postgresql.conf
# - Connection Settings - max_connections = 256
vi /var/lib/pgsql/data/pg_hba.</description></item><item><title>OpenNMS网络和系统管理简介</title><link>https://martinliu.cn/2007/05/08/what-is-opennms/</link><pubDate>Tue, 08 May 2007 04:41:00 +0000</pubDate><guid>https://martinliu.cn/2007/05/08/what-is-opennms/</guid><description>1.1 概述
Opennms能够帮助IT管理部门持续的监控分布式的异构系统和网络设备的运行状态，它可以支持SNMP网络管理协议确保管理的扩展性，并且提供非常灵活的定制功能从而有利于管理范围的伸缩。它内置的故障事件管理以提供故障事件的记录和分析的能力，快速隔离非根源事件并迅速发现故障原因。Opennms良好的设计可以快速部署实施，简单友好的图形界面能够使得用户迅速掌握，从而降低操作的复杂度，提高IT管理效率。
1.2 体系架构
作为一个通用的网络系统故障监控平台，其体系架构应如下图所示：
 
**附图1. ** Opennms****体系架构
我们从下至上对Opnnms体系架构作一一的介绍：
u 被管理对象层，SNMP代理程序是数据采集和动作执行层。对应网络设备来讲，该层对应与网络设备本身的网络管理功能，不需要在设备上单独部署功能模块；对计算机来讲，该层是运行在目标计算机上的SNMP服务，负责采集该系统运行状况、性能等数据，并向管理层汇报。
u Opennms监控引擎是实现网络和系统可用性、故障管理的业务逻辑和策略的处理层。他利用特定的轮询策略：从代理程序层收集数据、更新和维护被管理对象状态、执行相关的报警事件通知。
u 管理对象数据库是网络和系统管理的数据存储层。其中以面向对象的方式保存着网络和系统资源的模型，记录着他们的配置、描述和状态等信息。这些模型和信息是通过Opennms网络扫描模块自动建立起来的，并由管理者层自动维护。
u 图形用户界面是网络和系统管理的数据表示层。他以各种直观、生动的用户界面向用户展示网络和系统中各种对象的关系、配置、状态和故障情况，是优秀的用户接口。
针对某企业简称user short name的环境，其IT故障监控子系统的管理框架为：
u 被管理对象层——启动核心路由器和交换机的SNMP网管协议，作为网络设备故障的数据提供源；在所有需要管理的服务器上运行SNMP服务，作为监控操作系统故障的数据提供源。
u Opennms网络监控服务器——新增一台服务器，部署Opennms的监控引擎模块，由该模块对被管理对象层的数据源进行自动的数据采集和翻译采集的结果。并实时发送报警信息。
u 对象存储库——在和Opennms监控引擎安装的机器上安装PostgreSQL，作为Opennms监控模块的对象存储库。
u 图形用户界面——某企业简称user short name管理员可使用任何的WWW浏览器连接Opennms网络监控服务器的用户界面，使用合适的用户名，在某种适当的权限下查看和浏览网络监控信息、状态信息、可用性报表和性能报表。
1.3 功能介绍
1.3.1 网络节点自动发现
对象存储库中的信息并不是靠管理员手工输入和维护的，而是由Opennms网络监控引擎－自动扫描模块自动从用户的计算机系统中搜索发现出来的。
**附图2. ** 网络节点自动发现
1.3.2 图形用户管理界面
在某企业简称user short name这 样的网络和系统中，需要一些友好的监控视图。目的是使得管理员能够通过直观的界面，迅速发现故障，从而在最短的时间内解决故障。该用户界面视图可使得管理 员通过管理工具看到现实世界对象的真实反映，而不是抽象的符号。使用户能够监控整个系统的概貌，系统的大体分布和总体运行状况等。并且决策适当的故障排除 方案，各种界面视图可通过Intranet进行浏览查看。</description></item><item><title>OpenNMS常问问题All-in-One</title><link>https://martinliu.cn/2007/05/08/opennms-faqs/</link><pubDate>Tue, 08 May 2007 04:35:00 +0000</pubDate><guid>https://martinliu.cn/2007/05/08/opennms-faqs/</guid><description>**问：OpenNMS是什么？
**答： OpenNMS是第一个开发在开源模式下的企业级网络管理平台应用。OpenNMS的目标是成为一个真真的分布式、可升级的网络管理平台，尽管它看似一个 FCAPS网络管理模型，使之可用于开放源码和商业领域。目前：OpenNMS专注与以下三个方面：服务轮询 － 检查应用服务的可用性，产生可用性报表。数据收集 － 收集、保存和报表网络信息数据，并设定和触发门限值。事件和提示管理 － 接受事件系统内部的和外部的事件，将源事件提供给强大的故障告警和故障升级系统。OpenNMS Group是开发和支持OpenNMS应用的一个商业性的实体。
问：为什么要开源？
答： 我们坚信真真的创新不会来自规模巨大的企业。我们还相信网络管理软件领域比Linux操作系统更适合开源模式。不像Linux，网络管理要去监视和控制来 自不同厂商的很多的技术。考虑到每年都有很多新的网络设备面世。商业软件公司并不希望追赶这种更新产品的工作负荷，相反它们只能依赖与它们的通用管理技术 （最小化的通用性）。相反，对于一个开源项目中的每一个人－－厂商、用户或者技术顾问－－都能对项目做出自己的共享，从而保障了这个项目成功的几率。
**问：OpenNMS是用什么语言写的？
**答： OpenNMS主要是用Java语言写的。OpenNMS2.0的目标是：让它成为一个以一堆.jar文件形式来安装的产品。还有一些非Java的部分： icmpd-Java1.4 API不能理解ICMP。因为ICMP回答请求（ping）是一个最简单的来测试基于Ip的网络设备是否可以服务的方法，没有那个网络管理应用程序不用的 它的。将ICMP功能分离为一个独立的守护进程的目标是，如果系统中有ICMP的功能那么OpenNMS就用，如果没有OpenNMS就率略它。 OpenNMS不需要ICMP来监控网络设备。数据库－OpenNMS现在使用PostgreSQL作为它的地层数据库，PostgreSQL 是用C写 的。OpenNMS2.0会使用几个能通过Hibernate适配器访问到的数据库。rrdtool－OpenNMS当前的版本实时的选择使用 RRDtool或jRobin（Java会使用RRDtool）。最终这个选项的默认使用jRobin，也可以选择使用RRDtool。
**问：OpenNMS有图形的显示么？
**答： 这可能是一个对于OpenNMS新人来说最常问的问题：OpenNMS的图形监控界面在那？简单的问答是我们没有一个这样的地图，如果你想听听我们的解释 请继续往下看。OpenNMS是被一些经验丰富的网络管理技术顾问开发出来的。HP的Openvew NNM是一个很流行的商业软件，它能生产一个可定制化的网络监控图形。OpenNMS Screenshot
[![](http://lh4.google.com/image/liuzh66/Rl19YgD97vE/AAAAAAAAAE8/hFVbteNWiR0/s160-c/OpenNMS.jpg)](http://picasaweb.google.com/liuzh66/OpenNMS)
[OpenNMS](http://picasaweb.google.com/liuzh66/OpenNMS)
**原文地址** [http://www.opennms.org/index.php/FAQ-About](http://www.opennms.org/index.php/FAQ-About)</description></item><item><title>GLPI –IT资源生命周期管理</title><link>https://martinliu.cn/2007/04/30/glpi-it-asset-mgmt/</link><pubDate>Mon, 30 Apr 2007 03:49:00 +0000</pubDate><guid>https://martinliu.cn/2007/04/30/glpi-it-asset-mgmt/</guid><description>GLPI是一个法国的开源项目，之所会了解到这个项目，是由于OCSNG的原因。当我安装并使用了一下它之后立刻产生了以下问题：1）它仅仅是一个对现有设备Inventory的工具，对新设备的采购和计划无法实现。2）它仅仅是一个技术工具，能提供CMDB相关的配置信息数据，相关的流程如何实现：计划，采购，使用，变更和报废。
没想到在安装试用了GLPI之后着一切都疑问都散去了。那就先讲讲安装过程。环境准备，我的测是环境如下：Dell Inspiron 600M笔记本（70GB HD, 1GB RAM），由于硬件资源实在有限，所以我喜欢使用VMWare作为测试环境。在VMWere中安装SuSE 10.1，最小安装；安装apache,perl,php,mysql和其它相关的包，由于Yast的包管理实在好用，所以为整个安装过程带来了很多方便。如果您也想测试的这个软件系统的话，最简单的方式则是：找一个物理的机器做SuSE 10.1的全安装，这样的安装过程绝对不会有找不到那些依赖组建的问题。软件安装：OCSNG / GLPI的安装模式都是相同的基本相似的比较简单；再次就不多话了；我猜您可能会碰到的问题有：GLPI的登陆用户名和密码的问题。所有可以利用的相关文档里好像没用提到这个信息，昏！可能是我的运气不好，的确没找到，不过最终被我猜到：）[登录密码在安装向导的导数第二个页面上]
OCSNG需要安装Agent，Agent会在目标设备上做清单扫描，上传Inventory信息；它的三层结构可能会是企业级用户的好消息，它还能方便的通过Windows 域的组策略部署代理，也就是说只要用户登陆域，代理就能顺利安装部署。OCSNG趋向做全面的客户端管理：inventory、license管理等方面。
从上面的GPLI的screenshot可以看出和一个笔记本电脑相关的一切。先讲讲它的来由，GPLI解决的是OCSNG的上层问题：计划，购买，部署，跟踪，变更，维护，退休。它管理的是所有业务和流程层面的东西。GPLI的数据来自OSCNG的数据库，它能自动从OSCNG中定期更新inventory信息。截屏中的电脑是我在我的笔记本上安装了OSCNG后，做的首次扫描后的结果，在GPLI中配置了和OSCNG的集成后，它就变成了一个GPLI中的管理数据。可以看到，和一个电脑资产相关的所有硬件信息，软件信息，help desk请求，文档，链接，注释和变更历史记录等。GPLI中有对外的HelpDesk模块，这能方便最终用户对设备维护的请求。
GPLI和OSCNG很好的结合可能做到“IT资源生命周期管理”，参考文档：http://glpi-project.org/wiki/doku.php?id=en:cyclevie
如果对把它们所实现的功能和ITIL框架对应一下，或许IT服务财务管理，能力管理，配置管理和发布管理等流程能与之能有某些联系。</description></item><item><title>OCSNG － IT资产管理软件</title><link>https://martinliu.cn/2007/04/29/ocsng-it-asset-management/</link><pubDate>Sun, 29 Apr 2007 09:26:00 +0000</pubDate><guid>https://martinliu.cn/2007/04/29/ocsng-it-asset-management/</guid><description>最近在网上又发现了一个不错的开源软件，这就是OCSNG资产管理软件。他能提供非常好的Inventory功能，发现并、更新计算机系统上的软硬件清单信息。下面是从他们的网站上找到特色介绍的信息：
Relevant inventory 资产清单管理. Powerfull deployment system 强大的部署系统，代理程序软件部署方便宜用。. Web Administration Console 基于Web的管理控制界面. Multiple operating systems support,多操作系统支持 Microsoft Windows, Linux, *BSD, Sun Solaris, IBM AIX, HP-UX, MacOS X. Lightweight bandwith usage: 轻量网络带宽使用，Windows系统的全部清单信息大约5 KB . High performance: 高性能，1 000 000 电脑每天做清单扫描，使用的服务器是bi-Xeon 3 GHz /4 GB RAM. 3-Tier architecture 三层架构设计，支持http/https/xml等协议河标准. 基于有名的开源产品实现， Apache web 服务器, MySQL 数据库服务器, PHP 和 PERL 脚本语言. Web service 提供 SOAP 接口的Web服务访问.</description></item><item><title>Nmap — Network Mapper(网络映射器)</title><link>https://martinliu.cn/2007/04/28/nmap-network-mappe/</link><pubDate>Sat, 28 Apr 2007 11:43:00 +0000</pubDate><guid>https://martinliu.cn/2007/04/28/nmap-network-mappe/</guid><description>Nmap (“Network Mapper(网络映射器)”) 是一款开放源代码的 网络探测和安全审核的工具。它的设计目标是快速地扫描大型网络，当然用它扫描单个 主机也没有问题。Nmap以新颖的方式使用原始IP报文来发现网络上有哪些主机，那些 主机提供什么服务(应用程序名和版本)，那些服务运行在什么操作系统(包括版本信息)， 它们使用什么类型的报文过滤器/防火墙，以及一堆其它功能。虽然Nmap通常用于安全审核， 许多系统管理员和网络管理员也用它来做一些日常的工作，比如查看整个网络的信息， 管理服务升级计划，以及监视主机和服务的运行。
Nmap输出的是扫描目标的列表，以及每个目标的补充信息，至于是哪些信息则依赖于所使用的选项。 “所感兴趣的端口表格”是其中的关键。那张表列出端口号，协议，服务名称和状态。状态可能是 open(开放的)，filtered(被过滤的)， closed(关闭的)，或者unfiltered(未被过滤的)。 Open(开放的)意味着目标机器上的应用程序正在该端口监听连接/报文。 filtered(被过滤的) 意味着防火墙，过滤器或者其它网络障碍阻止了该端口被访问，Nmap无法得知 它是 open(开放的) 还是 closed(关闭的)。 closed(关闭的) 端口没有应用程序在它上面监听，但是他们随时可能开放。 当端口对Nmap的探测做出响应，但是Nmap无法确定它们是关闭还是开放时，这些端口就被认为是 unfiltered(未被过滤的) 如果Nmap报告状态组合 openfiltered 和 closedfiltered时，那说明Nmap无法确定该端口处于两个状态中的哪一个状态。 当要求进行版本探测时，端口表也可以包含软件的版本信息。当要求进行IP协议扫描时 (-sO)，Nmap提供关于所支持的IP协议而不是正在监听的端口的信息。
除了所感兴趣的端口表，Nmap还能提供关于目标机的进一步信息，包括反向域名，操作系统猜测，设备类型，和MAC地址。
摘自：nmap中文文档 nmap首页</description></item><item><title>OpenNMS 安装说明－精简版</title><link>https://martinliu.cn/2007/04/26/opennms-install-sample/</link><pubDate>Thu, 26 Apr 2007 10:47:00 +0000</pubDate><guid>https://martinliu.cn/2007/04/26/opennms-install-sample/</guid><description>Per-install Checklist:
SuSE 10.1 Linux install CD OpenNMS rpm packages for SuSE Linux JDK 1.5 package Tomcat 5.5.20 package Here we go:
Insert install CD into Cd/Dvd rom Do SuSE Linux mini install Logon in OS, run &amp;lsquo;yast firewall&amp;rsquo; to open 8080 tcp port on firewall upload all packages to /opt untar JDK untar Tomcat install postgresql through yast; run &amp;lsquo;rcpostgresql start&amp;rsquo; Export some variables export JAVA_HOME=/opt/jdk1.</description></item><item><title>OTRS的第一个ITIL兼容版本</title><link>https://martinliu.cn/2007/04/23/otrs-itil-compatible/</link><pubDate>Mon, 23 Apr 2007 10:51:00 +0000</pubDate><guid>https://martinliu.cn/2007/04/23/otrs-itil-compatible/</guid><description>从来没用这么期待过一个软件的问世，虽然工具和技术不能画等号，不过它应该是第一个主动与ITIL看起，并且靠拢的开源软件。
1下载安装
需要下载的软件是OTRS 2.2.0 BETA2 和OTRS:ITIL 1.0；后者只是一个压缩包，它包含了所有ITIL相关的软件包。此次安装并不顺利，归咎于很多Apach上perl的配置；安装之后的问题多是其它依赖的软件包不全造成的。
2 CMDB
说不上它是一个很好的CMDB，不过用起来到是很方便。在Admin里把所有CI的类都建立出来后，相关的工作人员就能登陆上来，把相关的CI添加尽量。你需要从车轮开始做起，在这里可以说是非常适用，它不想商业软件内置了一堆的预定义的东西。CI直接的联系关系也可以得到表达。
3其它功能试用中待续</description></item><item><title>[转] 十问ITIL</title><link>https://martinliu.cn/2007/03/31/itil-faqs/</link><pubDate>Sat, 31 Mar 2007 08:56:00 +0000</pubDate><guid>https://martinliu.cn/2007/03/31/itil-faqs/</guid><description>想实现IT与业务融合的目标吗？
想让IT部门踏上自我管理之路吗？
想在IT规范的丛林里找到清晰的管理思路吗？
在IT与业务战略融合的过程之中，ITIL（IT基础设施库）和ITSM（IT服务管理）规范将为企业用户提供实现诸多IT与业务管理目标的真实路径。1989年，英国政府商务部在发现企业对IT提供服务和自我管理的方式存在混乱认识的问题后，发布了长达44卷的ITIL规范。目前所实行的第二版于2001年发布，容量减至9卷。而最新的消息显示，ITIL第三版本有望于2007年4月正式发布。
在ITIL诞生并成长的10余年间，ITIL及ITSM理念都经历了巨大的变化和发展，并有望在ISO 20000中成为全球标准。目前的ITIL既是一个词汇库，也是一系列旨在概括性描述IT最佳实践的概念性流程。对企业而言，要使IT更有效地实现自我组织和自我管理，兑现ITIL对于管理的承诺，是一项足以用“浩大”二字形容的工程。所以，您需要先确定一个起点，并了解目前与ITIL有关的10项核心内容。
** 1. 我能够通过ITIL实现哪些过去无法实现的目标吗？**
如果实施得当，ITIL可以提高客户满意度、减少IT部门中的浪费，并降低运营成本。下面是两个简单的案例：
● 在2000年，Caterpillar公司的IT部门解决Web事件的目标响应时间是30分钟，但是该部门达到这一目标的几率只有30%。实施ITIL后，其IT供应商达到该响应目标时间的几率提升至90%，而Caterpillar在过去5年实现了业务的几何级增长，IT预算只上升了1%。
● 两年前，Liberty Mutual的IT管理员只有在用户打投诉电话后才能发现某个关键网络应用已停止工作。部署ITIL后，管理员可以在故障发生前对应用的运行速度和异常活动进行监视，并且通常可在用户感觉到异样之前解决问题。
**2. 是否需要通读ITIL全部9卷的内容，哪些是重点章节？**
《服务支持》和《服务交付》这两卷包含了ITIL的核心知识，其他几卷都是补充性的。《服务支持》卷介绍了5个关键流程：即事件管理、问题管理、变更管理、发布管理和配置管理。尽管服务桌面被认为是一项功能，而非流程，但它仍被包含其中，并且被认为是IT服务的客户报告事件、发出请求和与IT基础设施与业务部门进行沟通的重要接触点。
事件管理的主要内容是，在发生事件（例如服务器崩溃）后尽可能快速地恢复正常的业务运营。问题管理将注意力集中在查找和消除事件的根源，防止其死灰复燃。
ITIL的独特能力是它可以将“事件”与“问题”隔离开来。通常，支持人员在查找事件的根源时，IT部门的支持服务就会暂时处于停顿状态。ITIL优先考虑的是为业务部门提供服务，其次才是在后台修复问题的根源。
变更管理是协调和控制IT基础设施自身变化的过程。ITIL将其视作实现适当批准、授权和质量保证步骤的一项协调工作。
发布管理指的是IT变更的实际实施，包括人员、流程、技术、培训、推广、沟通和业务领域活动，以及设计的建立、测试和变更发布等内容。对大多数IT运营活动而言，将各种变更打包为发布单元，可以有效地降低业务所受到的影响。
配置管理包括日志记录、跟踪、控制和验证基础设施信息的过程，这些信息用于描述IT基础设施中的每一个组件，以及各个组件之间的关系。这一过程的重点是这些项目，即所谓的CI（配置项）之间的相互关系。所有这些信息都保存在一个逻辑CMDB（配置管理数据库）中。
**3. CMDB到底有多重要？**
CMDB是建设整个IT基础设施的蓝图，它描述各个配置项（CI），包括硬件、软件、事件、协议、服务水平、文档等之间的相互关系，同时还用于描述整个元系统（metasystem）的工作情况。CMDB已经成为迅速查找IT基础设施信息的基础，同时也是实现有效管理决策的基础。在理想条件下，每个CI都有各自的可配置属性。如果可能，CMDB应该能够自动发现CI的相关信息，并在发生变化时对其进行跟踪，从而将维护配置项所需要的管理工作量降至最低。
**4.《服务交付》卷关注哪些内容，重要性如何？**
《服务交付》卷关注的是IT服务的交付和增强方式，该卷重点强调了5个关键的流程：即服务水平管理、可用性管理、容量管理、IT服务连续性管理和IT财务管理。
服务水平管理涉及SLA（服务水平协议）的规划、协调、监视和报告。它会以连续的方式对服务进行评估，确保这些服务能够以高性价比的方式交付，同时还要满足用户的服务目标。
可用性管理负责协调、设计、测量和管理IT基础设施的可用性，并会综合考虑基础设施和支持机构的各方面情况。它可以协调和集成各个松散结合的“孤岛”，确保IT能够按照必要的水平和成本提供所需的服务。这一过程会将一些关键原则结合在一起，其中包括每种服务的可靠性、可服务性、可管理性、安全性和响应性。
容量管理考虑的是适应业务工作量和业务目标的IT容量、性能和吞吐量。从历史上看，大多数IT部门都会根据IT资源的使用方式来管理容量。ITIL则要求IT部门首先了解容量的业务驱动需求，并在将其实施到IT基础设施之前，通过建模和预测发展将其转化为服务工作量。
IT服务连续性管理可以确保IT服务能够在发生重大灾难时得到恢复。它引入了关键业务功能概念，迫使IT部门将注意力放在服务的恢复上，不再仅仅关注技术的修复。
IT财务管理可以提供IT成本和支出管理所需的预算、会计和收费服务。IT部门通常不了解其提供IT服务所发生的成本，这也是其总被公司董事会质疑的原因之一。IT部门必须开发出一种能力，来明确说明IT服务成本以及IT部门的贡献，IT财务管理将赋予他们这样的能力。 ITIL强调其参与业务活动的具体方法，这方面，服务台意义重大。在典型的业务部门中，业务用户和客户每天都会与服务台建立联系，而且这已经成为服务支持工作流程的一个必要组成部分。同时，行政和管理部门也需要与服务水平管理过程建立接口，从而实现新服务的部署，并调查服务提供工作流程所使用的服务质量。
**5. 其他7卷的作用和意义？**
在理解了基本概念后，您会对其余的7卷有更多的了解。例如，《ITIL简介》介绍了构成ITIL服务管理的基本概念；《实施ITIL服务的规划》解释了某个部门通过ITIL获得帮助的一些必要步骤；《ICT基础设施管理》涉及了一些关键问题，比如网络服务管理、运营管理、计算机安装和验收等；《应用管理》重点讨论了软件开发和支持周期，对要求和IT服务的测试进行了定义。 《业务展望》卷事实上是两本书，一本面向IT人员，另外一本适用于商业经理。这两本书讨论了业务连续性管理、伙伴关系、外包、生存几率、以及剧烈变化过程中随机应变的业务实践。《安全管理》以ITIL的视角对各项安全规范和标准进行了讨论。最后一本是《软件资产管理》，它提供了管理软件和软件授权的最佳实践。
** 6. 为什么在美国的部署远远落后于欧洲？**
美国在IT基础设施管理的规范化方面一直落后于欧洲。最近美国开始重视ITIL的原因之一是，许多在美国经营的欧洲和亚洲企业都在呼吁：在更大范围内让IT运营符合ITIL的要求。另外，很多美国企业发现，有超过2/3的IT预算被全新的、不可任意支配的运营成本所吞噬，而它们对此根本没有任何控制能力。 ITIL将改变这一现状，它可以针对具体的商业目标实施连续的小型项目，而且所有结果都是可测量的。典型的目标包括缩减IT成本、减少服务中断、为重大IT计划或商业变化做好准备，比方说企业兼并、搬迁或收购。
** 7. 除大型企业外，还有哪些企业需要ITIL？小型企业或个人是否也可使用ITIL？**
任何为企业提供IT服务的部门和/或为企业客户提供服务的部门都能从ITIL中受益。 例如，一家小型企业面临着网络经常中断的困扰，那么这家企业可以使用ITIL的问题管理流程来改善其网络环境。如果一家中型企业的IT基础设施非常复杂，那么这家企业就可以利用ITIL的配置管理解决方案，针对各类变更和新应用进行优化与评估，并为其实施绘制蓝图。
**8. 在对ITIL有了充分了解的前提下，该如何启动ITIL呢?**
首先要接受培训并获得认证。几乎所有的大型硬件/软件厂商和一些中小型企业都可以提供ITIL培训。您可以在网上搜索相关的ITIL培训机构。完成培训后，您需要利用书本、网络研讨会、图书馆材料和在线资源填补您的知识空白。比较好的ITIL资源包括：IT Service Success（itServiceSuccess.com）、服务水平管理（slminfo.org）和ITSM Watch（itsmwatch.com），以及美国IT服务管理论坛中主要的用户组站点（itsmfusa.org）。
**9. 是否应该聘用一些人员做ITIL实施？**
许多公司都提供ITIL咨询和实施服务，但这只是采用曲线中最初级的部分。目前的市场中尚不存在所谓的领导型企业。您可以根据他人的经验来选择适当的服务商。 ITIL告诉了我们“要做什么”，但有关“怎么做”的问题却涉及较少。目前，ITIL被称为“IT部门的ERP”，它需要结合企业自身情况将人员、流程和工具相互融合。因此，ITIL要在企业成功实施首先需要领导的积极推动，同时必须在企业中结合角色设置流程经理来落实设计的流程。在推动的过程中，企业应当考虑聘用顾问协助实施，让企业员工对ITIL有更为深刻的理解和认识，这对整个项目的成功帮助极大。
** 10. ISO 20000与ITIL的关系是什么？ **
ITIL主要是一些流程，它并不提供任何衡量标准。而最近发布的ISO 20000是评测IT服务管理和改善IT服务的基础。它定义了针对服务商的要求，并且帮助您确定自己的工作是否符合可接受的IT服务管理标准。ISO 20000可以提供具体、可测量的标准，能够用于对范围、定义条款、规划和实施服务管理、管理系统要求、全新或变更服务规划及实施、服务提供过程、关系过程、控制过程、决议过程和发布过程等领域进行审查。
ITIL资源站点
■ 国外站点：</description></item><item><title>ntop ~ Web-based network traffic monitor</title><link>https://martinliu.cn/2007/03/21/ntop-web-based-network-traffic-monitor/</link><pubDate>Wed, 21 Mar 2007 04:09:00 +0000</pubDate><guid>https://martinliu.cn/2007/03/21/ntop-web-based-network-traffic-monitor/</guid><description>安装方法：
最简单的安装方法应该是从Linux的安装光盘中安装，因为它比较小只有2～3MB；很多Linux都包含这个软件。在SuSE Linux 10.1中可以找到ntop-3.2-17。
配置使用：
安装之后参考说明文档做首次初始化运行，如果是通过rpm从Linux光盘中安装；相关的系统服务也已经帮你安装。在SuSE里运行rcntop start就可以启动后台进程。访问ntop的界面http://myserver:3000/。
Tips：
ntop会吃掉比较多的内存资源，不建议在生产机上安装。它工作在第二层，采用实时抓包的方式；ntop像是网络探针来捕获和分析网络活动，产生一些分析报表，部署时需要考虑它的部署位置。
于其它系统的集成：
该系统界面的访问比较的直接，没有用户认证过程。所有报表和分析结果的按两个方式保存和呈现：host和协议。它通过rdd存储数据，通过web页面展示图片；本身不需要依赖web server。准备尝试把它集成到Nagios和OpenNMS中。
ntop的英文说明
From: http://www.ntop.org/Monitoring.html
NTOP is helpful as an &amp;ldquo;emergency&amp;rdquo; tool. When you are experiencing response time delays or you suspect that something is wrong with your network, NTOP allows you to easily monitor the protocols running on your LAN and to determine the utilization of each.
NTOP comes very well when suspicious behavior is found on your network.</description></item><item><title>GroundWork rpm 安装会导致原系统的一些改变</title><link>https://martinliu.cn/2007/02/28/groundwork-rpm-error/</link><pubDate>Wed, 28 Feb 2007 09:14:00 +0000</pubDate><guid>https://martinliu.cn/2007/02/28/groundwork-rpm-error/</guid><description>GroundWork rpm安装对系统造成的改变有：
/etc/init.d/apache2 被改名为 apache2-save 导致，以前的Apache不能启动 会在/etc/ld.so.conf中加入一行/usr/local/groundwork/lib ；不知道为什么这会导致一下系统的服务不能正常运行，如：PostgreSQL和snmpd。修复方法是注释掉这一行，然后运ldconfig命令。还不知道GroundWork在没有这一行的情况下有什么问题，注释掉之后好像它还是能正常运行的。</description></item><item><title>GroundWork和OTRS系统的集成问题</title><link>https://martinliu.cn/2007/02/27/groundwork-and-otrs/</link><pubDate>Tue, 27 Feb 2007 09:40:00 +0000</pubDate><guid>https://martinliu.cn/2007/02/27/groundwork-and-otrs/</guid><description>为了节省服务器，我们可能不得不把所有的监控以及相关的系统都安装到一个物理的机器上。如果是从原代码安装，我相信一定有很多选项能避免它们之间的冲突。假如你是后安装的GroundWork，它会更改系统默认的Apache2的配置，导致以前安装的所有的Web应用都不能用。
在我的测试机上，先安装的OTRS，rpm安装，后安装的GroundWork，也是rpm安装。GroundWork安装之后，OTRS不能登陆。根据GroundWork的一些文档我做了，如下的修复步骤。
1）vi /etc/apache2/conf.d/otrs.conf 可以看到如下OTRS的web配置信息。
# &amp;ndash;# added for OTRS (http://otrs.org/)# &amp;ndash;# agent, admin and customer frontendScriptAlias /otrs/ &amp;ldquo;/opt/otrs/bin/cgi-bin/&amp;ldquo;Alias /otrs-web/ &amp;ldquo;/opt/otrs/var/httpd/htdocs/&amp;quot;# load all otrs modulesPerlrequire /opt/otrs/scripts/apache2-perl-startup.pl# Apache::Reload - Reload Perl Modules when Changed on DiskPerlModule Apache2::ReloadPerlInitHandler Apache2::ReloadPerlModule Apache2::RequestRec# set mod_perl2 options# ErrorDocument 403 /otrs/customer.pl ErrorDocument 403 /otrs/index.pl SetHandler perl-script PerlResponseHandler ModPerl::Registry Options +ExecCGI PerlOptions +ParseHeaders PerlOptions +SetupEnv Order allow,deny Allow from all# directory settings AllowOverride None Options +ExecCGI -Includes Order allow,deny Allow from all AllowOverride None Order allow,deny Allow from all# MaxRequestsPerChild (so no apache child will be to big!</description></item><item><title>OTRS::ITSM期待中的开源ITIL工具</title><link>https://martinliu.cn/2007/02/26/otrsitsm-itil/</link><pubDate>Mon, 26 Feb 2007 07:19:00 +0000</pubDate><guid>https://martinliu.cn/2007/02/26/otrsitsm-itil/</guid><description>
下个月就OTRS::ITSM 1.0 Beta1就发布了。OTRS是一不错的开源的帮助台程序。之所以说它还不错是由于以下几点：
能支持平台非常广。操作系统有Linux、Unix还有Windows；数据库有MySQL，PostgreSQL，Oracle和SQL Server。这些东西里多一个东西，多于商业软件来讲测试的工作量起码就要乘二。 安装和配置是相当的简单。我用的是SuSE Linux，是用RPM包安装，整个安装配置过程只需要10分钟。 支持多语言，目前能支持的语言有10几种，包括简繁体中文。 纯Web操作界面，Web界面可以定制；很好的邮件系统集成。有问题单生成接口，能够将第三方网络系统监控的故障告警变成问题单，再自动分配到相关的维护组。 从它的名字可以看出，他是一个“开放式问题单系统”或者说是“帮助台”“Help Desk” “工单跟踪系统”。一个单纯的问题单系统本身到没有什么特殊，不过能做到像OTRS这样像ITIL靠拢，试图做成一个遵从ITIL的开源IT服务管理解决方案的，可真的是不容易了。在看看其它的Help Desk的开源项目，都是在简单的在实现“问题管理”这个功能而已。
OTRS现在最新的版本是otrs-2.1.5-01，等2.2正式发布后，OTRS::ITSM 1.0 就作为其中的一个模块也发布了。其实做到一个真真ITIL兼容的帮助台还真的不容易，我将期待它的CMDB，变更管理，以及各个流程之间的衔接。
登陆这个OTRS的Demo系统来看看它到底怎么样，Check it out！！
Agent/Admin Interface:
http://demo.otrs.org/
Customer Interface:
http://customer.otrs.org/
FAQ Public Interface:
http://faq.otrs.org/
Email:
demo@otrs.org
System:
Intel(R) Celeron(R) CPU (2 GHz) with 256 MB RAM and an IDE harddrive (current tickets ~55.000 - 2005-05-02)</description></item><item><title>Nagios华丽的外衣NagVis</title><link>https://martinliu.cn/2007/02/25/nagios-nagvis/</link><pubDate>Sun, 25 Feb 2007 03:09:00 +0000</pubDate><guid>https://martinliu.cn/2007/02/25/nagios-nagvis/</guid><description>如果你用过Nagios的话，它的2D、3D Map一定会给你留下一些印象；2D Map的确能比较试用一点，不过看上去还是挺难看的。NagVis就是看到了这一点，它力求能让各种状态信息表达的更炫，更好看；它可以说是Nagios的一个不错的插件，直接copy到Nagios的相关目录下，配置一下就行了。它的效果如下图所示：说的在玄虚一点它可以是一个“业务流程管理视图”[CA Unicenter中的名词，OpenView里也有类似的概念]。其实就是把原子的监控对象：被监控节点和节点上的服务；和业务系统或者IT的逻辑关系相结合起来。例如：我的业务系统A的其中一个数据库服务器的数据库进程停了，这个可以影响到所有物理包含或者逻辑包含它的对象的状态。NagVis试图用漂亮的图标来表达这些状态和关系，是管理者能看的更加直观。</description></item><item><title>Install Smokeping via yum</title><link>https://martinliu.cn/2007/02/16/install-smokeping-via-yum/</link><pubDate>Fri, 16 Feb 2007 16:38:00 +0000</pubDate><guid>https://martinliu.cn/2007/02/16/install-smokeping-via-yum/</guid><description>From :http://ai.net.nz/horde/wicked/display.php?page=SmokePing
Install needed packages
rrdtool
`yum install rrdtool &amp;lt;br /&amp;gt;**perl-CGI-SpeedyCGI**&amp;lt;br /&amp;gt; `yum install perl-CGI-SpeedyCGI
fping
`yum install fping &amp;lt;br /&amp;gt;** Or do them all together:**&amp;lt;br /&amp;gt; `yum install rrdtool perl-CGI-SpeedyCGI fping
Smokeping
`wget http://people.ee.ethz.ch/~oetiker/webtools/smokeping/pub/smokeping-2.0.9.tar.gztar xvzf smokeping-2.0.9.tar.gzmv smokeping-2.0.9 /usr/local/smokepingchown -R root:root /usr/local/smokeping&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;cd /usr/local/smokeping/binfor foo in *.dist; do cp $foo `basename $foo .dist`; done&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;cd /usr/local/smokeping/etc/for foo in *.dist; do cp $foo `basename $foo .</description></item><item><title>如何看懂Smokeping图表</title><link>https://martinliu.cn/2007/02/15/smokeping-chart/</link><pubDate>Thu, 15 Feb 2007 08:45:00 +0000</pubDate><guid>https://martinliu.cn/2007/02/15/smokeping-chart/</guid><description>_RTT(Round-Trip Time) _
简单说它是一个数据报在网络上两点中间往返一次的时间。是影响TCP性能和表征网络运行状况的重要参数。在网络中实时、准确地测量大量TCP设备和系统的RTT参数是网络管的重要环节之一。Smokeping就是这样的自动测试系统，它向目标设备和系统发送各种类型的测试数据包，测量、记录和展示RTT。
_Median RTT _****中间数
它是中间数并不是平均值。Smokeping有多种类型的探针，探针在默认的设置下，每300秒向目标设备发送20测探测数据包。假如这20个数据包都返回的话，它就记录下了20个RTT，那么Median RTT就是第十个包的RTT；如果有5个包丢失的话，那么Median RTT就是第八个返回的包的RTT值。
_Avg RTT _****评价值
它是每一个测试回合中所有RTT的算术评价值。
Avg pkt loss
它是丢包率。
上图中测试的三个服务器，是用默认的FPing探针探测该服务器是否在线。Smokeping就装在OpenNMS上，可以看出它的RTT最小；奇怪的是它的丢包率却是最大。其它的，一个是美国的一个Web服务器，另一个是美国的Exchange邮件服务器。
Last 3 Hours 最近的3小时
_Median Ping RTT （__506.2 ms avg）_中间数的平均值是5.6.2毫秒。如果是绿色的短横线，说明一个300秒的周期内所有的包都返回都有RTT的时间记录下来；如果是蓝色的短横线则说明有2个包丢失。
_Packet Loss：_丢包率。从上图中我们看出全都是绿线，所以丢包率当然是0。
_Probe：_10 HTTP pings using echoping(1) every 300 seconds
这张图是2007-1-11 12:00:05生成的。每一个绿色的短横线都是一个测试回合300秒内用echoping测试HTTP协议10次。绿色画出的是中间数的位置，一个回合中的其它值都在它附近被以灰度的形式被刻画；灰度的范围越小越好，灰色的范围像是烟雾一样笼罩在中间数附近。在中间数附近的烟越小越好，说明网络很平稳。RTT曲线的起伏还显示了网络的负载情况。
点击这里看一个网上的Demo
update : 2008-1-18
现在OpenNMS把smokeping集成了，你可以在OpenNMS中配置使用这个功能。</description></item><item><title>翻译[opennms-discuss]邮件组里的一个讨论“Nagios转变”</title><link>https://martinliu.cn/2007/02/01/opennms-discuss-nagios/</link><pubDate>Thu, 01 Feb 2007 14:51:00 +0000</pubDate><guid>https://martinliu.cn/2007/02/01/opennms-discuss-nagios/</guid><description>全文在＝》China OpenNMS
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
我们已经在一个中等规模的企业实施了Nagios，用来监控一堆Cisco设备：交换机、路由器、防火墙，还有各种类型的服务器
（Windows,Linux和Unix）。对我们来说Nagios工作的非常好。我们现在看OpenNMS，是由于她有好看的用户界面和集成的服务资源
图。我喜欢Nagios是由于它的模块化。我能很容易的写一个插件来完成任何相关的事情。
我看到OpenNMS有NRPE和NSCLIENT的能力，但是有一些邮件和资源图不能彻底的采集到。有人正打算用OpenNMS作为Nagios或者其他
软件的替代品？我的答案是非常确定的，可是我也非常想听到一些关于OpenNMS的成功或者不很成功的故事。我正在测试环境中使用
的是OpenNMS1.3.2。
Thanks!
Jon Christensen
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;
我们也有一个和你类似的环境（路由器、交换机、各种服务器），目前有大约250个节点。
使用一个CentOS4的服务器，我们已经在上面安装了OpenNMS1.2.9，Syslog-NG，Swatch, Logtool(http://xjack.org/logtool/)，
在Windows上用Informant MIB，在几乎所有Linux/Unix上的是NET-SNMP，和它们一起的还有很多在客户端的自定义脚本；它们中的
大多数都使用send-event.pl或者和它无关。
应为所有这些，我们已经能完全替代了HP OpenView，虽然这是我的一面之词：这个架构是如此的模块化，以致于我们能做的比我们
使用OpenView的还要多，因种种理由。
Tim Selivanow
NOC Technician
EasyStreet Online Services, Inc.
______________________________________
我的个人观点：
从Nagios转到OpenNMS上，其实不太容易。由于一下因素：
1）Nagios非常模块化，架构让人决定非常稳定可靠；它没有用到Java。
2）它的文档非常好，包括它官方的使用手册和用户上传的文档；从文档可以看出这个欧洲Base的项目非常踏实，风格严谨。开发ONMS的那帮老米显得比较自作聪明一点。
3）Nagios的论坛很好，有很多人可以互相帮助。</description></item><item><title>Cisco网络设备如何配置SNMP代理</title><link>https://martinliu.cn/2007/01/28/cisco-network-configure/</link><pubDate>Sun, 28 Jan 2007 13:31:00 +0000</pubDate><guid>https://martinliu.cn/2007/01/28/cisco-network-configure/</guid><description>Cisco是网络设备的老大，它的设备以稳定、成熟和高性能著称。很多用户都以自己的网络设备是99％的Cisco设备而自豪。
对于任何一个网络设备如果没有配置SNMP代理，就不能被任何管理工具管理。下面的这个连接就是关于如何配置Cisco的SNMP服务：http://www.cisco.com/univercd/cc/td/doc/product/software/ios122/122cgcr/ffun_c/fcfprt3/fcf014.htm
可网管网络设备都内置有SNMP代理，很多网管不喜欢配置、enable SNMP服务的理由如下：不希望SNMP服务占用CPU、内存等资源；不信任SNMP服务的安全性；不认确认SNMP管理协议的价值。我个人认为：通过SNMP协议对网络设备管理的价值将远远高于它对设备造成的消耗和带来的风险。如果你同时面对和管理30台以上的网络设备，试想把它们的运行状况做一遍检查，您需要花的时间是多长。
网络管理系统和网络设备的互动如下：
网管系统主动定时读取MIB的值，存储和分析得到的数值，产生报表和报警事件。 网管系统被动作为网络设备发送Trap的目的地，网管系统需要能翻译各种网络设备的Trap信息的意义。</description></item><item><title>联络</title><link>https://martinliu.cn/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://martinliu.cn/contact/</guid><description/></item></channel></rss>