<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elastic on Martin Liu's Blog</title><link>https://martinliu.cn/tags/elastic/</link><description>Recent content in Elastic on Martin Liu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 06 Feb 2021 10:36:12 +0800</lastBuildDate><atom:link href="https://martinliu.cn/tags/elastic/index.xml" rel="self" type="application/rss+xml"/><item><title>Elastic 可观测性工作坊</title><link>https://martinliu.cn/blog/elastic-%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7%E5%B7%A5%E4%BD%9C%E5%9D%8A/</link><pubDate>Sat, 06 Feb 2021 10:36:12 +0800</pubDate><guid>https://martinliu.cn/blog/elastic-%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7%E5%B7%A5%E4%BD%9C%E5%9D%8A/</guid><description>&lt;img src="https://martinliu.cn/img/2021/Hubble_01.jpg" alt="Featured image of post Elastic 可观测性工作坊" />&lt;p>本工作坊包括本地虚拟机版本、AWS 和腾讯云共三个版本，目标是用实践的方式理解 Elastic 可观测性解决方案。可观测性是解决运维云原生应用的复杂性和分布式式难点的关键所在。&lt;/p>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>Elastic 可观测性解决方案是基于 Elastic Stack 的一站式解决方案。该解决方案具有完备的日志、指标、APM 和可用性采集能力，可以在大规模/云原生的环境下，完成服务质量目标（SLO）的管理。本实战工作坊基于多层架构的宠物诊所为示例应用程序，手把手的引导参与者搭建可观测性管理平台，体验分层次的收集整合、分析、关联和搜索运维数据的全过程。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/images/elastic-obv-solution.png"
loading="lazy"
alt="可观测性解决方案"
>&lt;/p>
&lt;h2 id="为什么要做这个工作坊">为什么要做这个工作坊？&lt;/h2>
&lt;p>从理论的理解到技术工具的实操掌握需要一个过程。&lt;/p>
&lt;ul>
&lt;li>关于可观测性的各种一小时左右的技术、方案、产品分享，完全无法让听众正确理解可观测性的相关概念&lt;/li>
&lt;li>而通过实操性质的，上机动手实验则可以让新手迅速入门，使熟手快速全面的提高&lt;/li>
&lt;li>大量 ELK 用户只使用到了日志管理的部分功能，还不了解任何一种可观测性管理方案的全貌&lt;/li>
&lt;li>社区里的朋友们对可观测性心存大量误解，如“ APM 工具就等于可观测性” 等等，因此相关的正确观念和技术急需尽快普及&lt;/li>
&lt;/ul>
&lt;p>通过半天的实战演练，彻底学会相关知识。&lt;/p>
&lt;h2 id="动手实验">动手实验&lt;/h2>
&lt;p>本工作坊的最佳参与方式是在老师的引导下，在线下/线上同步进行。其次是在视频的指导下自学。所有动手实验的目标是：理解可观测性解决方案的各个组成部分，以及为什么要使用这些工具？而且这个整个方案的实施过程和顺序也是经过精心设计的，目标是让理论和实际彻底融会贯通。&lt;/p>
&lt;p>您将会学到：&lt;/p>
&lt;ol>
&lt;li>搭建单节点 Elasticsearch 服务，并且配置好 Kibana 管理图形管理界面。&lt;/li>
&lt;li>学习可观测性的基本概念和实施步骤&lt;/li>
&lt;li>搭建和配置服务健康检查的探针&lt;/li>
&lt;li>部署采集操作系统性能监控指标的流程&lt;/li>
&lt;li>配置操作系统日志的采集和分析工具&lt;/li>
&lt;li>搭建用于 APM 追踪分析的后台服务&lt;/li>
&lt;li>运行一个多层架构的宠物商店应用，对各个子服务进行 APM 监控埋点&lt;/li>
&lt;li>配置常用的服务质量监控大屏&lt;/li>
&lt;/ol>
&lt;p>本工作坊课程基于如下的应用系统。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/images/16042852442364.png"
loading="lazy"
>&lt;/p>
&lt;p>应用基本概况：&lt;/p>
&lt;ul>
&lt;li>多层宠物商店应用系统&lt;/li>
&lt;li>所有组件都部署在一个虚拟机上&lt;/li>
&lt;li>包括前端、后端和内置的数据库&lt;/li>
&lt;li>使用到的技术有 JavaScript、NodeJs 和 Java Spring 等。&lt;/li>
&lt;li>本应用系统是被监控的对象&lt;/li>
&lt;/ul>
&lt;p>Elastic Stack 的基本状况：&lt;/p>
&lt;ul>
&lt;li>版本 7.9.3&lt;/li>
&lt;li>组件 Elasticsearch、Kibana、APM、Filebeat、Metricbeat 和 Heatbeat。&lt;/li>
&lt;/ul>
&lt;p>实验环境：&lt;/p>
&lt;ul>
&lt;li>本地虚拟机环境，打包好的虚拟机里包含了所有必要的软件包和演示应用。&lt;/li>
&lt;li>AWS 云环境，本课程所使用的公共 AMI 操作系统镜像：宁夏区 &lt;code>ami-0e5a0e294902966af&lt;/code> 北京区 &lt;code>ami-0e1382088b62cb38d&lt;/code>&lt;/li>
&lt;li>腾讯云环境，基于腾讯云提供的 Elasticsearch 服务，演示用的虚拟机在制作中，稍后会发布到云市场。&lt;/li>
&lt;li>阿里云环境，基于阿里云提供的 Elasticsearch 服务的课件正在开发中。&lt;/li>
&lt;/ul>
&lt;h2 id="可观测性构建四步法">可观测性构建四步法&lt;/h2>
&lt;p>可观测性依赖于应用系统自身和监控工具平台的配合实现。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/images/e2e85893b5dd8014.jpeg"
loading="lazy"
alt="可观测性"
>&lt;/p>
&lt;p>分层次的构建可观测性的推荐过程如下：&lt;/p>
&lt;ol>
&lt;li>STEP0：使用 Heatbeat 构建轻量灵活的服务健康检查能力&lt;/li>
&lt;li>STEP1：使用 Metricbeat 构建全面细致的指标采集能力&lt;/li>
&lt;li>STEP2：使用 Filebeat 构建高维度的日志采集能力&lt;/li>
&lt;li>STEP3：使用 APM 构建分布式应用系统的全堆栈追踪能力&lt;/li>
&lt;/ol>
&lt;p>通过以上的四个构建步骤，使用 Elastic Stack 实施四大服务质量监控能力的构建，搭建了持续统一运维管理的工具平台。&lt;/p>
&lt;p>使用 SRE 基于‘用户旅程’或‘系统边界’的 SLO 分析设定方法，从 Elastic Stack 的已有数据采集能力中，选取第批直接可用的 SLI 采集点。在基于 SLO 的监控过程中，不断的优选 SLI，调整告警的数量和质量，为开发团队提供持续有效的反馈。&lt;/p>
&lt;p>使用 Canvas 的画布功能，定制如下的 SLO 监控大屏。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/images/2020-11-05_00-13-06.jpeg"
loading="lazy"
alt="2020-11-05_00-13-06"
>&lt;/p>
&lt;h2 id="工作坊课件">工作坊课件&lt;/h2>
&lt;p>讲师 PPT 下载： &lt;a class="link" href="https://docs.qq.com/slide/DUGRzYVVTU3ZxblBP" target="_blank" rel="noopener"
>https://docs.qq.com/slide/DUGRzYVVTU3ZxblBP&lt;/a>&lt;/p>
&lt;h4 id="本地虚拟机环境">本地虚拟机环境&lt;/h4>
&lt;p>可以使用本地的 VirtualBox 或者 VMWare 的虚拟机环境，配合以下课件完成所有练习。&lt;/p>
&lt;ol>
&lt;li>&lt;a class="link" href="https://elk-workshop.github.io/codelabs/one-nodes-es-server/#0" target="_blank" rel="noopener"
>‘Elastic Stack 单节点搭建’ 课件&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://elk-workshop.github.io/codelabs/elastic-observability-foundation/#0" target="_blank" rel="noopener"
>‘Elastic 可观测性方案’ 课件&lt;/a>&lt;/li>
&lt;/ol>
&lt;h4 id="aws-云计算环境">AWS 云计算环境&lt;/h4>
&lt;p>可以使用 AWS 云计算（中国区北京或宁夏区）环境，配合以下的课件完成所有练习。&lt;/p>
&lt;ol>
&lt;li>&lt;a class="link" href="https://elk-workshop.github.io/codelabs/one-nodes-es-server/#0" target="_blank" rel="noopener"
>‘Elastic Stack 单节点搭建’ 课件&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://elk-workshop.github.io/codelabs/elastic-observability-foundation/#0" target="_blank" rel="noopener"
>‘Elastic 可观测性方案’ 课件&lt;/a>&lt;/li>
&lt;/ol>
&lt;h4 id="腾讯云计算环境">腾讯云计算环境&lt;/h4>
&lt;p>可以使用腾讯云计环境，配合以下的课件完成所有练习。&lt;/p>
&lt;ol>
&lt;li>在本环境下，不需要搭建 Elastic Stack 的服务器，参展下面课件的第二步骤，创建 Elasticsearch 服务集群。&lt;/li>
&lt;li>&lt;a class="link" href="https://elk-workshop.github.io/codelabs/elastic-observability-foundation-qq/#0" target="_blank" rel="noopener"
>‘Elastic 可观测性方案’ 课件&lt;/a>&lt;/li>
&lt;li>腾讯云环境录播网址：&lt;a class="link" href="https://cloud.tencent.com/developer/salon/live-1304" target="_blank" rel="noopener"
>腾讯课堂查看&lt;/a>&lt;/li>
&lt;/ol>
&lt;h4 id="阿里云计算环境">阿里云计算环境&lt;/h4>
&lt;p>可以使用阿里云环境，配合以下的课件完成所有练习。&lt;/p>
&lt;blockquote>
&lt;p>课件开发中。&lt;/p>
&lt;/blockquote>
&lt;h2 id="如何参与本工作坊">如何参与本工作坊？&lt;/h2>
&lt;p>本工作坊会在多个社区中举办，具体安排如下：&lt;/p>
&lt;ul>
&lt;li>定期在 Elastic 社区中举办可观测性主题的线上或者线下的社区活动，具体报名方式，
&lt;ol>
&lt;li>请关注 Elastic 公司的官方微公众号 “Elastic搜索”。&lt;/li>
&lt;li>关注 Elastic 公司社区在百格的社区活动报名网址：https://www.bagevent.com/org/738410&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Elasitc 用户日 专场活动，接受企业的团队预约，可以在约定的时间里，通过线上或者线下的方式进行，建议参与学习交流的人数在 10~20 人。 预约邮件： &lt;a class="link" href="mailto:zheng.liu@elastic.co" >zheng.liu@elastic.co&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>由于 Elastic Stack 产品的更新迭代速度特别快，本工作坊的软件版本和学习课件也会不定期更新。欢迎大家积极参与 Elastic 技术社区的交流和学习活动。&lt;/p></description></item><item><title>Beats 摄入数据的最佳实践</title><link>https://martinliu.cn/blog/beats-%E6%91%84%E5%85%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Sun, 21 Jun 2020 18:42:56 +0800</pubDate><guid>https://martinliu.cn/blog/beats-%E6%91%84%E5%85%A5%E6%95%B0%E6%8D%AE%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>&lt;img src="https://martinliu.cn/images/locked-up.jpg" alt="Featured image of post Beats 摄入数据的最佳实践" />&lt;p>本文概要：配置 ES 3 节点全加密，Kibana 的 SSL 加密配置，Beats 的高可靠性加密传输，用 RBAC 怎样把权限控制到最小，在配置文件中消除明文密码，这些你都做到了么？如何保证安全、能适应和可扩展的配置 Elastic Stack 技术栈，让我们从 Bests 的角度开始讲解。&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文使用的软版本：&lt;/p>
&lt;ul>
&lt;li>Elastic Stack 7.8.0&lt;/li>
&lt;li>macOS 10.15.5&lt;/li>
&lt;li>Vagrant 2.2.9&lt;/li>
&lt;li>VirtualBox 6.0&lt;/li>
&lt;li>CentOS 8.0&lt;/li>
&lt;/ul>
&lt;p>下面的配置和测试过程基于以下 Vagrantfile ，你可以在其它任何同等的环境中测试下面的所有配置。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># -*- mode: ruby -*-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># vi: set ft=ruby :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Every Vagrant development environment requires a box. You can search for
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># boxes at https://atlas.hashicorp.com/search.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BOX_IMAGE = &amp;#34;bento/centos-8&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ES_COUNT = 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NODE_COUNT = 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Vagrant.configure(&amp;#34;2&amp;#34;) do |config|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #设置所有 guest 使用相同的静态 dns 解析 /etc/hosts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config.vm.provision :hosts, :sync_hosts =&amp;gt; true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #用 vagrant 默认密钥对 ssh 登录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config.ssh.insert_key = false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 用于部署 Elasticsearch 服务器的集群
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (1..ES_COUNT).each do |i|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config.vm.define &amp;#34;es#{i}&amp;#34; do |es_config|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> es_config.vm.box = BOX_IMAGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> es_config.vm.hostname = &amp;#34;es#{i}.zenlab.local&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> es_config.vm.network :private_network, ip: &amp;#34;192.168.50.#{i + 10}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> es_config.vm.provision :hosts, :sync_hosts =&amp;gt; true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> es_config.vm.provider :virtualbox do |vb|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vb.memory = 2048
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vb.cpus = 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> es_config.vm.provision :shell, path: &amp;#39;pre-install-ES.sh&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 用于部署 Kibana、Logstash 、APM Server、Heatbeat 和 Packetbeat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config.vm.define &amp;#34;lk&amp;#34; do |lk_config|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lk_config.vm.box = BOX_IMAGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lk_config.vm.hostname = &amp;#34;lk.zenlab.local&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lk_config.vm.network :private_network, ip: &amp;#34;192.168.50.20&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lk_config.vm.network &amp;#39;forwarded_port&amp;#39;, guest: 5601, host: 5601
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lk_config.vm.provision :hosts, :sync_hosts =&amp;gt; true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lk_config.vm.provider :virtualbox do |vb|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vb.memory = 1024
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vb.cpus = 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> #logstash_config.vm.provision :shell, path: &amp;#39;pre-install-ES.sh&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # 两个被管理节点，用于部署监控应用和各种 Beats 代理
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (1..NODE_COUNT).each do |i|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config.vm.define &amp;#34;node#{i}&amp;#34; do |node_config|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node_config.vm.box = BOX_IMAGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node_config.vm.hostname = &amp;#34;node#{i}.zenlab.local&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node_config.vm.network :private_network, ip: &amp;#34;192.168.50.#{i + 20}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node_config.vm.provider :virtualbox do |vb|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vb.memory = 1024
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vb.cpus = 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node_config.vm.provision :shell, path: &amp;#39;pre-install-beats.sh&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Install avahi on all machines
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> config.vm.provision &amp;#34;shell&amp;#34;, inline: &amp;lt;&amp;lt;-SHELL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sh -c &amp;#34;echo &amp;#39;Welcome to Elastic Stack!&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SHELL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注：下文中所有路径中的 &lt;code>/vagrant/&lt;/code> 目录是本 vagrant 测试环境中，所有虚拟机的共享目录，是所有节点上配置文件的原路径。如果你使用的不是 vagrant 环境，你需要在下面的测试中适当的替换。&lt;/p>
&lt;h2 id="三节点-elasticsearch-服务器集群">三节点 Elasticsearch 服务器集群&lt;/h2>
&lt;p>在每个节点上使用下面的初始化脚本，部署 Elasticsearch 服务器。&lt;/p>
&lt;p>使用&lt;code>vagrant up es1 es2 es3&lt;/code>命令创建并启动 ES 服务器三个节点。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># pre-install-ES.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">elastic_version=&amp;#39;7.8.0&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">echo &amp;#34;Provisioning a Elasticsearch &amp;#34;$elastic_version&amp;#34; Server...&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo date &amp;gt; /etc/vagrant_provisioned_at
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo swapoff -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sysctl -w vm.max_map_count=262144
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sysctl -p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sh -c &amp;#34;echo &amp;#39;elasticsearch - nofile 65535&amp;#39; &amp;gt;&amp;gt; /etc/security/limits.conf&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sh -c &amp;#34;echo &amp;#39;**** -- -- -- -- -- -- -- -- ****&amp;#39; &amp;gt; /etc/motd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sh -c &amp;#34;echo &amp;#39;**** Welcome to Elastic Stack Labs&amp;#39; &amp;gt;&amp;gt; /etc/motd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sh -c &amp;#34;echo &amp;#39;**** -- -- -- -- -- -- -- -- ****&amp;#39; &amp;gt;&amp;gt; /etc/motd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sh -c &amp;#34;echo &amp;#39;*&amp;#39; &amp;gt;&amp;gt; /etc/motd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo rpm -ivh /vagrant/rpm/elasticsearch-$elastic_version-x86_64.rpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面的脚本简单的初始化了几个操作系统参数，然后完成了 rpm 包的安装。非vagrant 环境的需要手工上传 rpm 安装文件，和运行以上的命令。&lt;/p>
&lt;h3 id="配置首个-es-服务器节点">配置首个 ES 服务器节点&lt;/h3>
&lt;p>登录 es1 节点&lt;code>vagrant ssh es1&lt;/code> ；&lt;/p>
&lt;p>创建用于节点间传输所需要的数字证书和秘钥文件，下面是所使用的种子文件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># instance.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">instances:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: &amp;#39;es1&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ip: [&amp;#39;192.168.50.11&amp;#39;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dns: [ &amp;#39;es1.zenlab.local&amp;#39; ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: &amp;#34;es2&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ip: [&amp;#39;192.168.50.12&amp;#39;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dns: [ &amp;#39;es2.zenlab.local&amp;#39; ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: &amp;#39;es3&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ip: [&amp;#39;192.168.50.13&amp;#39;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dns: [ &amp;#39;es3.zenlab.local&amp;#39; ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: &amp;#39;lk&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ip: [&amp;#39;192.168.50.20&amp;#39;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dns: [ &amp;#39;lk.zenlab.local&amp;#39; ]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>用 &lt;code> elasticsearch-certutil&lt;/code> 创建证书文件包。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo /usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca --pem --in /vagrant/certs/instance.yml --out /vagrant/certs/certs.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将得到的 zip 文件解压缩在适当的目录里备用。&lt;/p>
&lt;p>重要步骤：在 Elasticsearch 的配置文件目录中放置必要的数字证书文件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo mkdir /etc/elasticsearch/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/certs/ca/ca.crt /etc/elasticsearch/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/certs/es1/* /etc/elasticsearch/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ls /etc/elasticsearch/certs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在 certs 目录中有三个文件：&lt;/p>
&lt;ol>
&lt;li>ca.crt CA 根证书&lt;/li>
&lt;li>es1.crt 服务器证书&lt;/li>
&lt;li>es1.key 私钥文件&lt;/li>
&lt;/ol>
&lt;p>CA 根证书是在所有节点上发起对 ES 服务的 HTTPS 服务所需要的客户端证书。 es1.crt 和 es1.key 这样的必要对需要在所有 ES 节点上部署，用于 ES 节点间的 transport 协议加密传输，每个 ES 节点都是用自己的密钥对文件。&lt;/p>
&lt;p>在 ES1 的主配置文件中打开安全选项和其它必要配置，示例配置文件如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># elasticsearch.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ---------------------------------- Cluster -----------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cluster.name: elk4devops
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ------------------------------------ Node ------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node.name: es1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ----------------------------------- Paths ------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">path.data: /var/lib/elasticsearch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">path.logs: /var/log/elasticsearch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ---------------------------------- Network -----------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">network.host: es1.zenlab.local
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># --------------------------------- Discovery ----------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cluster.initial_master_nodes: [&amp;#34;es1&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">discovery.seed_hosts: [ &amp;#34;es1.zenlab.local&amp;#34; ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ------------------------------- TLS and Cert ---------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#外部服务加密配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.http.ssl.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.http.ssl.key: certs/es1.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.http.ssl.certificate: certs/es1.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.http.ssl.certificate_authorities: certs/ca.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#集群内通讯加密配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.transport.ssl.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.transport.ssl.key: certs/es1.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.transport.ssl.certificate: certs/es1.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.transport.ssl.certificate_authorities: certs/ca.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.monitoring.collection.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># ------------------------------- App Search ---------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">action.auto_create_index: &amp;#34;.app-search-*-logs-*,-.app-search-*,+*&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用以上配置文件覆盖Elasticsearch 默认的配置文件，首次启动第一个 ES 节点的服务。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start elasticsearch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>用下面的命令查看启动日志，直到 elasticsearch 服务正常启动。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo tail -f /var/log/elasticsearch/elk4devops.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>用下面的命令初始化 Elasticsearch 系统内置账号为随机复杂密码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto -u &amp;#34;https://es1.zenlab.local:9200&amp;#34; -b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changed password for user apm_system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PASSWORD apm_system = irpVThXpbFDrdq2rBQUC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changed password for user kibana_system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PASSWORD kibana_system = CxGNlkqQMbcp6u6XuCbk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changed password for user kibana
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PASSWORD kibana = CxGNlkqQMbcp6u6XuCbk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changed password for user logstash_system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PASSWORD logstash_system = EOUiCyQQ97IHwUJs8Eum
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changed password for user beats_system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PASSWORD beats_system = EF8OdPmcpy1bUCgFVQ90
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changed password for user remote_monitoring_user
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PASSWORD remote_monitoring_user = 3ZRBVo5Omu33McoOKgwE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changed password for user elastic
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PASSWORD elastic = ZSzN2idoU6hFa4f0ulPP
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将上面随机生成的密码保存在安全的地方备用，这些内置的超级用户权限大，一旦遗失了密码，可能会造成重大的数据泄露。&lt;/p>
&lt;p>用上面创建的账户测试第一个 ES 节点是否可以通过 https 正常访问，这里也测试 ca 公钥的可用性。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl --cacert /vagrant/certs/ca/ca.crt -u elastic &amp;#39;https://es1.zenlab.local:9200/_cat/nodes?v&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在 es1 服务器的命令行运行以上命令，输入 elastic 的密码。应该可以看到正常的输出。&lt;code>/vagrant/certs/ca/ca.crt&lt;/code> 这个路径替换成你的环境中的相关 ca 证书文件路径。&lt;/p>
&lt;h3 id="配置第二个和第三个-es-服务器节点">配置第二个和第三个 ES 服务器节点&lt;/h3>
&lt;p>剩下的两个节点在加入集群之前都已经通过初始化脚本安装完了 rpm 安装包。剩下的就是逐个节点的部署之前生产的证书文件和修改后的 elasticsearc.yml 主配置文件。在本文档参考的环境中使用如下命令。&lt;/p>
&lt;p>登录 es 2 &lt;code> vagrant ssh es2&lt;/code>&lt;/p>
&lt;p>配置 es2 的证书和秘钥文件，下面的复制原路径需要替换成你所使用的实际路径。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sudo mkdir /etc/elasticsearch/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/certs/ca/ca.crt /etc/elasticsearch/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/certs/es2/* /etc/elasticsearch/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ls /etc/elasticsearch/certs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>部署 es2 的配置文件，然后启动这个节点的 Elasticsearch 服务。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/elasticsearch2.yml /etc/elasticsearch/elasticsearch.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start elasticsearch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>elasticsearch2.yml &lt;/code> 文件的内容如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># ---------------------------------- Cluster -----------------------------------&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">cluster.name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">elk4devops&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># ------------------------------------ Node ------------------------------------&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">node.name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">es2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># ----------------------------------- Paths ------------------------------------&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">path.data&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/lib/elasticsearch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">path.logs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/log/elasticsearch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># ---------------------------------- Network -----------------------------------&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">network.host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">es2.zenlab.local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># --------------------------------- Discovery ----------------------------------&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">cluster.initial_master_nodes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;es1&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">discovery.seed_hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;es1.zenlab.local&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># ------------------------------- TLS and Cert ---------------------------------&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.http.ssl.enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.http.ssl.key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certs/es2.key&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.http.ssl.certificate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certs/es2.crt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.http.ssl.certificate_authorities&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certs/ca.crt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.transport.ssl.enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.transport.ssl.key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certs/es2.key&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.transport.ssl.certificate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certs/es2.crt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.security.transport.ssl.certificate_authorities&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">certs/ca.crt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">xpack.monitoring.collection.enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># ------------------------------- App Search ---------------------------------&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">action.auto_create_index&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;.app-search-*-logs-*,-.app-search-*,+*&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在 es2 的命令用下面的命令查看是否该节点正常加入了集群。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">curl --cacert /vagrant/certs/ca/ca.crt -u elastic &lt;span class="s1">&amp;#39;https://es1.zenlab.local:9200/_cat/nodes?v&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter host password &lt;span class="k">for&lt;/span> user &lt;span class="s1">&amp;#39;elastic&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.50.11 &lt;span class="m">37&lt;/span> &lt;span class="m">94&lt;/span> &lt;span class="m">0&lt;/span> 0.00 0.05 0.06 dilmrt * es1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.50.12 &lt;span class="m">17&lt;/span> &lt;span class="m">96&lt;/span> &lt;span class="m">9&lt;/span> 0.49 0.20 0.07 dilmrt - es2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意上面 ca.crt 文件的路径，要输入的是 elasstic 用户的密码。 正常情况下两个节点都会出现在结果清单中。&lt;/p>
&lt;p>用相似的命令初始化和启动 es3 节点的服务。es3 的主配置文件样例如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ---------------------------------- Cluster -----------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cluster.name: elk4devops
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ------------------------------------ Node ------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node.name: es3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ----------------------------------- Paths ------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">path.data: /var/lib/elasticsearch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">path.logs: /var/log/elasticsearch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ---------------------------------- Network -----------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">network.host: es3.zenlab.local
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># --------------------------------- Discovery ----------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cluster.initial_master_nodes: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;es1&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">discovery.seed_hosts: &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;es1.zenlab.local&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ------------------------------- TLS and Cert ---------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.enabled: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.http.ssl.enabled: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.http.ssl.key: certs/es3.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.http.ssl.certificate: certs/es3.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.http.ssl.certificate_authorities: certs/ca.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.transport.ssl.enabled: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.transport.ssl.key: certs/es3.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.transport.ssl.certificate: certs/es3.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.security.transport.ssl.certificate_authorities: certs/ca.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xpack.monitoring.collection.enabled: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ------------------------------- App Search ---------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">action.auto_create_index: &lt;span class="s2">&amp;#34;.app-search-*-logs-*,-.app-search-*,+*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最终集群的测试状态如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@es1 ~&lt;span class="o">]&lt;/span>$ curl --cacert /vagrant/certs/ca/ca.crt -u elastic &lt;span class="s1">&amp;#39;https://es1.zenlab.local:9200/_cat/nodes?v&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter host password &lt;span class="k">for&lt;/span> user &lt;span class="s1">&amp;#39;elastic&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.50.11 &lt;span class="m">20&lt;/span> &lt;span class="m">96&lt;/span> &lt;span class="m">6&lt;/span> 0.18 0.09 0.03 dilmrt * es1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.50.13 &lt;span class="m">50&lt;/span> &lt;span class="m">96&lt;/span> &lt;span class="m">2&lt;/span> 0.02 0.07 0.03 dilmrt - es3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.50.12 &lt;span class="m">25&lt;/span> &lt;span class="m">96&lt;/span> &lt;span class="m">1&lt;/span> 0.00 0.02 0.00 dilmrt - es2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="配置-kibana-服务器">配置 Kibana 服务器&lt;/h2>
&lt;p>服务是必要的的管理界面，是数据搜索、可视化的重要工具。在 Elasticsearch 服务打开了外部 https 加密访问的情况下，Kibana 服务器的安装和配置也需要做如下调整。&lt;/p>
&lt;p>Kibana 的 rpm 安装这里省略。下面直接进入相关的主要配置步骤。&lt;/p>
&lt;p>复制用于链接 ES 集群的证书&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo mkdir /etc/kibana/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/certs/ca/ca.crt /etc/kibana/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/certs/lk/* /etc/kibana/certs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ls /etc/kibana/certs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改默认的 kibana.yml 配置文件，然后覆盖默认的配置文件后启动 kibana 服务。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/kibna.yml /etc/kibana/kibana.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cat /etc/kibana/kibana.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start kibana
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>监控 kibana 的启动日志，直到它正常启动。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo tail -f /var/log/messages
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>启动后，使用浏览器访问 &lt;code>https://lk.zenlab.lcoal:5601 &lt;/code> Kibana 服务，使用 elastic 用户的密码登录，确保 Kibana 正常启动。&lt;/p>
&lt;h2 id="配置权限-beats-账号">配置权限 Beats 账号&lt;/h2>
&lt;p>在使用 Beats 采集监控数据的时候，Beats 的配置文件中需要配置一个后台 Elasticsearch 服务访问账号，安全起见需求需要将这个账号配置为只写权限。配置步骤如下。&lt;/p>
&lt;p>在 Kibana 的用户管理中创建名为 &lt;code>beats-writer&lt;/code> 的角色，如下图所示。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/images/writer-role.jpeg"
loading="lazy"
>&lt;/p>
&lt;p>以上这个角色拥有 filebeat 和 Metricbeat 两个索引的访问权限，这里是为了评估用户角色管理的工作量，否则可以每个索引单独设置一套必要权限的角色和用户，从而实现更安全的防护。&lt;/p>
&lt;p>然后创建名为 &lt;code>beats-writer&lt;/code> 的用户，设置一个密码，将它赋予 &lt;code>beats-writer&lt;/code> 的角色（上面创建的）。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/images/beats-writer-user.jpeg"
loading="lazy"
>&lt;/p>
&lt;p>这样它就可以用于所有 Beats 节点的配置了。&lt;/p>
&lt;h2 id="初始化首个-beats-节点">初始化首个 Beats 节点&lt;/h2>
&lt;p>在 vagrant 测试环境中启动第一个用于测试 Beats 的节点。&lt;/p>
&lt;p>&lt;code>vagrant up node1&lt;/code>&lt;/p>
&lt;p>这里使用了初始脚本安装相关的 rpm 安装包。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># author: Martin Liu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># url:martinliu.cn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">elastic_version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;7.8.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Installing a Filebeat &amp;#34;&lt;/span>&lt;span class="nv">$elastic_version&lt;/span>&lt;span class="s2">&amp;#34; agent...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo rpm -ivh /vagrant/rpm/filebeat-&lt;span class="nv">$elastic_version&lt;/span>-x86_64.rpm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> filebeat.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo rpm -ivh /vagrant/rpm/metricbeat-&lt;span class="nv">$elastic_version&lt;/span>-x86_64.rpm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> metricbeat.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo rpm -ivh /vagrant/rpm/auditbeat-&lt;span class="nv">$elastic_version&lt;/span>-x86_64.rpm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> auditbeat.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>登录该节点进行 Beats 的初始化配置。目前 Elasticsearch 集群还是空白的，还没有初始化任何 Beats 相关的索引、可视化和仪表板。这个初始化工作是通过，每种 Beats 的 setup 命令完成的。这个 setup 命令只需要在一个节点上成功执行一次即可，其它节点的配置文件中，连 setup 命令相关的配置都不需要。&lt;/p>
&lt;p>这里使用的 filebeat.yml 参考文件如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#=========================== Filebeat inputs =============================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">filebeat.inputs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- type: log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> enabled: false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> paths:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - /var/log/*.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#============================= Filebeat modules ===============================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">filebeat.config.modules:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> path: ${path.config}/modules.d/*.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> reload.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> reload.period: 5s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#==================== Elasticsearch template setting ==========================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">setup.template.settings:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index.number_of_shards: 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index.codec: best_compression
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#============================== Kibana =====================================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">setup.kibana:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> host: &amp;#34;https://lk.zenlab.local:5601&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#-------------------------- Elasticsearch output ------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">output.elasticsearch:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hosts: [&amp;#34;es1.zenlab.local:9200&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> username: &amp;#34;elastic&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> password: &amp;#34;1l1lqVMMWMbLI6DCH0dQ&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protocol: https
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#================================ Processors =====================================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">processors:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_host_metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> netinfo.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache.ttl: 5m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> geo:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: bj-dc-01
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location: 35.5528, 116.2360
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> continent_name: Asia
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> country_iso_code: CN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> region_name: Beijing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> region_iso_code: CN-BJ
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> city_name: Beijing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_cloud_metadata: ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_docker_metadata: ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_kubernetes_metadata: ~
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>目前的计划是配置 Beats 直接访问 Elasticsearch 后台服务，不通过 Logstash 中转。以后增加这个参考配置。&lt;/p>
&lt;p>在执行 filebeat setup 命令之前，还需要在 Beats 节点上部署上面生成的 ca 公钥文件。参考命令如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo update-ca-trust enable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/certs/ca/ca.crt /etc/pki/ca-trust/source/anchors/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo update-ca-trust extract
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里把 ca.crt 公钥文件部署到了 CentOS 操作系统的的可信 CA 发放机构的目录中，其它操作系统中的这个证书路径可能不同，需要做替换，包括以上的证书更新命令也可能需要调整。&lt;/p>
&lt;p>经过以上的配置之后，用之前的 curl 命令测试一下是否这个证书生效了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>vagrant@es1 ~&lt;span class="o">]&lt;/span>$ curl -u elastic &lt;span class="s1">&amp;#39;https://es1.zenlab.local:9200/_cat/nodes?v&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter host password &lt;span class="k">for&lt;/span> user &lt;span class="s1">&amp;#39;elastic&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.50.11 &lt;span class="m">20&lt;/span> &lt;span class="m">96&lt;/span> &lt;span class="m">6&lt;/span> 0.18 0.09 0.03 dilmrt * es1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.50.13 &lt;span class="m">50&lt;/span> &lt;span class="m">96&lt;/span> &lt;span class="m">2&lt;/span> 0.02 0.07 0.03 dilmrt - es3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.50.12 &lt;span class="m">25&lt;/span> &lt;span class="m">96&lt;/span> &lt;span class="m">1&lt;/span> 0.00 0.02 0.00 dilmrt - es2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这次在参数中故意省略了 ca 证书文件路径，如果 curl 可以正常访问，那么 Beats 程序也可以，而且不需要在 Beats 配置文件中生命公钥的路径，更有利于在以后切换到另外一套 CA 秘钥后，配置文件的更新工作。&lt;/p>
&lt;p>这里省略 Beats 配置文件的展示，参考一下命令做初始化前的准备。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo cp -f /vagrant/filebeat.yml /etc/filebeat/filebeat.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp -f /vagrant/metricbeat.yml /etc/metricbeat/metricbeat.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo filebeat modules enable system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>为了测试的方便起见，在 filebeat.yml 和 metricbeat.yml 文件中使用了超级用户 elastic ，如果这个动作伴随着 Elastic Stack 的版本升级需要经常发生，此处需要配置一个 Beats setup 用的专用角色和账户，从而避免多次使用超级用户。&lt;/p>
&lt;p>下面运行 setup 命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">filebeat setup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">metricbeat setup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这两个命令正常运行后，在 Kibana 里会增加增加相关的索引、pipeline、可视化和仪表板等对象。&lt;/p>
&lt;p>使用下面的命令测试 filebeat 和 metricbeat 是否能正常的采集数据并传输到后台。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">filebeat -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">metricbeat -e
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果报错的话，将 level 在配置文件中设置为 debug，方便调试。调试成功之后，应该在 Kibana 的界面中，可以看到 node1 节点，点击后能看到实时更新过来的日志和监控指标。&lt;/p>
&lt;p>&lt;img src="https://martinliu.cn/images/metric-node1.jpeg"
loading="lazy"
>&lt;/p>
&lt;h2 id="在新的节点上部署-beats">在新的节点上部署 Beats&lt;/h2>
&lt;p>在新的需要部署 Beats 的节点上，可以使用下面的脚本配置和部署。&lt;/p>
&lt;p>add-agent.sh&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># author: Martin Liu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># url:martinliu.cn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">elastic_version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;7.8.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">b_user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;beats-writer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">b_pwd&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;DevOps1234&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;############## Installing a Beats &amp;#34;&lt;/span>&lt;span class="nv">$elastic_version&lt;/span>&lt;span class="s2">&amp;#34; agent...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo rpm -ivh /vagrant/rpm/filebeat-&lt;span class="nv">$elastic_version&lt;/span>-x86_64.rpm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> filebeat.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo filebeat modules &lt;span class="nb">enable&lt;/span> system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo rpm -ivh /vagrant/rpm/metricbeat-&lt;span class="nv">$elastic_version&lt;/span>-x86_64.rpm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> metricbeat.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;################### Setup Public CA...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo update-ca-trust &lt;span class="nb">enable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp /vagrant/certs/ca/ca.crt /etc/pki/ca-trust/source/anchors/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo update-ca-trust extract
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;################### Update Beats configuration files ...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp -f /vagrant/filebeat-v1.yml /etc/filebeat/filebeat.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp -f /vagrant/metricbeat-v1.yml /etc/metricbeat/metricbeat.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;################### Setup Keystor for Beats ...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$b_user&lt;/span> &lt;span class="p">|&lt;/span> sudo filebeat keystore add BEATS_WRITER_USERNAME --stdin --force
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$b_pwd&lt;/span> &lt;span class="p">|&lt;/span> sudo filebeat keystore add BEATS_WRITER_PW --stdin --force
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$b_user&lt;/span> &lt;span class="p">|&lt;/span> sudo metricbeat keystore add BEATS_WRITER_USERNAME --stdin --force
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$b_pwd&lt;/span> &lt;span class="p">|&lt;/span> sudo metricbeat keystore add BEATS_WRITER_PW --stdin --force
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;################### Start Beats services ...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start metricbeat.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start filebeat.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>简单说明以上脚本的功能：&lt;/p>
&lt;ul>
&lt;li>用 rpm 安装包安装所需要的 Beats，filebeat 开启 system 模块。&lt;/li>
&lt;li>在目标操作系统里部署必须的 ca 证书到默认路径中，并启用。从而省略在所有 beats 文件中生命公钥文件的路径。&lt;/li>
&lt;li>覆盖更新默认的 Beats 配置文件。&lt;/li>
&lt;li>创建并初始化 Beats 配置文件中所需要的 beats-writer 用户名和密码。从而消除消除所有明文密码。以上脚本只需要在节点上更新的时候才允许，允许后删除，从而不会留下任何明文密码和账户信息。Beats 的任何模块配置中，如果需要配置任何密码账户也需要如法炮制，从而保证基本的安全性。&lt;/li>
&lt;li>启动 Beats 服务&lt;/li>
&lt;/ul>
&lt;p>以上脚本所使用的配置文件文件如下。&lt;/p>
&lt;p>filebeat-v1.yml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">filebeat.inputs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- type: log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> enabled: false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> paths:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - /var/log/*.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#============================= Filebeat modules ===============================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">filebeat.config.modules:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> path: ${path.config}/modules.d/*.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> reload.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> reload.period: 60s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#-------------------------- Elasticsearch output ------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">output.elasticsearch:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hosts: [&amp;#34;es1.zenlab.local:9200&amp;#34;,&amp;#34;es2.zenlab.local:9200&amp;#34;,&amp;#34;es3.zenlab.local:9200&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> password: ${BEATS_WRITER_PW}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> username: ${BEATS_WRITER_USERNAME}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protocol: https
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#================================ Processors =====================================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">processors:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_host_metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> netinfo.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache.ttl: 5m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> geo:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: bj-dc-01
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location: 35.5528, 116.2360
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> continent_name: Asia
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> country_iso_code: CN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> region_name: Beijing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> region_iso_code: CN-BJ
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> city_name: Beijing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_cloud_metadata: ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_docker_metadata: ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_kubernetes_metadata: ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> target: &amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> service.name: &amp;#39;Elastic Cloud&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> service.id: &amp;#39;ec-ww&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#==================== Best Practice Configuration ==========================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">setup.ilm.check_exists: false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">logging.level: error
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">queue.spool: ~
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>metricbeat.yml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># =========================== Modules configuration ============================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">metricbeat.config.modules:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> path: ${path.config}/modules.d/*.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> reload.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> reload.period: 120s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#-------------------------- Elasticsearch output ------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">output.elasticsearch:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hosts: [&amp;#34;es1.zenlab.local:9200&amp;#34;,&amp;#34;es2.zenlab.local:9200&amp;#34;,&amp;#34;es3.zenlab.local:9200&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> password: ${BEATS_WRITER_PW}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> username: ${BEATS_WRITER_USERNAME}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protocol: https
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#================================ Processors =====================================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">processors:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_host_metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> netinfo.enabled: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache.ttl: 5m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> geo:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: bj-dc-01
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location: 35.5528, 116.2360
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> continent_name: Asia
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> country_iso_code: CN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> region_name: Beijing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> region_iso_code: CN-BJ
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> city_name: Beijing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_cloud_metadata: ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_docker_metadata: ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_kubernetes_metadata: ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - add_fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> target: &amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fields:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> service.name: &amp;#39;Elastic Cloud&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> service.id: &amp;#39;ec-ww&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#==================== Best Practice Configuration ==========================
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">setup.ilm.check_exists: false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">logging.level: error
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">queue.spool: ~
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>解释一下相关的重要配置。&lt;/p>
&lt;ul>
&lt;li>netinfo.enabled: true 收集所有网卡的配置信息，覆盖多块网卡的情况&lt;/li>
&lt;li>geo: 地理位置信息对以后基于位置的查询打下基础，这对于监控和信息安全都非常重要。为以后基于 host 的上下文关联打下基础，方便在 apm、log、metric、heartbeat 和机器学习的界面中相互跳转。&lt;/li>
&lt;li>add_fields: 在 fields 下面维护 ECS 数据定义中的必要的有意义的数据，在网上查询 ECS 的数据定义，这些字段可以优化以后的搜索逻辑。&lt;/li>
&lt;li>最后一段是其它必要的最佳实践设置&lt;/li>
&lt;li>output.elasticsearch : 这里使用了三个 ES 节点的链接地址，这里应该使用至少 2 个 Elasticsearch 集群中的 ingest 节点。&lt;/li>
&lt;/ul>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>本文没有展开说明和配置的地方包括：对 Best 节点的工作状态的监控；对索引生命周期规则的调优（用尽磁盘），冷热数据的自动化迁移规则。&lt;/p>
&lt;p>完成的配置包括：&lt;/p>
&lt;ul>
&lt;li>配置 ES 3 节点集群内部的 TLS 加密传输，对外的 HTTPS 加密协议服务&lt;/li>
&lt;li>Kibana 基于证书的 SSL 加密配置&lt;/li>
&lt;li>Beats 的高可靠性后台传输数据，TLS加密传输数据&lt;/li>
&lt;li>用基于角色的访问控制，创建了只写权限的 beats-writer 角色和用户。&lt;/li>
&lt;li>用 beats 的 keystore 将配置文件中的明文密码消除。&lt;/li>
&lt;/ul></description></item></channel></rss>